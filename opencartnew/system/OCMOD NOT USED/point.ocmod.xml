<modification>
	<name>
		Customer Point
	</name>
	<version>
		1.0.0
	</version>
	<code>
		customer_point
	</code>
	<author>
		Mices Technology
	</author>
	<link>
		https://www.mices.com.my/
	</link>
	<!-- Add point award functionality to maintenance startup -->
	<file path="catalog/controller/startup/maintenance.php">
		<!-- Adds point award functionality to the maintenance startup process by injecting the point award controller -->
		<operation>
			<search>
				<![CDATA['common/language/language',]]>
			</search>
			<add position="after">
				<![CDATA['extension/total/point/cliAwardPoint',]]>
			</add>
		</operation>
	</file>
	<!-- Enhance checkout functionality with point system integration -->
	<file path="catalog/controller/journal3/checkout.php">
		<!-- Retrieves point conditions for the customer's group to determine point system eligibility and rules -->
		<operation>
			<search>
				<![CDATA[$total_items = $this->cart->countProducts() + (isset($this->session->data['vouchers']) ? count($this->session->data['vouchers']) : 0);]]>
			</search>
			<add position="before">
				<![CDATA[     $point_condition = $this->epoint->getCustomerGroupConditions($this->customer->getGroupId());             ]]>
			</add>
		</operation>
		<!-- Adds point system status, current point balance, and related messages to the checkout data structure -->
		<operation>
			<search>
				<![CDATA['reward_message'             => null,]]>
			</search>
			<add position="after">
				<![CDATA[
				'point_status'              => isset($point_condition['status']) ? (bool)$point_condition['status'] : false,
				'point'                     => Arr::get($this->session->data, 'point'),
				'point_message'             => null,
				]]>
			</add>
		</operation>
		<!-- Loads point system language files and initializes the EPoint system for point management -->
		<operation>
			<search>
				<![CDATA[$this->load->language('checkout/cart');]]>
			</search>
			<add position="before">
				<![CDATA[
				$this->load->language('extension/total/point');
				$this->epoint = new EPoint\EPoint($this->registry);
				]]>
			</add>
		</operation>
		<!-- Adds customer's current point balance display to the checkout interface, showing available points minus points used in cart -->
		<operation>
			<search>
				<![CDATA['button_reward'  => $this->language->get('button_reward'),]]>
			</search>
			<add position="after">
				<![CDATA[       'entry_point'   => sprintf($this->language->get('entry_point'), (int)$this->epoint->getCustomerPoint($this->customer->getId()) - $this->cart->getUsedPointInCart()),             ]]>
			</add>
		</operation>
		<!-- Validates point redemption requests and processes them according to customer group conditions and point balance -->
		<operation>
			<search>
				<![CDATA[if ($this->config->get($this->journal3->isOC2() ? 'reward_status' : 'total_reward_status') && $this->request->post['reward']) {]]>
			</search>
			<add position="before">
				<![CDATA[
				if ($this->config->get($this->journal3->isOC2() ? 'point_status' : 'total_point_status') && $this->request->post['point']) {
				$this->load->language('extension/total/point');
				
				$cg_id = $this->customer->getGroupId();
				
				$condition = $this->epoint->getCustomerGroupConditions($cg_id);
				
				if ($condition && $condition['status']) {
				$points = $this->epoint->getCustomerPoint($this->customer->getId()) - $this->cart->getUsedPointInCart();
				
				if (empty($this->request->post['point'])) {
				$error['point'] = $this->language->get('error_point');
				unset($this->session->data['point']);
				} elseif ($this->request->post['point'] > $points) {
				$error['point'] = sprintf($this->language->get('error_points'), $this->request->post['point']);
				unset($this->session->data['point']);
				} elseif ($condition['redeem_min'] && $this->request->post['point'] < $condition['redeem_min']) {
				$error['point'] = sprintf($this->language->get('error_point_min'), $condition['redeem_min']);
				unset($this->session->data['point']);
				} elseif ($condition['redeem_multiply'] && ($this->request->post['point'] % $condition['redeem_multiply'] != 0)) {
				$error['point'] = sprintf($this->language->get('error_point_multiply'), $condition['redeem_multiply']);
				unset($this->session->data['point']);
				} else {
				$this->session->data['point'] = abs($this->request->post['point']);
				$json['point_message'] = $this->language->get('text_success');
				}
				} else {
				unset($this->session->data['point']);
				}
				} else {
				unset($this->session->data['point']);
				}
				]]>
			</add>
		</operation>
		<!-- Enhances product links with point redemption information including redemption status and point requirements -->
		<operation>
			<search>
				<![CDATA['href'       => str_replace('&amp;', '&', $this->url->link('product/product', 'product_id=' . $product['product_id'])),]]>
			</search>
			<add position="replace">
				<![CDATA[
				'is_redeem'  => (int)$product['is_redeem'],
				'point_to_redeem' => $product['point_to_redeem'],
				'total_point_to_redeem' => number_format($product['point_to_redeem'] * $product['quantity']),
				'href'       => $product['is_redeem'] ? str_replace('&amp;', '&', $this->url->link('product/product', 'product_id=' . $product['product_id'] . '&can_redeem=1')) : str_replace('&amp;', '&', $this->url->link('product/product', 'product_id=' . $product['product_id'])),
				// 'href'       => str_replace('&amp;', '&', $this->url->link('product/product', 'product_id=' . $product['product_id'])),
				]]>
			</add>
		</operation>
		<!-- Validates cart updates involving point redemption products, ensuring sufficient point balance -->
		<operation>
			<search>
				<![CDATA[$this->cart->update($key, $qty);]]>
			</search>
			<add position="replace">
				<![CDATA[
				$cart = $this->cart->getCart($key);
				$error_redeem = false;
				
				if ($cart['is_redeem']) {
				$point_balance = (int)$this->epoint->getCustomerPoint($this->customer->getId()) - (int)($this->session->data['point'] ?? 0);
				$used_point_in_cart_except = $this->cart->getUsedPointInCartExcept($key);
				$option = array_filter(json_decode($cart['option'], true));
				$point_to_redeem = 0;
				
				if (empty($option)) {
				$point_to_redeem += (int)$this->cart->getPointToRedeem($cart['product_id'], $qty);
				} else {
				foreach ($option as $product_option_id => $product_option_value_id) {
				$point_to_redeem += (int)$this->cart->getPointToRedeem($cart['product_id'], $qty, $product_option_id, $product_option_value_id);
				}
				}
				
				if ($point_balance < $used_point_in_cart_except || $point_balance < ($used_point_in_cart_except + $point_to_redeem)) {
				$error_redeem = true;
				} else {
				$this->cart->update($key, $qty);
				}
				} else {
				$this->cart->update($key, $qty);
				}
				]]>
			</add>
		</operation>
		<!-- Adds error handling for point redemption failures, displaying appropriate error messages -->
		<operation>
			<search index="0">
				<![CDATA[$json = $this->getCheckoutData($this->model_journal3_checkout->update());]]>
			</search>
			<add position="after">
				<![CDATA[
				if ($error_redeem) {
				$json['error']['error_redeem'] = $this->language->get('error_redeem');
				}
				]]>
			</add>
		</operation>
		<!-- Updates the displayed point balance after checkout data changes to reflect current point status -->
		<operation>
			<search>
				<![CDATA[$json = $this->getCheckoutData($this->model_journal3_checkout->update());]]>
			</search>
			<add position="after">
				<![CDATA[$json['point_balance'] = sprintf($this->language->get('entry_point'), (int)$this->epoint->getCustomerPoint($this->customer->getId()) - $this->cart->getUsedPointInCart());]]>
			</add>
		</operation>
		<!-- Enhances JSON response handling to properly handle and display point-related errors -->
		<operation>
			<search index="3">
				<![CDATA[$this->renderJson('success', $json);]]>
			</search>
			<add position="replace">
				<![CDATA[
				if (!empty($json['error'])) {
				$this->renderJson('error', $json);
				} else {
				$this->renderJson('success', $json);
				}
				]]>
			</add>
		</operation>
	</file>
	<!-- Add point system to checkout form display conditions -->
	<file path="catalog/view/theme/journal3/template/journal3/checkout/coupon_voucher_reward.twig">
		<operation>
			<search>
				<![CDATA[coupon_status || voucher_status || (reward_status && customer_id)]]>
			</search>
			<add position="replace">
				<![CDATA[coupon_status || voucher_status || (reward_status && customer_id) || (point_status && customer_id)]]>
			</add>
		</operation>
		<!-- Add point input form to checkout -->
		<operation>
			<search>
				<![CDATA[<div class="form-group form-reward" v-if="reward_status && customer_id">]]>
			</search>
			<add position="before">
				<![CDATA[
				<div class="form-group form-point" v-if="point_status && customer_id">
				<label id="point-balance" class="control-label" for="input-point">{{ entry_point }}</label>
				<div class="input-group">
				<input type="text" v-model="point" placeholder="{{ entry_point }}" id="input-point" class="form-control"/>
				<span class="input-group-btn">
				<button type="button" v-on:click="applyReward()" data-loading-text="{{ text_loading }}" class="btn btn-primary"><span>{{ button_submit }}</span></button>
				</span>
				</div>
				<span class="text-success" v-if="point_message" v-html="point_message"></span>
				<span class="text-danger" v-if="error && error.point" v-html="error.point"></span>
				</div>
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/view/theme/journal3/js/checkout.js">
		<operation>
			<search>
				<![CDATA[voucher: this.voucher,]]>
			</search>
			<add position="after">
				<![CDATA[             point: this.point,         ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[this.reward_message = json.response.reward_message;]]>
			</search>
			<add position="after">
				<![CDATA[           this.point_message = json.response.point_message;         ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[if (json.response.error.total_mismatch) {]]>
			</search>
			<add position="before">
				<![CDATA[
				if (json.response.error.error_redeem) {
				alert(json.response.error.error_redeem);
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$('#cart-items.count-badge').html(json.response.total_items);]]>
			</search>
			<add position="after">
				<![CDATA[$('#point-balance').html(json.response.point_balance);]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[updateCartItem: function (product) {]]>
			</search>
			<add position="after">
				<![CDATA[ $('.checkout-section.cart-section .section-body').append('<div class="journal-loading-overlay" style="position: absolute;"><div class="journal-loading"><i class="fa fa-spinner fa-spin"></i></div></div>');         ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[deleteCartItem: function (product) {]]>
			</search>
			<add position="after">
				<![CDATA[ $('.checkout-section.cart-section .section-body').append('<div class="journal-loading-overlay" style="position: absolute;"><div class="journal-loading"><i class="fa fa-spinner fa-spin"></i></div></div>');         ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[self.update(json);]]>
			</search>
			<add position="after">
				<![CDATA[ $('.journal-loading-overlay').remove();         ]]>
			</add>
		</operation>
	</file>
	<file path="catalog/model/checkout/order.php">
		<operation>
			<search>
				<![CDATA[$this->cache->delete('product');]]>
			</search>
			<add position="before">
				<![CDATA[
				if ($customer_info['customer_group_id'] == $this->config->get('config_customer_group_id')) {
				$this->setOrderAwardPointStatus($order_id, 0);
				}
				
				if (in_array($order_status_id, $this->config->get('total_point_award_coupon_order_status'))) {
				$order_products = $this->getOrderProducts($order_id);
				
				foreach ($order_products as $order_product) {
				$redeem_coupon_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "redeem_coupon WHERE product_id = '" . (int)$order_product['product_id'] . "' LIMIT 1");
				
				$redeem_coupon = $redeem_coupon_query->row;
				
				if ($redeem_coupon) {
				do {
				$new_code_existed = false;
				$new_code = $redeem_coupon['code'] . $this->generateRandomCode();
				
				$coupon_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "coupon WHERE code = '" . $this->db->escape($new_code) . "' LIMIT 1");
				
				if ($coupon_query->num_rows > 0) {
				$new_code_existed = true;
				}
				} while ($new_code_existed);
				
				$this->db->query("INSERT INTO " . DB_PREFIX . "coupon SET customer_id = '" . (int)$order_info['customer_id'] . "', name = '" . $this->db->escape($redeem_coupon['name']) . "', code = '" . $this->db->escape($new_code) . "', discount = '" . (float)$redeem_coupon['discount'] . "', type = '" . $this->db->escape($redeem_coupon['type']) . "', total = '" . (float)$redeem_coupon['total'] . "', logged = '" . (int)$redeem_coupon['logged'] . "', shipping = '" . (int)$redeem_coupon['shipping'] . "', date_start = '" . $this->db->escape($redeem_coupon['date_start']) . "', date_end = '" . $this->db->escape($redeem_coupon['date_end']) . "', uses_total = '" . (int)$redeem_coupon['uses_total'] . "', uses_customer = '" . (int)$redeem_coupon['uses_customer'] . "', status = '" . (int)$redeem_coupon['status'] . "', coupon_type = '" . (int)$redeem_coupon['coupon_type'] . "', date_added = NOW()");
				
				$coupon_id = $this->db->getLastId();
				
				$redeem_coupon_product_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "redeem_coupon_product WHERE redeem_coupon_id = '" . (int)$redeem_coupon['redeem_coupon_id'] . "'");
				
				foreach ($redeem_coupon_product_query->rows as $redeem_coupon_product) {
				$this->db->query("INSERT INTO " . DB_PREFIX . "coupon_product SET coupon_id = '" . (int)$coupon_id . "', product_id = '" . (int)$redeem_coupon_product['product_id'] . "'");
				}
				
				$redeem_coupon_category_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "redeem_coupon_category WHERE redeem_coupon_id = '" . (int)$redeem_coupon['redeem_coupon_id'] . "'");
				
				foreach ($redeem_coupon_category_query->rows as $redeem_coupon_category) {
				$this->db->query("INSERT INTO " . DB_PREFIX . "coupon_category SET coupon_id = '" . (int)$coupon_id . "', category_id = '" . (int)$redeem_coupon_category['category_id'] . "'");
				}
				}
				}
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[public function addOrderHistory]]>
			</search>
			<add position="before">
				<![CDATA[
				function generateRandomCode($length = 10) {
				$characters = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';
				$random_code = '';
				
				for ($i = 0; $i < $length; $i++) {
				$random_code .= $characters[rand(0, strlen($characters) - 1)];
				}
				
				return $random_code;
				}
				
				public function setOrderAwardPointStatus($order_id, $award_point_status) {
				$this->db->query("UPDATE " . DB_PREFIX . "order SET award_point_status = '" . (int)$award_point_status . "' WHERE order_id = '" . (int)$order_id . "'");
				}
				
				public function getOrderPendingAwardPoint() {
				$sql = "SELECT * FROM " . DB_PREFIX . "order WHERE award_point_status = '0' AND date_added >= '2024-01-01 00:00:00'";
				
				$query = $this->db->query($sql);
				
				return $query->rows;
				}
				
				public function getLatestOrderStatus($order_id) {
				$sql = "SELECT * FROM " . DB_PREFIX . "order_history WHERE order_id = '" . (int)$order_id . "' ORDER BY order_history_id DESC LIMIT 1";
				
				$query = $this->db->query($sql);
				
				return $query->row;
				}
				
				public function getReturnByProductId($order_id, $product_id) {
				$sql = "SELECT * FROM " . DB_PREFIX . "return WHERE order_id = '" . (int)$order_id . "' AND product_id = '" . (int)$product_id . "' LIMIT 1";
				
				$query = $this->db->query($sql);
				
				return $query->row;
				}
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/controller/account/account.php">
		<operation>
			<search>
				<![CDATA[$data['transaction'] = $this->url->link('account/transaction', '', true);]]>
			</search>
			<add position="after">
				<![CDATA[
				$data['point'] = $this->url->link('account/point', '', true);
				$data['coupon'] = $this->url->link('account/coupon', '', true);
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/view/theme/journal3/template/account/account.twig">
		<operation>
			<search>
				<![CDATA[<li class="edit-returns"><a href="{{ return }}">{{ text_return }}</a></li>]]>
			</search>
			<add position="after">
				<![CDATA[
				<li class="edit-transactions"><a href="{{ point }}">{{ text_points }}</a></li>
				<li class="edit-transactions"><a href="{{ coupon }}">{{ text_coupons }}</a></li>
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/language/en-gb/account/account.php">
		<operation>
			<search>
				<![CDATA[$_['text_tracking']       = 'Custom Affiliate Tracking Code';]]>
			</search>
			<add position="after">
				<![CDATA[
				$_['text_points']       = 'Points';
				$_['text_coupons']      = 'Coupons';
				]]>
			</add>
		</operation>
	</file>
	<!--
	<file path="admin/controller/sale/order.php">
	<operation>
	<search>
	<![CDATA[extensions = $this->model_setting_extension->getInstalled('fraud');]]>
	</search>
	<add position="before">
	<![CDATA[
	$content = $this->load->controller('extension/total/point/history');
	
	if ($content) {
	$data['tabs'][] = array(
	'code'    => 'total_point',
	'title'   => 'Point History',
	'content' => $content
	);
	}
	]]>
	</add>
	</operation>
	<operation>
	<search>
	<![CDATA[$data['products'][] = array(]]>
	</search>
	<add position="after">
	<![CDATA[
	'is_redeem' => $product['is_redeem'],
	'point_to_redeem' => $product['point_to_redeem'],
	'total_point_to_redeem' => number_format($product['point_to_redeem'] * $product['quantity']),
	]]>
	</add>
	</operation>
	<operation>
	<search index="0">
	<![CDATA[$product_data[] = array(]]>
	</search>
	<add position="after">
	<![CDATA[
	'is_redeem' => $product['is_redeem'],
	'point_to_redeem' => $product['point_to_redeem'],
	'total_point_to_redeem' => number_format($product['point_to_redeem'] * $product['quantity']),
	]]>
	</add>
	</operation>
	</file>
	-->
	<file path="admin/view/template/sale/order_info.twig">
		<operation>
			<search>
				<![CDATA[$('#history').load('index.php?route=sale/order/history&user_token={{ user_token }}&order_id={{ order_id }}');]]>
			</search>
			<add position="before">
				<![CDATA[
				$('#tab-total_point').delegate('.pagination a', 'click', function(e) {
				e.preventDefault();
				
				$('#tab-total_point').load(this.href);
				});
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[{% endfor %}</td>]]>
			</search>
			<add position="replace">
				<![CDATA[
				{% endfor %}
				{% if product.is_redeem %}
				<span style="
				font-size: 1rem;
				line-height: 1.5rem;
				padding-top: 0.25rem;
				padding-bottom: 0.25rem;
				padding-left: 0.75rem;
				padding-right: 0.75rem;
				border-radius: 9999px;
				width: -moz-fit-content;
				width: fit-content;
				background-color: rgb(187, 247, 208);
				color: rgb(22, 101, 52);
				">Redeem: {{ product.total_point_to_redeem }} pts</span>
				{% endif %}
				</td>
				]]>
			</add>
		</operation>
	</file>
	<file path="admin/controller/common/column_left.php">
		<operation>
			<search>
				<![CDATA[$this->url->link('catalog/product', 'user_token=' . $this->session->data['user_token'], true),]]>
			</search>
			<add position="replace">
				<![CDATA[$this->url->link('catalog/product', 'user_token=' . $this->session->data['user_token'] . '&type=1', true),]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[if ($this->user->hasPermission('access', 'catalog/recurring')) {]]>
			</search>
			<add position="before">
				<![CDATA[
				$redeem = array();
				
				if ($this->user->hasPermission('access', 'catalog/product')) {
				$redeem[] = array(
				'name'     => $this->language->get('text_redeem_coupon'),
				'href'     => $this->url->link('catalog/product', 'user_token=' . $this->session->data['user_token'] . '&type=2', true),
				'children' => array()
				);
				}
				
				if ($this->user->hasPermission('access', 'catalog/product')) {
				$redeem[] = array(
				'name'     => $this->language->get('text_redeem_voucher'),
				'href'     => $this->url->link('catalog/product', 'user_token=' . $this->session->data['user_token'] . '&type=3', true),
				'children' => array()
				);
				}
				
				if ($this->user->hasPermission('access', 'catalog/product')) {
				$redeem[] = array(
				'name'     => $this->language->get('text_product'),
				'href'     => $this->url->link('catalog/product', 'user_token=' . $this->session->data['user_token'] . '&type=1&can_redeem=1', true),
				'children' => array()
				);
				}
				
				if ($redeem) {
				$catalog[] = array(
				'name'     => $this->language->get('text_redeem'),
				'href'     => '',
				'children' => $redeem
				);
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[// Marketing]]>
			</search>
			<add position="before">
				<![CDATA[
				// Point
				$point = array();
				
				if ($this->user->hasPermission('access', 'extension/total/point')) {
				$point[] = array(
				'name'	   => $this->language->get('text_point_customers'),
				'href'     => $this->url->link('extension/total/point/customers', 'user_token=' . $this->session->data['user_token'], true),
				'children' => array()
				);
				
				$point[] = array(
				'name'	   => $this->language->get('text_point_transactions'),
				'href'     => $this->url->link('extension/total/point/transaction', 'user_token=' . $this->session->data['user_token'], true),
				'children' => array()
				);
				
				$point[] = array(
				'name'	   => $this->language->get('text_point_adjustments'),
				'href'     => $this->url->link('extension/total/point/adjustment', 'user_token=' . $this->session->data['user_token'], true),
				'children' => array()
				);
				
				$point[] = array(
				'name'	   => $this->language->get('text_point_settings'),
				'href'     => $this->url->link('extension/total/point', 'user_token=' . $this->session->data['user_token'], true),
				'children' => array()
				);
				
				$point[] = array(
				'name'	   => $this->language->get('text_point_reminder_sms_log'),
				'href'     => $this->url->link('extension/total/point/smsLog', 'user_token=' . $this->session->data['user_token'], true),
				'children' => array()
				);
				}
				
				if ($point) {
				$data['menus'][] = array(
				'id'       => 'menu-point',
				'icon'	   => 'fa-gift',
				'name'	   => $this->language->get('text_points'),
				'href'     => '',
				'children' => $point
				);
				}
				]]>
			</add>
		</operation>
	</file>
	<file path="admin/language/en-gb/common/column_left.php">
		<operation>
			<search>
				<![CDATA[$_['text_marketing']            = 'Marketing';]]>
			</search>
			<add position="before">
				<![CDATA[
				$_['text_points']            = 'Points';
				$_['text_point_transactions'] = 'Point Transactions';
				$_['text_point_adjustments'] = 'Point Adjustments';
				$_['text_point_settings']    = 'Point Settings';
				$_['text_point_customers']   = 'Customer Points';
				$_['text_redeem_coupon']     = 'Coupon';
				$_['text_redeem_voucher']    = 'Physical Voucher';
				$_['text_redeem']            = 'Redemption';
				$_['text_point_settings_double'] = 'Double Point Settings';
				$_['text_point_reminder_sms_log'] = 'SMS Point Reminder Log';
				]]>
			</add>
		</operation>
	</file>
	<file path="admin/model/sale/order.php">
		<operation>
			<search>
				<![CDATA[$order_query->row['date_added'],]]>
			</search>
			<add position="after">
				<![CDATA['award_point_status'      => $order_query->row['award_point_status'],]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[public function getOrders($data = array()) {]]>
			</search>
			<add position="before">
				<![CDATA[
				public function getLatestOrderStatus($order_id) {
				$sql = "SELECT * FROM " . DB_PREFIX . "order_history WHERE order_id = '" . (int)$order_id . "' ORDER BY order_history_id DESC LIMIT 1";
				
				$query = $this->db->query($sql);
				
				return $query->row;
				}
				]]>
			</add>
		</operation>
	</file>
	<file path="admin/controller/sale/return.php">
		<operation>
			<search>
				<![CDATA[class ControllerSaleReturn extends Controller {]]>
			</search>
			<add position="before">
				<![CDATA[use EPoint\EPoint;]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[private $error = array();]]>
			</search>
			<add position="after">
				<![CDATA[
				public function __construct($registry) {
				parent::__construct($registry);
				
				$this->epoint = new EPoint($this->registry);
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$this->model_sale_return->addReturnHistory($this->request->get['return_id'], $this->request->post['return_status_id'], $this->request->post['comment'], $this->request->post['notify']);]]>
			</search>
			<add position="before">
				<![CDATA[
				$this->load->model('sale/order');
				
				$return_info = $this->model_sale_return->getReturn($this->request->get['return_id']);
				$latest_order_status = $this->model_sale_order->getLatestOrderStatus($return_info['order_id']);
				$award_after_days = $this->config->get('total_point_award_after_days') ?? 7;
				
				if (in_array($latest_order_status['order_status_id'], $this->config->get('total_point_award_order_status')) && time() >= (strtotime($latest_order_status['date_added']) + $award_after_days * 86400) && $return_info['return_action_id'] == $this->config->get('total_point_return_replace') && $this->request->post['return_status_id'] == $this->config->get('total_point_return_complete')) {
				$order_info = $this->model_sale_order->getOrder($return_info['order_id']);
				$order_totals = $this->model_sale_order->getOrderTotals($return_info['order_id']);
				
				$this->epoint->award($order_info, $order_totals, $return_info['product_id']);
				}
				]]>
			</add>
		</operation>
	</file>
	<file path="admin/controller/setting/setting.php">
		<operation>
			<search>
				<![CDATA[if (isset($this->request->post['config_customer_group_id'])) {]]>
			</search>
			<add position="before">
				<![CDATA[
				if (isset($this->request->post['config_imp_customer_group_id'])) {
				$data['config_imp_customer_group_id'] = $this->request->post['config_imp_customer_group_id'];
				} else {
				$data['config_imp_customer_group_id'] = $this->config->get('config_imp_customer_group_id');
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$this->load->model('localisation/order_status');]]>
			</search>
			<add position="before">
				<![CDATA[
				$this->load->model('user/user');
				
				$data['users'] = $this->model_user_user->getUsers();
				
				if (isset($this->request->post['config_point_approver_id'])) {
				$data['config_point_approver_id'] = $this->request->post['config_point_approver_id'];
				} elseif ($this->config->get('config_point_approver_id')) {
				$data['config_point_approver_id'] = $this->config->get('config_point_approver_id');
				} else {
				$data['config_point_approver_id'] = array();
				}
				
				$this->load->model('catalog/category');
				
				$data['categories'] = $this->model_catalog_category->getCategories();
				
				if (isset($this->request->post['config_redeem_default_category_id'])) {
				$data['config_redeem_default_category_id'] = $this->request->post['config_redeem_default_category_id'];
				} elseif ($this->config->get('config_redeem_default_category_id')) {
				$data['config_redeem_default_category_id'] = $this->config->get('config_redeem_default_category_id');
				} else {
				$data['config_redeem_default_category_id'] = array();
				}
				
				if (isset($this->request->post['config_redeem_product_category_id'])) {
				$data['config_redeem_product_category_id'] = $this->request->post['config_redeem_product_category_id'];
				} elseif ($this->config->get('config_redeem_product_category_id')) {
				$data['config_redeem_product_category_id'] = $this->config->get('config_redeem_product_category_id');
				} else {
				$data['config_redeem_product_category_id'] = array();
				}
				
				if (isset($this->request->post['config_redeem_coupon_category_id'])) {
				$data['config_redeem_coupon_category_id'] = $this->request->post['config_redeem_coupon_category_id'];
				} elseif ($this->config->get('config_redeem_coupon_category_id')) {
				$data['config_redeem_coupon_category_id'] = $this->config->get('config_redeem_coupon_category_id');
				} else {
				$data['config_redeem_coupon_category_id'] = array();
				}
				
				if (isset($this->request->post['config_redeem_voucher_category_id'])) {
				$data['config_redeem_voucher_category_id'] = $this->request->post['config_redeem_voucher_category_id'];
				} elseif ($this->config->get('config_redeem_voucher_category_id')) {
				$data['config_redeem_voucher_category_id'] = $this->config->get('config_redeem_voucher_category_id');
				} else {
				$data['config_redeem_voucher_category_id'] = array();
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[if ($this->error && !isset($this->error['warning'])) {]]>
			</search>
			<add position="before">
				<![CDATA[
				if (!isset($this->request->post['config_point_approver_id'])) {
				$this->error['point_approver'] = $this->language->get('error_point_approver');
				}
				
				if (!isset($this->request->post['config_redeem_default_category_id'])) {
				$this->error['error_redeem_default_category'] = $this->language->get('error_redeem_default_category');
				}
				
				if (!isset($this->request->post['config_redeem_product_category_id'])) {
				$this->error['redeem_product_category'] = $this->language->get('error_redeem_product_category');
				}
				
				if (!isset($this->request->post['config_redeem_coupon_category_id'])) {
				$this->error['redeem_coupon_category'] = $this->language->get('error_redeem_coupon_category');
				}
				
				if (!isset($this->request->post['config_redeem_voucher_category_id'])) {
				$this->error['redeem_voucher_category'] = $this->language->get('error_redeem_voucher_category');
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$data['breadcrumbs'] = array();]]>
			</search>
			<add position="before">
				<![CDATA[
				if (isset($this->error['point_approver'])) {
				$data['error_point_approver'] = $this->error['point_approver'];
				} else {
				$data['error_point_approver'] = '';
				}
				
				if (isset($this->error['error_redeem_default_category'])) {
				$data['error_redeem_default_category'] = $this->error['error_redeem_default_category'];
				} else {
				$data['error_redeem_default_category'] = '';
				}
				
				if (isset($this->error['redeem_product_category'])) {
				$data['error_redeem_product_category'] = $this->error['redeem_product_category'];
				} else {
				$data['error_redeem_product_category'] = '';
				}
				
				if (isset($this->error['redeem_coupon_category'])) {
				$data['error_redeem_coupon_category'] = $this->error['redeem_coupon_category'];
				} else {
				$data['error_redeem_coupon_category'] = '';
				}
				
				if (isset($this->error['redeem_voucher_category'])) {
				$data['error_redeem_voucher_category'] = $this->error['redeem_voucher_category'];
				} else {
				$data['error_redeem_voucher_category'] = '';
				}
				]]>
			</add>
		</operation>
	</file>
	<file path="admin/view/template/setting/setting.twig">
		<operation>
			<search>
				<![CDATA[<label class="col-sm-2 control-label"><span data-toggle="tooltip" title="{{ help_customer_group_display }}">{{ entry_customer_group_display }}</span></label>]]>
			</search>
			<add position="before" offset="1">
				<![CDATA[
				<div class="form-group">
				<label class="col-sm-2 control-label" for="input-imp-customer-group">IMP {{ entry_customer_group }}</label>
				<div class="col-sm-10">
				<select name="config_imp_customer_group_id" id="input-imp-customer-group" class="form-control">
				{% for customer_group in customer_groups %}
				{% if customer_group.customer_group_id == config_imp_customer_group_id %}
				<option value="{{ customer_group.customer_group_id }}" selected="selected">{{ customer_group.name }}</option>
				{% else %}
				<option value="{{ customer_group.customer_group_id }}">{{ customer_group.name }}</option>
				{% endif %}
				{% endfor %}
				</select>
				</div>
				</div>
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[<div class="tab-pane" id="tab-option">]]>
			</search>
			<add position="after">
				<![CDATA[
				<fieldset>
				<legend>{{ entry_point }}</legend>
				<div class="form-group required">
				<label class="col-sm-2 control-label" for="input-point-approver">{{ entry_point_approver }}</label>
				<div class="col-sm-10">
				<div class="well well-sm" style="height: 150px; overflow: auto;"> {% for user in users %}
				<div class="checkbox">
				<label> {% if user.user_id in config_point_approver_id %}
				<input type="checkbox" name="config_point_approver_id[]" value="{{ user.user_id }}" checked="checked" />
				{{ user.username }}
				{% else %}
				<input type="checkbox" name="config_point_approver_id[]" value="{{ user.user_id }}" />
				{{ user.username }}
				{% endif %} </label>
				</div>
				{% endfor %} </div>
				{% if error_point_approver %}
				<div class="text-danger">{{ error_point_approver }}</div>
				{% endif %} </div>
				</div>
				</fieldset>
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[<legend>{{ text_review }}</legend>]]>
			</search>
			<add position="before" offset="1">
				<![CDATA[
				<fieldset>
				<legend>{{ entry_redemption }}</legend>
				<div class="form-group required">
				<label class="col-sm-2 control-label" for="input-default-redeem-category">{{ entry_redeem_default_category }}</label>
				<div class="col-sm-10">
				<div class="well well-sm" style="height: 150px; overflow: auto;"> {% for category in categories %}
				<div class="checkbox">
				<label> {% if category.category_id in config_redeem_default_category_id %}
				<input type="checkbox" name="config_redeem_default_category_id[]" value="{{ category.category_id }}" checked="checked" />
				{{ category.name }}
				{% else %}
				<input type="checkbox" name="config_redeem_default_category_id[]" value="{{ category.category_id }}" />
				{{ category.name }}
				{% endif %} </label>
				</div>
				{% endfor %} </div>
				{% if error_redeem_default_category %}
				<div class="text-danger">{{ error_redeem_default_category }}</div>
				{% endif %} </div>
				</div>
				
				<div class="form-group required">
				<label class="col-sm-2 control-label" for="input-redeem-product">{{ entry_redeem_product }}</label>
				<div class="col-sm-10">
				<div class="well well-sm" style="height: 150px; overflow: auto;"> {% for category in categories %}
				<div class="checkbox">
				<label> {% if category.category_id in config_redeem_product_category_id %}
				<input type="checkbox" name="config_redeem_product_category_id[]" value="{{ category.category_id }}" checked="checked" />
				{{ category.name }}
				{% else %}
				<input type="checkbox" name="config_redeem_product_category_id[]" value="{{ category.category_id }}" />
				{{ category.name }}
				{% endif %} </label>
				</div>
				{% endfor %} </div>
				{% if error_redeem_product_category %}
				<div class="text-danger">{{ error_redeem_product_category }}</div>
				{% endif %} </div>
				</div>
				<div class="form-group required">
				<label class="col-sm-2 control-label" for="input-redeem-coupon">{{ entry_redeem_coupon }}</label>
				<div class="col-sm-10">
				<div class="well well-sm" style="height: 150px; overflow: auto;"> {% for category in categories %}
				<div class="checkbox">
				<label> {% if category.category_id in config_redeem_coupon_category_id %}
				<input type="checkbox" name="config_redeem_coupon_category_id[]" value="{{ category.category_id }}" checked="checked" />
				{{ category.name }}
				{% else %}
				<input type="checkbox" name="config_redeem_coupon_category_id[]" value="{{ category.category_id }}" />
				{{ category.name }}
				{% endif %} </label>
				</div>
				{% endfor %} </div>
				{% if error_redeem_coupon_category %}
				<div class="text-danger">{{ error_redeem_coupon_category }}</div>
				{% endif %} </div>
				</div>
				<div class="form-group required">
				<label class="col-sm-2 control-label" for="input-redeem-voucher">{{ entry_redeem_voucher }}</label>
				<div class="col-sm-10">
				<div class="well well-sm" style="height: 150px; overflow: auto;"> {% for category in categories %}
				<div class="checkbox">
				<label> {% if category.category_id in config_redeem_voucher_category_id %}
				<input type="checkbox" name="config_redeem_voucher_category_id[]" value="{{ category.category_id }}" checked="checked" />
				{{ category.name }}
				{% else %}
				<input type="checkbox" name="config_redeem_voucher_category_id[]" value="{{ category.category_id }}" />
				{{ category.name }}
				{% endif %} </label>
				</div>
				{% endfor %} </div>
				{% if error_redeem_voucher_category %}
				<div class="text-danger">{{ error_redeem_voucher_category }}</div>
				{% endif %} </div>
				</div>
				</fieldset>
				]]>
			</add>
		</operation>
	</file>
	<file path="admin/language/en-gb/setting/setting.php">
		<operation>
			<search>
				<![CDATA[$_['entry_status']                   = 'Status';]]>
			</search>
			<add position="after">
				<![CDATA[
				$_['entry_point']                   = 'Point';
				$_['entry_point_approver']          = 'Point Approver';
				$_['entry_redemption']              = 'Redemption';
				$_['entry_redeem_default_category']         = 'Redeem Default Category';
				$_['entry_redeem_product']          = 'Redeem Product Category';
				$_['entry_redeem_coupon']           = 'Redeem Coupon Category';
				$_['entry_redeem_voucher']          = 'Redeem Voucher Category';
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$_['text_error']                     = 'Error Handling';]]>
			</search>
			<add position="after">
				<![CDATA[$_['text_point']                      = 'Point';         ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$_['error_encryption']               = 'Encryption Key must be between 32 and 1024 characters!';]]>
			</search>
			<add position="after">
				<![CDATA[
				$_['error_point_approver']    = 'You must choose at least 1 approver for Point!';
				$_['error_redeem_product_category']    = 'You must choose at least 1 category for Redeem Default Category!';
				$_['error_redeem_product_category']    = 'You must choose at least 1 category for Redeem Product!';
				$_['error_redeem_coupon_category']    = 'You must choose at least 1 category for Redeem Coupon!';
				$_['error_redeem_voucher_category']    = 'You must choose at least 1 category for Redeem Voucher!';
				]]>
			</add>
		</operation>
	</file>
	<!-- Redeem Product -->
	<file path="admin/language/en-gb/catalog/product.php">
		<operation>
			<search>
				<![CDATA[$_['entry_price']            = 'Price';]]>
			</search>
			<add position="after">
				<![CDATA[
				$_['entry_point_to_redeem']            = 'Point to Redeem';
				$_['entry_redeem_status']        = 'Redeem Status';
				$_['entry_auto_assign_point']    = 'Auto-Assign Point';
				$_['entry_coupon_code']          = 'Coupon Code Prefix';
				$_['entry_coupon_type']          = 'Coupon Discount Type';
				$_['entry_coupon_discount']      = 'Coupon Discount';
				$_['entry_coupon_shipping']      = 'Coupon Free Shipping';
				$_['entry_coupon_total']         = 'Coupon Total Amount';
				$_['entry_coupon_category']      = 'Coupon Category';
				$_['entry_coupon_product']       = 'Coupon Products';
				$_['entry_redemption_category']  = 'Redemption Category';
				
				
				$_['column_point_to_redeem']     = 'Point to Redeem';
				$_['column_redeem_status']       = 'Redeem Status';
				$_['column_option']              = 'Option';
				$_['column_sku']                 = 'SKU';
				
				$_['help_coupon_code']           = 'The code the customer enters to get the discount.';
				$_['help_coupon_type']           = 'Percentage or Fixed Amount.';
				$_['help_coupon_shipping']       = 'Coupon will apply free shipping.';
				$_['help_coupon_total']          = 'The total amount that must be reached before the coupon is valid.';
				$_['help_coupon_category']       = 'Choose all products under selected category.';
				$_['help_coupon_product']        = 'Choose specific products the coupon will apply to. Select no products to apply coupon to entire cart.';
				$_['error_coupon_exists']        = 'Warning: Coupon code is already in use!';
				$_['error_coupon_code']          = 'Code must be between 3 and 10 characters!';
				$_['error_product_id']           = 'Product is Required!';
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$_['heading_title']]]>
			</search>
			<add position="after">
				<![CDATA[
				$_['heading_title_coupon']          = 'Redemption Coupon';
				$_['heading_title_voucher']          = 'Redemption Physical Voucher';
				$_['heading_title_redeem_product']   = 'Redemption Product';
				]]>
			</add>
		</operation>
	</file>
	<file path="admin/view/template/catalog/product_form.twig">
		<operation>
			<search>
				<![CDATA[<input type="text" name="price" value="{{ price }}" placeholder="{{ entry_price }}" id="input-price" class="form-control"/>]]>
			</search>
			<add position="after" offset="2">
				<![CDATA[
				{% if type != 1 %}
				<div class="form-group">
				<label class="col-sm-2 control-label" for="input-point-to-redeem">{{ entry_point_to_redeem }}</label>
				<div class="col-sm-10">
				<input type="text" name="point_to_redeem" value="{{ point_to_redeem }}" placeholder="{{ entry_point_to_redeem }}" id="input-point-to-redeem" class="form-control"/>
				</div>
				</div>
				{% else %}
				<input type="hidden" name="point_to_redeem" value="{{ point_to_redeem }}"/>
				{% endif %}
				]]>
			</add>
		</operation>
		<!--
		<operation>
		<search index="0">
		<![CDATA[<td class="text-right" style="width: 250px;">{{ entry_price }}</td>]]>
		</search>
		<add position="after">
		<![CDATA[<td class="text-right">{{ entry_point_to_redeem }}</td>]]>
		</add>
		</operation>
		<operation>
		<search>
		<![CDATA[html += '        <td class="text-right" style="width: 250px;">{{ entry_price }}</td>';]]>
		</search>
		<add position="after">
		<![CDATA[html += '        <td class="text-right">{{ entry_point_to_redeem }}</td>';]]>
		</add>
		</operation>
		<operation>
		<search>
		<![CDATA[<td class="text-right hide"><select name="product_option[{{ option_row }}][product_option_value][{{ option_value_row }}][points_prefix]" class="form-control">]]>
		</search>
		<add position="before">
		<![CDATA[
		<td class="text-right">
		<input type="text" name="product_option[{{ option_row }}][product_option_value][{{ option_value_row }}][point_to_redeem]" value="{{ product_option_value.point_to_redeem }}" placeholder="{{ entry_point_to_redeem }}" class="form-control"/>
		</td>
		]]>
		</add>
		</operation>
		<operation>
		<search>
		<![CDATA[<td colspan="7"></td>]]>
		</search>
		<add position="replace">
		<![CDATA[<td colspan="8"></td>]]>
		</add>
		</operation>
		<operation>
		<search>
		<![CDATA[html += '  <td class="text-right hide"><select name="product_option[' + option_row + '][product_option_value][' + option_value_row + '][points_prefix]" class="form-control">';]]>
		</search>
		<add position="before">
		<![CDATA[
		html += '<td class="text-right">';
		html += '  <input type="text" name="product_option[' + option_row + '][product_option_value][' + option_value_row + '][point_to_redeem]" value="" placeholder="{{ entry_point_to_redeem }}" class="form-control"/>';
		html += '</td>';
		]]>
		</add>
		</operation>
		-->
		<operation>
			<search>
				<![CDATA[<td class="text-right hide"><select name="product_option[{{ option_row }}][product_option_value][{{ option_value_row }}][points_prefix]" class="form-control">]]>
			</search>
			<add position="before">
				<![CDATA[
				<input type="hidden" name="product_option[{{ option_row }}][product_option_value][{{ option_value_row }}][point_to_redeem]" value="{{ product_option_value.point_to_redeem }}"/>
				<input type="hidden" name="product_option[{{ option_row }}][product_option_value][{{ option_value_row }}][redeem_status]" value="{{ product_option_value.redeem_status }}"/>
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[<li><a href="#tab-option" data-toggle="tab">{{ tab_option }}</a></li>]]>
			</search>
			<add position="replace">
				<![CDATA[{% if type == 1 %}<li><a href="#tab-option" data-toggle="tab">{{ tab_option }}</a></li>{% endif %}]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[<li><a href="#tab-special" data-toggle="tab">{{ tab_special }}</a></li>]]>
			</search>
			<add position="replace">
				<![CDATA[{% if type == 1 %}<li><a href="#tab-special" data-toggle="tab">{{ tab_special }}</a></li>{% endif %}]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[<li><a href="#tab-reward" data-toggle="tab">{{ tab_reward }}</a></li>]]>
			</search>
			<add position="replace">
				<![CDATA[{% if type == 1 %}<li><a href="#tab-reward" data-toggle="tab">{{ tab_reward }}</a></li>{% endif %}]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[<div class="text-danger">{{ error_model }}</div>]]>
			</search>
			<add position="after" offset="2">
				<![CDATA[
				<input type="hidden" name="type" value="{{ type }}" id="input-type"/>
				
				{% if type == 2 %}
				<div class="form-group required">
				<label class="col-sm-2 control-label" for="input-coupon-code"><span data-toggle="tooltip" title="{{ help_coupon_code }}">{{ entry_coupon_code }}</span></label>
				<div class="col-sm-10">
				<input type="text" name="coupon_code" value="{{ coupon_code }}" placeholder="{{ entry_coupon_code }}" id="input-coupon-code" class="form-control"/>
				{% if error_coupon_code %}
				<div class="text-danger">{{ error_coupon_code }}</div>
				{% endif %}</div>
				</div>
				<div class="form-group">
				<label class="col-sm-2 control-label" for="input-coupon-type"><span data-toggle="tooltip" title="{{ help_coupon_type }}">{{ entry_coupon_type }}</span></label>
				<div class="col-sm-10">
				<select name="coupon_type" id="input-coupon-type" class="form-control">
				{% if coupon_type == 'P' %}
				<option value="P" selected="selected">{{ text_percent }}</option>
				{% else %}
				<option value="P">{{ text_percent }}</option>
				{% endif %}
				{% if coupon_type == 'F' %}
				<option value="F" selected="selected">{{ text_amount }}</option>
				{% else %}
				<option value="F">{{ text_amount }}</option>
				{% endif %}
				</select>
				</div>
				</div>
				<div class="form-group">
				<label class="col-sm-2 control-label" for="input-coupon-discount">{{ entry_coupon_discount }}</label>
				<div class="col-sm-10">
				<input type="text" name="coupon_discount" value="{{ coupon_discount }}" placeholder="{{ entry_coupon_discount }}" id="input-coupon-discount" class="form-control" />
				</div>
				</div>
				<div class="form-group">
				<label class="col-sm-2 control-label" for="input-coupon-total"><span data-toggle="tooltip" title="{{ help_coupon_total }}">{{ entry_coupon_total }}</span></label>
				<div class="col-sm-10">
				<input type="text" name="coupon_total" value="{{ coupon_total }}" placeholder="{{ entry_coupon_total }}" id="input-coupon-total" class="form-control" />
				</div>
				</div>
				<div class="form-group">
				<label class="col-sm-2 control-label"><span data-toggle="tooltip" title="{{ help_coupon_shipping }}">{{ entry_coupon_shipping }}</span></label>
				<div class="col-sm-10">
				<label class="radio-inline"> {% if coupon_shipping %}
				<input type="radio" name="coupon_shipping" value="1" checked="checked" />
				{{ text_yes }}
				{% else %}
				<input type="radio" name="coupon_shipping" value="1" />
				{{ text_yes }}
				{% endif %} </label>
				<label class="radio-inline"> {% if not coupon_shipping %}
				<input type="radio" name="coupon_shipping" value="0" checked="checked" />
				{{ text_no }}
				{% else %}
				<input type="radio" name="coupon_shipping" value="0" />
				{{ text_no }}
				{% endif %} </label>
				</div>
				</div>
				<div class="form-group">
				<label class="col-sm-2 control-label" for="input-coupon-product-select"><span data-toggle="tooltip" title="{{ help_coupon_product }}">{{ entry_coupon_product }}</span></label>
				<div class="col-sm-10">
				<input type="text" name="coupon_product_select" value="" placeholder="{{ entry_coupon_product }}" id="input-coupon-product-select" class="form-control" />
				<div id="coupon-product" class="well well-sm" style="height: 150px; overflow: auto;"> {% for coupon_product in coupon_product %}
				<div id="coupon-product{{ coupon_product.product_id }}"><i class="fa fa-minus-circle"></i> {{ coupon_product.name }}
				<input type="hidden" name="coupon_product[]" value="{{ coupon_product.product_id }}" />
				</div>
				{% endfor %} </div>
				</div>
				</div>
				<div class="form-group">
				<label class="col-sm-2 control-label" for="input-coupon-category-select"><span data-toggle="tooltip" title="{{ help_coupon_category }}">{{ entry_coupon_category }}</span></label>
				<div class="col-sm-10">
				<input type="text" name="coupon_category_select" value="" placeholder="{{ entry_coupon_category }}" id="input-coupon-category-select" class="form-control" />
				<div id="coupon-category" class="well well-sm" style="height: 150px; overflow: auto;"> {% for coupon_category in coupon_category %}
				<div id="coupon-category{{ coupon_category.category_id }}"><i class="fa fa-minus-circle"></i> {{ coupon_category.name }}
				<input type="hidden" name="coupon_category[]" value="{{ coupon_category.category_id }}" />
				</div>
				{% endfor %} </div>
				</div>
				</div>
				{% endif %}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[// Manufacturer]]>
			</search>
			<add position="before">
				<![CDATA[
				$(document).ready(function() {
				var type = {{ type }};
				
				if (type == 2 || type == 3) {
				// hide all unnecessary field for coupon
				$('#input-sku, #input-upc, #input-ean, #input-jan, #input-isbn, #input-mpn, #input-location, #input-price, #input-tax-class, #input-minimum, #input-length, #input-length-class, #input-weight, #input-weight-class, #input-ac-sync-status, #ac-item-validate').closest('.form-group').addClass('hide');
				$('input[name="shipping"]').closest('.form-group').addClass('hide');
				}
				});
				
				$('input[name=\'coupon_product_select\']').autocomplete({
				'source': function(request, response) {
				$.ajax({
				url: 'index.php?route=catalog/product/autocomplete&user_token={{ user_token }}&filter_name=' +  encodeURIComponent(request),
				dataType: 'json',
				success: function(json) {
				response($.map(json, function(item) {
				return {
				label: item['name'],
				value: item['product_id']
				}
				}));
				}
				});
				},
				'select': function(item) {
				$('input[name=\'coupon_product_select\']').val('');
				
				$('#coupon-product' + item['value']).remove();
				
				$('#coupon-product').append('<div id="coupon-product' + item['value'] + '"><i class="fa fa-minus-circle"></i> ' + item['label'] + '<input type="hidden" name="coupon_product[]" value="' + item['value'] + '" /></div>');
				}
				});
				
				$('#coupon-product').delegate('.fa-minus-circle', 'click', function() {
				$(this).parent().remove();
				});
				
				// Category
				$('input[name=\'coupon_category_select\']').autocomplete({
				'source': function(request, response) {
				$.ajax({
				url: 'index.php?route=catalog/category/autocomplete&user_token={{ user_token }}&filter_name=' +  encodeURIComponent(request),
				dataType: 'json',
				success: function(json) {
				response($.map(json, function(item) {
				return {
				label: item['name'],
				value: item['category_id']
				}
				}));
				}
				});
				},
				'select': function(item) {
				$('input[name=\'coupon_category_select\']').val('');
				
				$('#coupon-category' + item['value']).remove();
				
				$('#coupon-category').append('<div id="coupon-category' + item['value'] + '"><i class="fa fa-minus-circle"></i> ' + item['label'] + '<input type="hidden" name="coupon_category[]" value="' + item['value'] + '" /></div>');
				}
				});
				
				$('#coupon-category').delegate('.fa-minus-circle', 'click', function() {
				$(this).parent().remove();
				});
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[<label class="col-sm-2 control-label" for="input-category">]]>
			</search>
			<add position="before" offset="1">
				<![CDATA[
				{% if type == 1 %}
				{% for redemption_category in selected_redemption_categories %}
				<input type="hidden" name="product_category[]" value="{{ redemption_category.category_id }}"/>
				{% endfor %}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[<input type="hidden" name="product_category[]" value="{{ product_category.category_id }}"/>]]>
			</search>
			<add position="after" offset="4">
				<![CDATA[           {% endif %}         ]]>
			</add>
		</operation>
	</file>
	<file path="admin/view/template/catalog/product_list.twig">
		<operation>
			<search>
				<![CDATA[location = 'index.php?route=catalog/product&user_token={{ user_token }}' + url;]]>
			</search>
			<add position="replace">
				<![CDATA[
				{% if can_redeem %}
				url += '&can_redeem=1';
				{% endif %}
				
				location = 'index.php?route=catalog/product&user_token={{ user_token }}&type={{ type }}' + url;
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[         <button type="submit" form="form-product" formaction="{{ copy }}" data-toggle="tooltip" title="{{ button_copy }}" class="btn btn-default"><i class="fa fa-copy"></i></button>         ]]>
			</search>
			<add position="before">
				<![CDATA[         {% if not can_redeem %}         ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[         <button type="submit" form="form-product" formaction="{{ copy }}" data-toggle="tooltip" title="{{ button_copy }}" class="btn btn-default"><i class="fa fa-copy"></i></button>         ]]>
			</search>
			<add position="after">
				<![CDATA[         {% endif %}         ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[<td class="text-left">{% if sort == 'p.status' %} <a href="{{ sort_status }}" class="{{ order|lower }}">{{ column_status }}</a> {% else %} <a href="{{ sort_status }}">{{ column_status }}</a> {% endif %}</td>]]>
			</search>
			<add position="before">
				<![CDATA[
				{% if type != 1 or can_redeem %}
				<td class="text-right">{% if sort == 'p.point_to_redeem' %} <a href="{{ sort_point }}" class="{{ order|lower }}">{{ entry_point_to_redeem }}</a> {% else %} <a href="{{ sort_point }}">{{ entry_point_to_redeem }}</a> {% endif %}</td>
				{% endif %}
				
				{% if type == 1 and can_redeem %}
				<td class="text-left">{{ column_redeem_status }}</td>
				{% endif %}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[<td class="text-left">{{ product.status }}</td>]]>
			</search>
			<add position="before">
				<![CDATA[
				{% if type != 1 or can_redeem %}
				<td class="text-right">{{ product.point_to_redeem }}</td>
				{% endif %}
				
				{% if type == 1 and can_redeem %}
				<td class="text-left">{{ product.redeem_status }}</td>
				{% endif %}
				]]>
			</add>
		</operation>
	</file>
	<file path="admin/controller/catalog/product.php">
		<operation>
			<search>
				<![CDATA[$this->load->model('catalog/recurring');]]>
			</search>
			<add position="before">
				<![CDATA[
				if (isset($this->request->post['point_to_redeem'])) {
				$data['point_to_redeem'] = $this->request->post['point_to_redeem'];
				} elseif (!empty($product_info)) {
				$data['point_to_redeem'] = $product_info['point_to_redeem'];
				} else {
				$data['point_to_redeem'] = '';
				}
				
				if (isset($this->request->post['auto_assign_point'])) {
				$data['auto_assign_point'] = $this->request->post['auto_assign_point'];
				} elseif (!empty($product_info)) {
				$data['auto_assign_point'] = $product_info['auto_assign_point'];
				} else {
				$data['auto_assign_point'] = '';
				}
				
				if (isset($this->request->post['redeem_status'])) {
				$data['redeem_status'] = $this->request->post['redeem_status'];
				} elseif (!empty($product_info)) {
				$data['redeem_status'] = $product_info['redeem_status'];
				} else {
				$data['redeem_status'] = '';
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA['points_prefix'           => $product_option_value['points_prefix'],]]>
			</search>
			<add position="after">
				<![CDATA[
				'point_to_redeem'           => $product_option_value['point_to_redeem'],
				'redeem_status'             => $product_option_value['redeem_status'],
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$url .= '&order=' . $this->request->get['order'];]]>
			</search>
			<add position="before" offset="1">
				<![CDATA[
				if (isset($this->request->get['type'])) {
				$url .= '&type=' . $this->request->get['type'];
				}
				
				if (isset($this->request->get['can_redeem'])) {
				$url .= '&can_redeem=' . $this->request->get['can_redeem'];
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$order = $this->request->get['order'];]]>
			</search>
			<add position="before" offset="1">
				<![CDATA[
				if (isset($this->request->get['type'])) {
				$type = $this->request->get['type'];
				} else {
				$type = 1;
				}
				
				if (isset($this->request->get['can_redeem'])) {
				$can_redeem = $this->request->get['can_redeem'];
				} else {
				$can_redeem = '';
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$data['products'][] = array(]]>
			</search>
			<add position="after">
				<![CDATA[
				'point_to_redeem' => $result['point_to_redeem'],
				'redeem_status' => $result['redeem_status'] ? $this->language->get('text_enabled') : $this->language->get('text_disabled'),
				'auto_assign_point' => $result['auto_assign_point'],
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[if ($order == 'ASC') {]]>
			</search>
			<add position="before">
				<![CDATA[
				if (isset($this->request->get['type'])) {
				$url .= '&type=' . $this->request->get['type'];
				}
				
				if (isset($this->request->get['can_redeem'])) {
				$url .= '&can_redeem=' . $this->request->get['can_redeem'];
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$data['sort_order'] = $this->url->link('catalog/product', 'user_token=' . $this->session->data['user_token'] . '&sort=p.sort_order' . $url, true);]]>
			</search>
			<add position="after">
				<![CDATA[      $data['sort_point'] = $this->url->link('catalog/product', 'user_token=' . $this->session->data['user_token'] . '&sort=p.point_to_redeem' . $url, true);         ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[=> $sort,]]>
			</search>
			<add position="before">
				<![CDATA[
				'type'            => $type,
				'can_redeem'            => $can_redeem,
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$data['breadcrumbs'] = array();]]>
			</search>
			<add position="before">
				<![CDATA[
				if ($type == 2) {
				$heading_title = $this->language->get('heading_title_coupon');
				} elseif ($type == 3) {
				$heading_title = $this->language->get('heading_title_voucher');
				} else {
				if ($can_redeem) {
				$heading_title = $this->language->get('heading_title_redeem_product');
				} else {
				$heading_title = $this->language->get('heading_title');
				}
				}
				
				$data['heading_title'] = $heading_title;
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$this->language->get('heading_title'),]]>
			</search>
			<add position="replace">
				<![CDATA[$heading_title,]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$this->document->setTitle($this->language->get('heading_title'));]]>
			</search>
			<add position="replace">
				<![CDATA[
				if (isset($this->request->get['type']) && $this->request->get['type'] == 2) {
				$this->document->setTitle($this->language->get('heading_title_coupon'));
				} elseif (isset($this->request->get['type']) && $this->request->get['type'] == 3) {
				$this->document->setTitle($this->language->get('heading_title_voucher'));
				} else {
				$this->document->setTitle($this->language->get('heading_title'));
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$data['order'] = $order;]]>
			</search>
			<add position="after">
				<![CDATA[
				$data['type'] = $type;
				$data['can_redeem'] = $can_redeem;
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[protected function getForm() {]]>
			</search>
			<add position="after">
				<![CDATA[
				if (isset($this->request->get['type'])) {
				$type = $this->request->get['type'];
				} else {
				$type = 1;
				}
				
				if (isset($this->request->get['can_redeem'])) {
				$can_redeem = $this->request->get['can_redeem'];
				} else {
				$can_redeem = '';
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[if (isset($this->error['keyword'])) {]]>
			</search>
			<add position="before">
				<![CDATA[
				if (isset($this->error['coupon_code'])) {
				$data['error_coupon_code'] = $this->error['coupon_code'];
				} else {
				$data['error_coupon_code'] = '';
				}
				
				if (isset($this->error['product_id'])) {
				$data['error_product_id'] = $this->error['product_id'];
				} else {
				$data['error_product_id'] = '';
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[if (isset($this->request->get['product_id']) && ($this->request->server['REQUEST_METHOD'] != 'POST')) {]]>
			</search>
			<add position="before">
				<![CDATA[     $this->load->model('extension/total/point');         ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$product_info = $this->model_catalog_product->getProduct($this->request->get['product_id']);]]>
			</search>
			<add position="after">
				<![CDATA[       $coupon_info = $this->model_extension_total_point->getCoupon($this->request->get['product_id']);         ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[if (isset($this->request->post['model'])) {]]>
			</search>
			<add position="before">
				<![CDATA[
				if (!empty($product_info)) {
				$data['type'] = $product_info['type'];
				} elseif (isset($this->request->get['type'])) {
				$data['type'] = $this->request->get['type'];
				} else {
				$data['type'] = '';
				}
				
				if (isset($this->request->post['coupon_code'])) {
				$data['coupon_code'] = $this->request->post['coupon_code'];
				} elseif (!empty($coupon_info)) {
				$data['coupon_code'] = $coupon_info['code'];
				} else {
				$data['coupon_code'] = '';
				}
				
				if (isset($this->request->post['coupon_type'])) {
				$data['coupon_type'] = $this->request->post['coupon_type'];
				} elseif (!empty($coupon_info)) {
				$data['coupon_type'] = $coupon_info['type'];
				} else {
				$data['coupon_type'] = '';
				}
				
				if (isset($this->request->post['coupon_discount'])) {
				$data['coupon_discount'] = $this->request->post['coupon_discount'];
				} elseif (!empty($coupon_info)) {
				$data['coupon_discount'] = $coupon_info['discount'];
				} else {
				$data['coupon_discount'] = '';
				}
				
				if (isset($this->request->post['coupon_shipping'])) {
				$data['coupon_shipping'] = $this->request->post['coupon_shipping'];
				} elseif (!empty($coupon_info)) {
				$data['coupon_shipping'] = $coupon_info['shipping'];
				} else {
				$data['coupon_shipping'] = '';
				}
				
				if (isset($this->request->post['coupon_total'])) {
				$data['coupon_total'] = $this->request->post['coupon_total'];
				} elseif (!empty($coupon_info)) {
				$data['coupon_total'] = $coupon_info['total'];
				} else {
				$data['coupon_total'] = '';
				}
				
				if (isset($this->request->post['coupon_product'])) {
				$products = $this->request->post['coupon_product'];
				} elseif (isset($this->request->get['product_id'])) {
				$products = $this->model_extension_total_point->getCouponProducts($this->request->get['product_id']);
				} else {
				$products = array();
				}
				
				if (isset($this->request->get['can_redeem'])) {
				$can_redeem = $this->request->get['can_redeem'];
				} else {
				$can_redeem = false;
				}
				
				if (isset($this->request->get['product_id'])) {
				$data['product_id'] = $this->request->get['product_id'];
				} else {
				$data['product_id'] = 0;
				}
				
				$this->load->model('catalog/product');
				
				$data['coupon_product'] = array();
				
				foreach ($products as $product_id) {
				$coupon_product_info = $this->model_catalog_product->getProduct($product_id);
				
				if ($coupon_product_info) {
				$data['coupon_product'][] = array(
				'product_id' => $coupon_product_info['product_id'],
				'name'       => $coupon_product_info['name']
				);
				}
				}
				
				if (isset($this->request->post['coupon_category'])) {
				$categories = $this->request->post['coupon_category'];
				} elseif (isset($this->request->get['product_id'])) {
				$categories = $this->model_extension_total_point->getCouponCategories($this->request->get['product_id']);
				} else {
				$categories = array();
				}
				
				$this->load->model('catalog/category');
				
				$data['coupon_category'] = array();
				
				foreach ($categories as $category_id) {
				$counpon_category_info = $this->model_catalog_category->getCategory($category_id);
				
				if ($counpon_category_info) {
				$data['coupon_category'][] = array(
				'category_id' => $counpon_category_info['category_id'],
				'name'        => ($counpon_category_info['path'] ? $counpon_category_info['path'] . ' &gt; ' : '') . $counpon_category_info['name']
				);
				}
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[if ($this->error && !isset($this->error['warning'])) {]]>
			</search>
			<add position="before">
				<![CDATA[
				if (isset($this->request->post['coupon_code'])) {
				if ((utf8_strlen($this->request->post['coupon_code']) < 3) || (utf8_strlen($this->request->post['coupon_code']) > 10)) {
				$this->error['coupon_code'] = $this->language->get('error_coupon_code');
				}
				
				$this->load->model('extension/total/point');
				
				$coupon_info = $this->model_extension_total_point->getCouponByCode($this->request->post['coupon_code']);
				
				if ($coupon_info) {
				if (!isset($this->request->get['product_id'])) {
				$this->error['warning'] = $this->language->get('error_exists');
				} elseif ($coupon_info['product_id'] != $this->request->get['product_id']) {
				$this->error['warning'] = $this->language->get('error_exists');
				}
				}
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[// Filters]]>
			</search>
			<add position="before">
				<![CDATA[
				$redeem_default_category = $this->config->get('config_redeem_default_category_id');
				$redeem_product_category = $this->config->get('config_redeem_product_category_id');
				$redeem_coupon_category = $this->config->get('config_redeem_coupon_category_id');
				$redeem_voucher_category = $this->config->get('config_redeem_voucher_category_id');
				
				$redemption_categories = array_merge($redeem_product_category, $redeem_coupon_category, $redeem_voucher_category, $redeem_default_category);
				
				$categories_tree = $data['categories_tree'] ?? array();
				
				$data['categories_tree'] = array_filter($categories_tree, function($category) use ($redemption_categories) {
				return !in_array($category['category_id'], $redemption_categories);
				});
				
				$data['selected_redemption_categories'] = array_filter($data['product_categories'], function($category) use ($redemption_categories) {
				return in_array($category['category_id'], $redemption_categories);
				});
				
				if ($can_redeem) {
				$data['redeem_product_category'] = array();
				$redeem_product_category_ids = $this->config->get('config_redeem_product_category_id');
				
				foreach ($redeem_product_category_ids as $redeem_product_category_id) {
				$redeem_product_category_info = $this->model_catalog_category->getCategory($redeem_product_category_id);
				
				if ($redeem_product_category_info) {
				$data['redeem_product_category'][] = array(
				'category_id' => $redeem_product_category_info['category_id'],
				'name'        => ($redeem_product_category_info['path'] ? $redeem_product_category_info['path'] . ' &gt; ' : '') . $redeem_product_category_info['name']
				);
				}
				}
				} else {
				$data['product_categories'] = array_filter($data['product_categories'], function($category) use ($redemption_categories) {
				return !in_array($category['category_id'], $redemption_categories);
				});
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$data['cancel'] = $this->url->link('catalog/product', 'user_token=' . $this->session->data['user_token'] . $url, true);]]>
			</search>
			<add position="before">
				<![CDATA[
				if ($can_redeem) {
				$data['action'] = $this->url->link('catalog/product/saveProductRedeem', 'user_token=' . $this->session->data['user_token'] . $url, true);
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$this->response->setOutput($this->load->view('catalog/product_form', $data));]]>
			</search>
			<add position="before">
				<![CDATA[
				if ($can_redeem) {
				$this->response->setOutput($this->load->view('catalog/redeem_product_form', $data));
				} else {
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$this->response->setOutput($this->load->view('catalog/product_form', $data));]]>
			</search>
			<add position="after">
				<![CDATA[           }         ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[public function autocomplete() {]]>
			</search>
			<add position="before">
				<![CDATA[
				public function getRedeemProductOption() {
				$this->load->language('catalog/product');
				$this->load->model('catalog/product');
				$this->load->model('tool/image');
				
				if (isset($this->request->get['product_id'])) {
				$product_id = $this->request->get['product_id'];
				} else {
				$product_id = 0;
				}
				
				$data = array();
				
				$product_options = $this->model_catalog_product->getProductOptions($product_id);
				
				if ($product_options) {
				foreach ($product_options as $product_option) {
				$product_option_value_data = array();
				
				if (isset($product_option['product_option_value'])) {
				foreach ($product_option['product_option_value'] as $product_option_value) {
				
				if (!empty($product_option_value['image']) && is_file(DIR_IMAGE . $product_option_value['image'])) {
				$product_option_value_thumb = $this->model_tool_image->resize($product_option_value['image'], 100, 100);
				} else {
				$product_option_value_thumb = $this->model_tool_image->resize('no_image.png', 100, 100);
				}
				
				$product_option_value_data[] = array(
				'product_option_value_id' => $product_option_value['product_option_value_id'],
				'option_value_id'         => $product_option_value['option_value_id'],
				'quantity'                => $product_option_value['quantity'],
				'sku'                     => $product_option_value['sku'],
				'image'                   => $product_option_value['image'],
				'thumb'                   => $product_option_value_thumb,
				'name'                    => $product_option_value['name'],
				'image_watermark'         => $product_option_value['image_watermark'],
				'subtract'                => $product_option_value['subtract'],
				'price'                   => $product_option_value['price'],
				'point_to_redeem'         => $product_option_value['point_to_redeem'],
				'redeem_status'           => $product_option_value['redeem_status'],
				'pov_special'             => $product_option_value['pov_special'],
				);
				}
				}
				
				$data['product_options'][] = array(
				'product_option_id'    => $product_option['product_option_id'],
				'product_option_value' => $product_option_value_data,
				'option_id'            => $product_option['option_id'],
				'name'                 => $product_option['name'],
				'type'                 => $product_option['type'],
				'value'                => isset($product_option['value']) ? $product_option['value'] : '',
				'required'             => $product_option['required']
				);
				}
				}
				
				$this->response->setOutput($this->load->view('catalog/redeem_product_option_form', $data));
				}
				
				public function saveProductRedeem() {
				$this->load->language('catalog/product');
				$this->load->model('catalog/product');
				
				$url = '';
				
				if (isset($this->request->get['filter_name'])) {
				$url .= '&filter_name=' . urlencode(html_entity_decode($this->request->get['filter_name'], ENT_QUOTES, 'UTF-8'));
				}
				
				if (isset($this->request->get['filter_model'])) {
				$url .= '&filter_model=' . urlencode(html_entity_decode($this->request->get['filter_model'], ENT_QUOTES, 'UTF-8'));
				}
				
				if (isset($this->request->get['filter_price'])) {
				$url .= '&filter_price=' . $this->request->get['filter_price'];
				}
				
				if (isset($this->request->get['filter_quantity'])) {
				$url .= '&filter_quantity=' . $this->request->get['filter_quantity'];
				}
				
				if (isset($this->request->get['filter_autocount_item'])) {
				$url .= '&filter_autocount_item=' . $this->request->get['filter_autocount_item'];
				}
				
				if (isset($this->request->get['filter_status'])) {
				$url .= '&filter_status=' . $this->request->get['filter_status'];
				}
				
				if (isset($this->request->get['sort'])) {
				$url .= '&sort=' . $this->request->get['sort'];
				}
				
				
				if (isset($this->request->get['type'])) {
				$url .= '&type=' . $this->request->get['type'];
				}
				
				if (isset($this->request->get['can_redeem'])) {
				$url .= '&can_redeem=' . $this->request->get['can_redeem'];
				}
				
				if (isset($this->request->get['order'])) {
				$url .= '&order=' . $this->request->get['order'];
				}
				
				if (isset($this->request->get['page'])) {
				$url .= '&page=' . $this->request->get['page'];
				}
				
				if (($this->request->server['REQUEST_METHOD'] == 'POST') && $this->validateProductRedeem()) {
				$this->model_catalog_product->saveProductRedeem($this->request->post);
				
				$this->session->data['success'] = $this->language->get('text_success');
				
				$this->response->redirect($this->url->link('catalog/product', 'user_token=' . $this->session->data['user_token'] . $url, true));
				}
				
				$this->response->redirect($this->url->link('catalog/product/add', 'user_token=' . $this->session->data['user_token'] . '&can_redeem=1', true));
				}
				
				private function validateProductRedeem() {
				if (!$this->user->hasPermission('modify', 'catalog/product')) {
				$this->error['warning'] = $this->language->get('error_permission');
				}
				
				if (!isset($this->request->post['product_id']) || !$this->request->post['product_id']) {
				$this->error['product_id'] = $this->language->get('error_product_id');
				}
				
				return !$this->error;
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[if (isset($this->request->get['limit'])) {]]>
			</search>
			<add position="before">
				<![CDATA[
				if (isset($this->request->get['can_redeem'])) {
				$can_redeem = $this->request->get['can_redeem'];
				} else {
				$can_redeem = '';
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA['filter_model' => $filter_model,]]>
			</search>
			<add position="after">
				<![CDATA[ 'can_redeem' => $can_redeem,         ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$this->model_catalog_product->deleteProduct($product_id);]]>
			</search>
			<add position="before">
				<![CDATA[
				if (isset($this->request->get['can_redeem']) && $this->request->get['can_redeem']) {
				$this->model_catalog_product->deleteRedeemProduct($product_id);
				} else {
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$this->model_catalog_product->deleteProduct($product_id);]]>
			</search>
			<add position="after">
				<![CDATA[             }         ]]>
			</add>
		</operation>
	</file>
	<file path="admin/model/catalog/product.php">
		<operation>
			<search>
				<![CDATA['points_prefix'           => $product_option_value['points_prefix'],]]>
			</search>
			<add position="after">
				<![CDATA[
				'point_to_redeem'           => $product_option_value['point_to_redeem'],
				'redeem_status'             => $product_option_value['redeem_status'],
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[price = '" . (float)$data['price'] . "',]]>
			</search>
			<add position="replace">
				<![CDATA[price = '" . (float)$data['price'] . "', point_to_redeem = '" . (int)$data['point_to_redeem'] . "',]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[price_prefix = '" . $this->db->escape($product_option_value['price_prefix']) . "',]]>
			</search>
			<add position="replace">
				<![CDATA[price_prefix = '" . $this->db->escape($product_option_value['price_prefix']) . "', point_to_redeem = '" . (int)$product_option_value['point_to_redeem'] . "', redeem_status = '" . (int)$product_option_value['redeem_status'] . "',]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[if (!empty($data['filter_name'])) {]]>
			</search>
			<add position="before">
				<![CDATA[
				if (!empty($data['type'])) {
				$sql .= " AND p.type = '" . $this->db->escape($data['type']) . "'";
				}
				
				if (isset($data['can_redeem']) && $data['can_redeem'] !== '') {
				$sql .= " AND p.can_redeem = '" . (int)$data['can_redeem'] . "'";
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA['p.sort_order']]>
			</search>
			<add position="before">
				<![CDATA[       'p.point_to_redeem',         ]]>
			</add>
		</operation>
		<operation>
			<search index="0">
				<![CDATA[if (isset($data['image'])) {]]>
			</search>
			<add position="before">
				<![CDATA[
				if (isset($data['type'])) {
				$this->db->query("UPDATE " . DB_PREFIX . "product SET type = '" . (int)$data['type'] . "' WHERE product_id = '" . (int)$product_id . "'");
				
				if ($data['type'] == 2) {
				$this->db->query("UPDATE " . DB_PREFIX . "product SET shipping = '0' WHERE product_id = '" . (int)$product_id . "'");
				
				$coupon_name = '';
				
				foreach ($data['product_description'] as $language_id => $value) {
				if ($language_id == $this->config->get('config_language_id')) {
				$coupon_name = $value['name'];
				break;
				}
				}
				
				$this->db->query("INSERT INTO " . DB_PREFIX . "redeem_coupon SET product_id = '" . (int)$product_id . "', name = '" . $this->db->escape($coupon_name) . "', code = '" . $this->db->escape($data['coupon_code']) . "', discount = '" . (float)$data['coupon_discount'] . "', type = '" . $this->db->escape($data['coupon_type']) . "', total = '" . (float)$data['coupon_total'] . "', logged = '1', shipping = '" . (int)$data['coupon_shipping'] . "'");
				
				$redeem_coupon_id = $this->db->getLastId();
				
				if (isset($data['coupon_product'])) {
				foreach ($data['coupon_product'] as $coupon_product_id) {
				$this->db->query("INSERT INTO " . DB_PREFIX . "redeem_coupon_product SET redeem_coupon_id = '" . (int)$redeem_coupon_id . "', product_id = '" . (int)$coupon_product_id . "'");
				}
				}
				
				if (isset($data['coupon_category'])) {
				foreach ($data['coupon_category'] as $coupon_category_id) {
				$this->db->query("INSERT INTO " . DB_PREFIX . "redeem_coupon_category SET redeem_coupon_id = '" . (int)$redeem_coupon_id . "', category_id = '" . (int)$coupon_category_id . "'");
				}
				}
				}
				}
				]]>
			</add>
		</operation>
		<operation>
			<search index="1">
				<![CDATA[if (isset($data['image'])) {]]>
			</search>
			<add position="before">
				<![CDATA[
				if (isset($data['type'])) {
				$this->db->query("UPDATE " . DB_PREFIX . "product SET type = '" . (int)$data['type'] . "' WHERE product_id = '" . (int)$product_id . "'");
				
				if ($data['type'] == 2) {
				$this->db->query("UPDATE " . DB_PREFIX . "product SET shipping = '0' WHERE product_id = '" . (int)$product_id . "'");
				
				$coupon_name = '';
				
				foreach ($data['product_description'] as $language_id => $value) {
				if ($language_id == $this->config->get('config_language_id')) {
				$coupon_name = $value['name'];
				break;
				}
				}
				
				$this->db->query("UPDATE " . DB_PREFIX . "redeem_coupon SET name = '" . $this->db->escape($coupon_name) . "', code = '" . $this->db->escape($data['coupon_code']) . "', discount = '" . (float)$data['coupon_discount'] . "', type = '" . $this->db->escape($data['coupon_type']) . "', total = '" . (float)$data['coupon_total'] . "', logged = '1', shipping = '" . (int)$data['coupon_shipping'] . "' WHERE product_id = '" . (int)$product_id . "'");
				
				$redeem_coupon = $this->db->query("SELECT * FROM " . DB_PREFIX . "redeem_coupon WHERE product_id = '" . (int)$product_id . "'");
				$redeem_coupon_id = $redeem_coupon->row['redeem_coupon_id'];
				
				$this->db->query("DELETE FROM " . DB_PREFIX . "redeem_coupon_product WHERE redeem_coupon_id = '" . (int)$redeem_coupon_id . "'");
				$this->db->query("DELETE FROM " . DB_PREFIX . "redeem_coupon_category WHERE redeem_coupon_id = '" . (int)$redeem_coupon_id . "'");
				
				if (isset($data['coupon_product'])) {
				foreach ($data['coupon_product'] as $coupon_product_id) {
				$this->db->query("INSERT INTO " . DB_PREFIX . "redeem_coupon_product SET redeem_coupon_id = '" . (int)$redeem_coupon_id . "', product_id = '" . (int)$coupon_product_id . "'");
				}
				}
				
				if (isset($data['coupon_category'])) {
				foreach ($data['coupon_category'] as $coupon_category_id) {
				$this->db->query("INSERT INTO " . DB_PREFIX . "redeem_coupon_category SET redeem_coupon_id = '" . (int)$redeem_coupon_id . "', category_id = '" . (int)$coupon_category_id . "'");
				}
				}
				}
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[if (isset($data['product_category'])) {]]>
			</search>
			<add position="before">
				<![CDATA[
				if ($data['type'] == 1) {
				/*
				$has_pov_point_to_redeem = false;
				
				foreach ($data['product_option'] as $product_option) {
				foreach ($product_option['product_option_value'] as $product_option_value) {
				if ($product_option_value['point_to_redeem'] > 0) {
				$has_pov_point_to_redeem = true;
				break;
				}
				}
				
				if ($has_pov_point_to_redeem) {
				break;
				}
				}
				
				if ($data['point_to_redeem'] > 0 || $has_pov_point_to_redeem) {
				$redeem_product_category = $this->config->get('config_redeem_product_category_id');
				$redeem_product_category = array_diff($redeem_product_category, $data['product_category']);
				
				foreach ($redeem_product_category as $category_id) {
				$this->db->query("INSERT INTO " . DB_PREFIX . "product_to_category SET product_id = '" . (int)$product_id . "', category_id = '" . (int)$category_id . "'");
				}
				}
				*/
				} elseif ($data['type'] == 2) {
				$redeem_coupon_category = $this->config->get('config_redeem_coupon_category_id');
				
				foreach ($redeem_coupon_category as $category_id) {
				$this->db->query("INSERT INTO " . DB_PREFIX . "product_to_category SET product_id = '" . (int)$product_id . "', category_id = '" . (int)$category_id . "'");
				}
				} elseif ($data['type'] == 3) {
				$redeem_voucher_category = $this->config->get('config_redeem_voucher_category_id');
				
				foreach ($redeem_voucher_category as $category_id) {
				$this->db->query("INSERT INTO " . DB_PREFIX . "product_to_category SET product_id = '" . (int)$product_id . "', category_id = '" . (int)$category_id . "'");
				}
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[public function getTotalProductsByLayoutId($layout_id) {]]>
			</search>
			<add position="before">
				<![CDATA[
				public function saveProductRedeem($data = array()) {
				$this->db->query("UPDATE " . DB_PREFIX . "product SET point_to_redeem = '" . (int)$data['point_to_redeem'] . "', can_redeem = '1', redeem_status = '" . (int)$data['redeem_status'] . "', auto_assign_point = '" . (int)$data['auto_assign_point'] . "' WHERE product_id = '" . (int)$data['product_id'] . "'");
				
				if ($this->config->get('config_redeem_product_category_id')) {
				foreach ($this->config->get('config_redeem_product_category_id') as $config_redeem_product_category_id) {
				$this->db->query("DELETE FROM " . DB_PREFIX . "product_to_category WHERE product_id = '" . (int)$data['product_id'] . "' AND category_id = '" . (int)$config_redeem_product_category_id . "'");
				}
				}
				
				$default_redemption_category = $this->config->get('config_redeem_default_category_id') ?? array();
				
				$selected_redemption_category = array_merge($data['redeem_product_category'], $default_redemption_category);
				
				foreach ($selected_redemption_category as $category_id) {
				$category_exist = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_to_category WHERE product_id = '" . (int)$data['product_id'] . "' AND category_id = '" . (int)$category_id . "'");
				
				if (!$category_exist->row) {
				$this->db->query("INSERT INTO " . DB_PREFIX . "product_to_category SET product_id = '" . (int)$data['product_id'] . "', category_id = '" . (int)$category_id . "'");
				}
				}
				
				if (isset($data['product_option_value']) && $data['product_option_value']) {
				foreach ($data['product_option_value'] as $product_option_value_id => $product_option_value) {
				$this->db->query("UPDATE " . DB_PREFIX . "product_option_value SET point_to_redeem = '" . (int)$product_option_value['point_to_redeem'] . "', redeem_status = '" . (int)$product_option_value['redeem_status'] . "' WHERE product_option_value_id = '" . (int)$product_option_value_id . "'");
				}
				}
				}
				
				public function deleteRedeemProduct($product_id) {
				$this->db->query("UPDATE " . DB_PREFIX . "product SET point_to_redeem = '0', can_redeem = '0', redeem_status = '0', auto_assign_point = '0' WHERE product_id = '" . (int)$product_id . "'");
				$this->db->query("UPDATE " . DB_PREFIX . "product_option_value SET point_to_redeem = '0', redeem_status = '0' WHERE product_id = '" . (int)$product_id . "'");
				}
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/language/en-gb/en-gb.php">
		<operation>
			<search>
				<![CDATA[$_['button_cart']           = 'Add to Cart';]]>
			</search>
			<add position="after">
				<![CDATA[$_['button_redeem']           = 'Redeem';]]>
			</add>
		</operation>
	</file>
	<file path="catalog/view/theme/journal3/template/product/product.twig">
		
		<operation>
		<search>
		<![CDATA[<div class="buttons-wrapper">]]>
		</search>
		<add position="replace">
		<![CDATA[<div class="buttons-wrapper {{ type == 2 or type == 3 ? 'hide' }}">]]>
		</add>
		</operation>
		<operation>
		<search>
		<![CDATA[<div class="price-group">]]>
		</search>
		<add position="replace">
		<![CDATA[<div class="price-group {{ type == 2 or type == 3 ? 'hide' }}">]]>
		</add>
		</operation>
		<operation>
		<search>
		<![CDATA[<a class="btn btn-more-details"]]>
		</search>
		<add position="after" offset="4">
		<![CDATA[
		<div class="redeem-with-point {{ product_quantity <= 0 or (not can_redeem and type == 1) ? 'hide' }}" style="margin-top: 10px;">
		<a id="button-redeem" data-loading-text="<span class='btn-text'>{{ button_redeem }}</span>" class="btn btn-cart" {% if (j3.settings.get(stylePrefix ~ 'CartDisplay') == "icon") and (j3.settings.get(stylePrefix ~ 'CartTooltipStatus')) %} data-toggle="tooltip" data-tooltip-class="pp-cart-tooltip" data-placement="{{ j3.settings.get(stylePrefix ~ 'CartTooltipPosition') }}" title="{{ button_redeem }}" {% endif %}><span class="btn-text">{{ button_redeem }} with {{ redeem_point|number_format }}pts</span></a>
		</div>
		]]>
		</add>
		</operation>
		
		<operation>
			<search>
				<![CDATA[<a id="button-cart" ]]>
			</search>
			<add position="before">
				<![CDATA[     {% if not redeem %}  ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[<a id="button-cart" ]]>
			</search>
			<add position="after">
				<![CDATA[
				{% else %}
				<div class="redeem-with-point {{ product_quantity <= 0 or (not can_redeem and type == 1) ? 'hide' }}">
				<a id="button-redeem" data-loading-text="<span class='btn-text'>{{ button_redeem }}</span>" class="btn btn-cart" {% if (j3.settings.get(stylePrefix ~ 'CartDisplay') == "icon") and (j3.settings.get(stylePrefix ~ 'CartTooltipStatus')) %} data-toggle="tooltip" data-tooltip-class="pp-cart-tooltip" data-placement="{{ j3.settings.get(stylePrefix ~ 'CartTooltipPosition') }}" title="{{ button_redeem }}" {% endif %}><span class="btn-text">{{ button_redeem }}</span></a>
				</div>
				{% endif %}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[<div class="price-group">]]>
			</search>
			<add position="replace">
				<![CDATA[<div class="price-group {{ type == 2 or type == 3 or redeem ? 'hide' }}">]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[{% if discounts %}]]>
			</search>
			<add position="before">
				<![CDATA[
				{% if type == 2 or type == 3 or redeem %}
				<div class="price-group product-point-to-redeem" style="padding-top: 10px;"></div>
				{% else %}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[<div class="product-discount">{{ discount.quantity }}{{ text_discount }}{{ discount.price }}</div>]]>
			</search>
			<add position="after" offset="3">
				<![CDATA[{% endif %}]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[{% for id, extra_button in product_extra_buttons %}]]>
			</search>
			<add position="before">
				<![CDATA[     {% if not redeem %}  ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[<span class="btn-text">{{ extra_button.label }}</span>]]>
			</search>
			<add position="after" offset="3">
				<![CDATA[                  {% endif %}         ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[#button-cart]]>
			</search>
			<add position="replace">
				<![CDATA[#button-cart, #button-redeem]]>
			</add>
		</operation>
		<operation>
			<search index="0">
				<![CDATA[<script type="text/javascript"><!--]]>
			</search>
			<add position="before">
				<![CDATA[
				<div id="delete-confirmation-modal" class="modal fade" tabindex="-1" role="dialog">
				<div class="modal-dialog" role="document" style="top: 50%; -ms-transform: translateY(-50%); transform: translateY(-50%);">
				<div class="modal-content">
				<div class="modal-header">
				<h4 class="modal-title">Warning</h4>
				</div>
				<div class="modal-body">
				{% if redeem %}
				<p>{{ text_remove_nonredeem_in_cart }}</p>
				{% else %}
				<p>{{ text_remove_redeem_in_cart }}</p>
				{% endif %}
				</div>
				<div class="modal-footer" style="display: flex; justify-content:space-between">
				<button type="button" class="btn btn-info" data-dismiss="modal" style="margin-left: 0; margin-right: auto;">Cancel</button>
				<button type="button" class="btn btn-danger" data-dismiss="modal" id="modal-btn-remove" onclick="confirmDeleteCart()" style="margin-right: 0; margin-left: auto;">Confirm</button>
				</div>
				</div>
				</div>
				</div>
				
				<script type="text/javascript"><!--
				var confirm_add = 0;
				var cart_btn = '';
				if (typeof checkCartProducts != 'function') {
				function checkCartProducts(is_redeem) {
				$.ajax({
				url: 'index.php?route=checkout/cart/checkCart',
				type: 'post',
				data: 'is_redeem=' + is_redeem,
				dataType: 'json',
				beforeSend: function () {
				$('.btn-cart').button('loading');
				},
				complete: function () {
				$('.btn-cart').button('reset');
				},
				success: function (json) {
				if (json['confirm_delete']) {
				$('#delete-confirmation-modal').modal('show');
				} else {
				confirm_add = 1;
				$(cart_btn).trigger('click');
				}
				},
				error: function (xhr, ajaxOptions, thrownError) {
				alert(thrownError + '\r\n' + xhr.statusText + '\r\n' + xhr.responseText);
				}
				});
				}
				}
				
				if (typeof confirmDeleteCart != 'function') {
				function confirmDeleteCart() {
				$.ajax({
				url: 'index.php?route=checkout/cart/emptyCart',
				type: 'get',
				dataType: 'json',
				success: function (json) {
				confirm_add = 1;
				$(cart_btn).trigger('click');
				},
				error: function (xhr, ajaxOptions, thrownError) {
				alert(thrownError + '\r\n' + xhr.statusText + '\r\n' + xhr.responseText);
				}
				});
				}
				}
				//--></script>
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[var $btn = $(this);]]>
			</search>
			<add position="after">
				<![CDATA[
				var data = '';
				
				if ($btn.attr('id') == 'button-redeem') {
				data = '&is_redeem=1';
				}
				
				{% if not j3.document.isPopup() %}
				cart_btn = $btn;
				if (!confirm_add) {
				var is_redeem = 0;
				if ($btn.attr('id') == 'button-redeem') {
				is_redeem = 1;
				}
				
				checkCartProducts(is_redeem);
				if (!confirm_add) {
				return;
				}
				}
				{% endif %}
				confirm_add = 0;
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA['#product select[name="recurring_id"]']]>
			</search>
			<add position="replace" offset="1">
				<![CDATA[
				'#product select[name="recurring_id"]'
				).serialize() + data,
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[{% if options %}]]>
			</search>
			<add position="before">
				<![CDATA[
				<!-- {% if is_imp_customer_group %}
				<div>
				{{ text_total_point }} {{ point_balance }} pts.
				<br>
				<a href="{{ redeem_wallet_link }}" class="btn btn-primary">{{ text_redeem_wallet }}</a>
				</div>
				<br><br>
				{% endif %} -->
				
				<div id="redeem-error" class="form-group"></div>
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[if (json['error']['recurring']) {]]>
			</search>
			<add position="before">
				<![CDATA[
				if (json['error']['redeem']) {
				$('#redeem-error').append('<div class="text-danger">' + json['error']['redeem'] + '</div>');
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[{% set stylePrefix = j3.document.isPopup('quickview') ? 'quickviewPageStyle' : 'productPageStyle' %}]]>
			</search>
			<add position="before">
				<![CDATA[
				{% set can_redeem = false %}
				{% set redeem_point = 0 %}
				{% set has_option = not options is empty %}
				{% if not has_option and point_to_redeem > 0 %}
				{% set can_redeem = true %}
				{% set redeem_point = point_to_redeem %}
				{% endif %}
				]]>
			</add>
		</operation>
		<!--
		<operation>
		<search>
		<![CDATA[<div class="radio">]]>
		</search>
		<add position="after">
		<![CDATA[
		{% if loop.first and option_value.point_to_redeem > 0 and option_value.available %}
		{% set can_redeem = true %}
		{% set redeem_point = option_value.point_to_redeem %}
		{% endif %}
		]]>
		</add>
		</operation>
		-->
		<operation>
			<search index="2">
				<![CDATA[({{ option_value.price_prefix }}{{ option_value.price }})]]>
			</search>
			<add position="before">
				<![CDATA[
				{% if redeem %}
				({{ option_value.point_to_redeem|number_format }} pts)
				{% else %}
				]]>
			</add>
		</operation>
		<operation>
			<search index="2">
				<![CDATA[({{ option_value.price_prefix }}{{ option_value.price }})]]>
			</search>
			<add position="after">
				<![CDATA[                         {% endif %}         ]]>
			</add>
		</operation>
	</file>
	<file path="catalog/controller/checkout/cart.php">
		<operation>
			<search>
				<![CDATA[class ControllerCheckoutCart extends Controller {]]>
			</search>
			<add position="before">
				<![CDATA[use EPoint\EPoint;]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA['total'     => $total,]]>
			</search>
			<add position="after">
				<![CDATA[
				'point_to_redeem' => $product['point_to_redeem'],
				'total_point_to_redeem' => number_format($product['point_to_redeem'] * $product['quantity']),
				'is_redeem'       => $product['is_redeem'],
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[ 'href'      => $this->url->link('product/product', 'product_id=' . $product['product_id'])         ]]>
			</search>
			<add position="replace">
				<![CDATA[
				// 'href'      => $this->url->link('product/product', 'product_id=' . $product['product_id'])
				'href'      => $product['is_redeem'] ? $this->url->link('product/product', 'product_id=' . $product['product_id'] . '&can_redeem=1') : $this->url->link('product/product', 'product_id=' . $product['product_id'])
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$json['error']['recurring'] = $this->language->get('error_recurring_required');]]>
			</search>
			<add position="after" offset="2">
				<![CDATA[
				$is_redeem = 0;
				if (isset($this->request->post['is_redeem']) && (bool)$this->request->post['is_redeem']) {
				$epoint = new EPoint($this->registry);
				$is_redeem = 1;
				$point_balance = (int)$epoint->getCustomerPoint($this->customer->getId()) - (int)($this->session->data['point'] ?? 0);
				$used_point_in_cart = $this->cart->getUsedPointInCart();
				$point_to_redeem = 0;
				
				if (empty($option)) {
				$point_to_redeem += $this->cart->getPointToRedeem($product_info['product_id'], $quantity);
				} else {
				foreach ($option as $product_option_id => $product_option_value_id) {
				$point_to_redeem += $this->cart->getPointToRedeem($product_info['product_id'], $quantity, $product_option_id, $product_option_value_id);
				}
				}
				
				if ($point_balance < $used_point_in_cart || $point_balance < ($used_point_in_cart + $point_to_redeem)) {
				$json['error']['redeem'] = $this->language->get('error_redeem');
				}
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$this->cart->add($this->request->post['product_id'], $quantity, $option, $recurring_id);]]>
			</search>
			<add position="replace">
				<![CDATA[$this->cart->add($this->request->post['product_id'], $quantity, $option, $recurring_id, $is_redeem);]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[foreach ($this->request->post['quantity'] as $key => $value) {]]>
			</search>
			<add position="before">
				<![CDATA[$error_redeem = false;]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$this->cart->update($key, $value);]]>
			</search>
			<add position="replace">
				<![CDATA[
				$cart = $this->cart->getCart($key);
				
				if ($cart['is_redeem']) {
				$epoint = new EPoint($this->registry);
				
				$point_balance = (int)$epoint->getCustomerPoint($this->customer->getId()) - (int)($this->session->data['point'] ?? 0);
				$used_point_in_cart_except = (int)$this->cart->getUsedPointInCartExcept($key);
				$option = array_filter(json_decode($cart['option'], true));
				$point_to_redeem = 0;
				
				if (empty($option)) {
				$point_to_redeem += (int)$this->cart->getPointToRedeem($cart['product_id'], $value);
				} else {
				foreach ($option as $product_option_id => $product_option_value_id) {
				$point_to_redeem += (int)$this->cart->getPointToRedeem($cart['product_id'], $value, $product_option_id, $product_option_value_id);
				}
				}
				
				if ($point_balance < $used_point_in_cart_except || $point_balance < ($used_point_in_cart_except + $point_to_redeem)) {
				$error_redeem = true;
				} else {
				$this->cart->update($key, $value);
				}
				} else {
				$this->cart->update($key, $value);
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$this->session->data['success'] = $this->language->get('text_remove');]]>
			</search>
			<add position="after">
				<![CDATA[
				if ($error_redeem) {
				$this->session->data['error_redeem'] = $this->language->get('error_redeem');
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$data['action'] = $this->url->link('checkout/cart/edit', '', true);]]>
			</search>
			<add position="before">
				<![CDATA[
				if (isset($this->session->data['error_redeem'])) {
				$data['error_redeem'] = $this->session->data['error_redeem'];
				
				unset($this->session->data['error_redeem']);
				} else {
				$data['error_redeem'] = '';
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[public function remove()]]>
			</search>
			<add position="before">
				<![CDATA[
				public function checkCart() {
				$is_redeem = isset($this->request->post['is_redeem']) ? $this->request->post['is_redeem'] : 0;
				
				$json = array();
				
				$confirm_delete = 0;
				foreach ($this->cart->getProducts() as $product) {
				if ($product['is_redeem'] != $is_redeem) {
				$confirm_delete = 1;
				break;
				}
				}
				
				$json['confirm_delete'] = $confirm_delete;
				
				$this->response->addHeader('Content-Type: application/json');
				$this->response->setOutput(json_encode($json));
				}
				
				public function emptyCart() {
				$this->cart->clear();
				
				$json = array();
				$json['success'] = 1;
				
				$this->response->addHeader('Content-Type: application/json');
				$this->response->setOutput(json_encode($json));
				}
				]]>
			</add>
		</operation>
	</file>
	<file path="system/library/cart/cart.php">
		<operation>
			<search>
				<![CDATA[public function getRecurringProducts() {]]>
			</search>
			<add position="before">
				<![CDATA[
				public function getCart($cart_id) {
				$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "cart WHERE api_id = '" . (isset($this->session->data['api_id']) ? (int)$this->session->data['api_id'] : 0) . "' AND customer_id = '" . (int)$this->customer->getId() . "' AND session_id = '" . $this->db->escape($this->session->getId()) . "' AND cart_id = '" . (int)$cart_id . "'");
				
				return $query->row;
				}
				
				public function getUsedPointInCart() {
				return $this->getUsedPoint();
				}
				
				public function getUsedPointInCartExcept($cart_id) {
				return $this->getUsedPoint($cart_id);
				}
				
				public function getUsedPoint($except_cart_id = null) {
				$used_point = 0;
				
				$sql = "SELECT product_id, `option`, quantity FROM " . DB_PREFIX . "cart WHERE api_id = '" . (isset($this->session->data['api_id']) ? (int)$this->session->data['api_id'] : 0) . "' AND customer_id = '" . (int)$this->customer->getId() . "' AND session_id = '" . $this->db->escape($this->session->getId()) . "' AND is_redeem = '1'";
				
				if ($except_cart_id) {
				$sql .= " AND cart_id != '" . (int)$except_cart_id . "'";
				}
				
				$query = $this->db->query($sql);
				
				foreach ($query->rows as $item) {
				$option = array_filter(json_decode($item['option'], true));
				
				if (empty($option)) {
				$used_point += (int)$this->getPointToRedeem($item['product_id'], $item['quantity']);
				} else {
				foreach ($option as $product_option_id => $product_option_value_id) {
				$used_point += (int)$this->getPointToRedeem($item['product_id'], $item['quantity'], $product_option_id, $product_option_value_id);
				}
				}
				}
				
				return $used_point;
				}
				
				public function getPointToRedeem($product_id, $quantity = 1, $product_option_id = null, $product_option_value_id = null) {
				if (empty($product_option_id) && empty($product_option_value_id)) {
				$sql = "SELECT point_to_redeem FROM " . DB_PREFIX . "product WHERE product_id = '" . (int)$product_id . "'";
				} else {
				$sql = "SELECT point_to_redeem FROM " . DB_PREFIX . "product_option_value WHERE product_id = '" . (int)$product_id . "' AND product_option_id = '" . (int)$product_option_id . "' AND product_option_value_id = '" . (int)$product_option_value_id . "'";
				}
				
				$query = $this->db->query($sql);
				
				return $query->row['point_to_redeem'] ? $query->row['point_to_redeem'] * $quantity : 0;
				}
				
				public function getPriceRedeemDeductionTotal() {
				$total = 0;
				
				foreach ($this->getProducts() as $product) {
				if ($product['is_redeem']) {
				$total += $product['total'];
				}
				}
				
				return $total;
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[public function add($product_id, $quantity = 1, $option = array(), $recurring_id = 0) {]]>
			</search>
			<add position="replace">
				<![CDATA[public function add($product_id, $quantity = 1, $option = array(), $recurring_id = 0, $is_redeem = 0) {]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[AND `option` = '" . $this->db->escape(json_encode($option)) . "']]>
			</search>
			<add position="replace">
				<![CDATA[AND `option` = '" . $this->db->escape(json_encode($option)) . "' AND is_redeem = '" . (int)$is_redeem . "']]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[`option` = '" . $this->db->escape(json_encode($option)) . "',]]>
			</search>
			<add position="replace">
				<![CDATA[`option` = '" . $this->db->escape(json_encode($option)) . "', is_redeem = '" . (int)$is_redeem . "',]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[pov.option_value_id, ovd.name,]]>
			</search>
			<add position="replace">
				<![CDATA[pov.option_value_id, ovd.name, pov.point_to_redeem,]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$option_sku = '';]]>
			</search>
			<add position="after">
				<![CDATA[$option_point_to_redeem = 0;]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$option_sku = $option_value_query->row['sku'];]]>
			</search>
			<add position="after">
				<![CDATA[$option_point_to_redeem = $option_value_query->row['point_to_redeem'];]]>
			</add>
		</operation>
		<operation>
			<search index="0">
				<![CDATA['price_prefix'            => $option_value_query->row['price_prefix'],]]>
			</search>
			<add position="after">
				<![CDATA['point_to_redeem' => $option_point_to_redeem,]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$model = $option_sku;]]>
			</search>
			<add position="after">
				<![CDATA[$point_to_redeem = $option_point_to_redeem;]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$model = $product_query->row['model'];]]>
			</search>
			<add position="after">
				<![CDATA[$point_to_redeem = $product_query->row['point_to_redeem'];]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA['reward'          => $reward * $cart['quantity'],]]>
			</search>
			<add position="before">
				<![CDATA[
				'point_to_redeem' => $point_to_redeem,
				'is_redeem'       => (int)$cart['is_redeem'],
				]]>
			</add>
		</operation>
		<operation>
			<search index="1">
				<![CDATA[foreach ($cart_query->rows as $cart) {]]>
			</search>
			<add position="after">
				<![CDATA[
				if ($cart['is_redeem'] && $this->customer->getGroupId() != $this->config->get('config_imp_customer_group_id')) {
				$this->remove($cart['cart_id']);
				
				continue;
				}
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/language/en-gb/checkout/cart.php">
		<operation>
			<search>
				<![CDATA[$_['error_recurring_required'] = 'Please select a payment recurring!';]]>
			</search>
			<add position="after">
				<![CDATA[$_['error_redeem'] = 'Warning: You do not have enough points to redeem!';]]>
			</add>
		</operation>
	</file>
	<!--
	<file path="catalog/controller/common/cart.php">
	<operation>
	<search>
	<![CDATA['thumb'     => $image,]]>
	</search>
	<add position="before">
	<![CDATA[
	'is_redeem'     => $product['is_redeem'],
	'point_to_redeem'     => $product['point_to_redeem'],
	'total_point_to_redeem'     => number_format($product['point_to_redeem'] * $product['quantity']),
	]]>
	</add>
	</operation>
	<operation>
	<search>
	<![CDATA['href'      => $this->url->link('product/product', 'product_id=' . $product['product_id'])]]>
	</search>
	<add position="replace">
	<![CDATA[
	// 'href'      => $this->url->link('product/product', 'product_id=' . $product['product_id'])
	'href'      => $product['is_redeem'] ? $this->url->link('product/product', 'product_id=' . $product['product_id'] . '&can_redeem=1') : $this->url->link('product/product', 'product_id=' . $product['product_id']),
	]]>
	</add>
	</operation>
	</file>
	-->
	<file path="catalog/view/theme/journal3/template/common/cart.twig">
		<operation>
			<search>
				<![CDATA[<span>{{ text_recurring }}</span><small> {{ product.recurring }}</small> {% endif %}</td>]]>
			</search>
			<add position="replace">
				<![CDATA[
				<span>{{ text_recurring }}</span><small> {{ product.recurring }}</small> {% endif %}
				{% if product.is_redeem %}
				<div style="
				font-size: 1rem;
				line-height: 1.5rem;
				padding-top: 0.25rem;
				padding-bottom: 0.25rem;
				padding-left: 0.75rem;
				padding-right: 0.75rem;
				border-radius: 9999px;
				width: -moz-fit-content;
				width: fit-content;
				background-color: rgb(187, 247, 208);
				color: rgb(22, 101, 52);
				inline-size: max-content;
				">Redeem: {{ product.total_point_to_redeem }} pts</div>
				{% endif %}
				</td>
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/model/catalog/product.php">
		<operation>
			<search>
				<![CDATA['price'            => ($query->row['discount'] ? $query->row['discount'] : $query->row['price']),]]>
			</search>
			<add position="after">
				<![CDATA[
				'point_to_redeem' => $query->row['point_to_redeem'],
				'redeem_status' => $query->row['redeem_status'],
				'type' => $query->row['type'],
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[pov.price, pov.price_prefix,]]>
			</search>
			<add position="replace">
				<![CDATA[pov.price, pov.price_prefix, pov.point_to_redeem, pov.redeem_status,]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA['price_prefix'            => $product_option_value['price_prefix'],]]>
			</search>
			<add position="after">
				<![CDATA[
				'point_to_redeem' => $product_option_value['point_to_redeem'],
				'redeem_status' => $product_option_value['redeem_status'],
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[public function getProduct($product_id) {]]>
			</search>
			<add position="after">
				<![CDATA[
				if ($this->customer->getGroupId() == $this->config->get('config_imp_customer_group_id')) {
				$product_type = '1,2,3';
				} else {
				$product_type = '1';
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[p.product_id = '" . (int)$product_id . "' AND]]>
			</search>
			<add position="replace">
				<![CDATA[p.product_id = '" . (int)$product_id . "' AND p.type IN (" . $product_type . ") AND]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$sql .= " GROUP BY p.product_id";]]>
			</search>
			<add position="before">
				<![CDATA[
				if ($this->customer->getGroupId() == $this->config->get('config_imp_customer_group_id')) {
				$product_type = '1,2,3';
				} else {
				$product_type = '1';
				}
				
				$sql .= " AND p.type IN (" . $product_type . ")";
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/controller/product/product.php">
		<operation>
			<search>
				<![CDATA[$data['points'] = $product_info['points'];]]>
			</search>
			<add position="after">
				<![CDATA[
				$epoint = new \EPoint\EPoint($this->registry);
				$data['point_balance'] = number_format($epoint->getCustomerPoint($this->customer->getId()), 2);
				
				$data['redeem_wallet_link'] = $this->url->link('account/wallet/redeem', '', true);
				$data['is_imp_customer_group'] = false;
				
				if ($this->customer->getGroupId() == $this->config->get('config_imp_customer_group_id')) {
				$data['point_to_redeem'] = $product_info['point_to_redeem'];
				$data['is_imp_customer_group'] = true;
				} else {
				$data['point_to_redeem'] = 0;
				}
				
				$data['type'] = $product_info['type'];
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA['price'                   => $price,]]>
			</search>
			<add position="after">
				<![CDATA[							'point_to_redeem' => ($this->customer->getGroupId() == $this->config->get('config_imp_customer_group_id') && $option_value['redeem_status']) ? $option_value['point_to_redeem'] : 0,]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[if ($product_info) {]]>
			</search>
			<add position="after">
				<![CDATA[
				if ((isset($this->request->get['can_redeem']) && $this->request->get['can_redeem'] && $product_info['redeem_status']) || $product_info['type'] != 1) {
				$data['redeem'] = 1;
				} else {
				$data['redeem'] = 0;
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$product_option_value_data[] = array(]]>
			</search>
			<add position="before">
				<![CDATA[
				if ($data['redeem'] && !$option_value['redeem_status']) {
				continue;
				}
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/controller/journal3/price.php">
		<operation>
			<search>
				<![CDATA[foreach ($product_option_values as $product_option_value) {]]>
			</search>
			<add position="after">
				<![CDATA[
				if ($this->customer->getGroupId() == $this->config->get('config_imp_customer_group_id') && $product_option_value['redeem_status']) {
				$data['point_to_redeem'] = $product_option_value['point_to_redeem'] * $quantity;
				} else {
				$data['point_to_redeem'] = 0;
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[// price]]>
			</search>
			<add position="before">
				<![CDATA[
				// point to redeem
				if (empty($product_options)) {
				if ($this->customer->getGroupId() == $this->config->get('config_imp_customer_group_id') && ($product_info['redeem_status'] || $product_info['type'] != 1)) {
				$data['point_to_redeem'] = $product_info['point_to_redeem'] * $quantity;
				} else {
				$data['point_to_redeem'] = 0;
				}
				}
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/view/theme/journal3/js/journal.js">
		<operation>
			<search>
				<![CDATA[if (json['response']['price']) {]]>
			</search>
			<add position="before">
				<![CDATA[
				if (json['response']['in_stock'] && json['response']['point_to_redeem'] > 0) {
				$('.redeem-with-point').removeClass('hide');
				$('.product-point-to-redeem').removeClass('hide').text(json['response']['point_to_redeem'].toLocaleString() + ' pts');
				} else {
				$('.price-group.product-point-to-redeem').addClass('hide');
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[if (data['special']) {]]>
			</search>
			<add position="before">
				<![CDATA[
				html += '<span>';
				
				if (data['type'] == 1) {
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[html += '<span class="price">' + data['price'] + '</span>';]]>
			</search>
			<add position="after" offset="1">
				<![CDATA[
				if (data['point_to_redeem'] > 0) {
				html += '<span class="redeem-tag" style="margin-left: 5px">' + data['point_to_redeem'] + ' pts</span>';
				}
				} else {
				if (data['point_to_redeem'] > 0) {
				html += '<span class="redeem-tag" style="margin-left: 5px">' + data['point_to_redeem'] + ' pts</span>';
				}
				}
				
				html += '</span>';
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[html += '<span><span class="price-old">' + data['price'] + '</span><span class="price-new">' + data['special'] + '</span></span>';]]>
			</search>
			<add position="replace">
				<![CDATA[html += '<span class="price-old">' + data['price'] + '</span><span class="price-new">' + data['special'] + '</span>';]]>
			</add>
		</operation>
	</file>
	<file path="catalog/view/theme/journal3/template/checkout/cart.twig">
		<operation>
			<search>
				<![CDATA[{% if error_warning %}]]>
			</search>
			<add position="before">
				<![CDATA[
				{% if error_redeem %}
				<div class="alert alert-danger alert-dismissible"><i class="fa fa-exclamation-circle"></i> {{ error_redeem }}
				<button type="button" class="close" data-dismiss="alert">&times;</button>
				</div>
				{% endif %}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[<span class="label label-info">{{ text_recurring_item }}</span> <small>{{ product.recurring }}</small> {% endif %}]]>
			</search>
			<add position="replace">
				<![CDATA[
				<span class="label label-info">{{ text_recurring_item }}</span> <small>{{ product.recurring }}</small> {% endif %}
				{% if product.is_redeem %}
				<div style="
				font-size: 1rem;
				line-height: 1.5rem;
				padding-top: 0.25rem;
				padding-bottom: 0.25rem;
				padding-left: 0.75rem;
				padding-right: 0.75rem;
				border-radius: 9999px;
				width: -moz-fit-content;
				width: fit-content;
				background-color: rgb(187, 247, 208);
				color: rgb(22, 101, 52);
				">Redeem: {{ product.total_point_to_redeem }} pts</div>
				{% endif %}
				]]>
			</add>
		</operation>
		<!--
		<operation>
		<search>
		<![CDATA[<td class="text-center td-total">{{ product.total }}</td>]]>
		</search>
		<add position="replace">
		<![CDATA[
		<td class="text-center td-total">
		{% if product.is_redeem %}
		<span style="text-decoration-line: line-through;">{{ product.total }}</span>
		<span>Free</span>
		{% else %}
		{{ product.total }}
		{% endif %}
		</td>
		]]>
		</add>
		</operation>
		-->
	</file>
	<file path="catalog/view/theme/journal3/template/journal3/checkout/checkout.twig">
		<operation>
			<search>
				<![CDATA[{{ footer }}]]>
			</search>
			<add position="before">
				<![CDATA[
				<style>
				.quick-checkout-wrapper .checkout-section.cart-section .section-body {
				position: relative;
				}
				</style>
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/view/theme/journal3/template/journal3/checkout/cart.twig">
		<operation>
			<search>
				<![CDATA[<small v-if="product.recurring" v-html="product.recurring"></small>]]>
			</search>
			<add position="replace">
				<![CDATA[
				<div v-if="product.is_redeem" style="
				font-size: 1rem;
				line-height: 1.5rem;
				padding-top: 0.25rem;
				padding-bottom: 0.25rem;
				padding-left: 0.75rem;
				padding-right: 0.75rem;
				margin-bottom: 0.25rem;
				border-radius: 9999px;
				width: -moz-fit-content;
				width: fit-content;
				background-color: rgb(187, 247, 208);
				color: rgb(22, 101, 52);
				">Redeem: <span v-html="product.total_point_to_redeem"></span> pts</div>
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/model/journal3/checkout.php">
		<operation>
			<search>
				<![CDATA['total'      => $product['total'],]]>
			</search>
			<add position="after">
				<![CDATA[
				'point_to_redeem' => $product['point_to_redeem'],
				'total_point_to_redeem' => number_format($product['point_to_redeem'] * $product['quantity']),
				'is_redeem'       => $product['is_redeem'],
				]]>
			</add>
		</operation>
	</file>
	<!--
	<file path="catalog/model/journal3/product.php">
	<operation>
	<search>
	<![CDATA[public function getProduct($product_id) {]]>
	</search>
	<add position="after">
	<![CDATA[
	$route = isset($this->request->get['route']) ? $this->request->get['route'] : '';
	$path = isset($this->request->get['path']) ? $this->request->get['path'] : '';
	$categories = explode('_', $path) ?? '';
	
	$redeem_default_category = $this->config->get('config_redeem_default_category_id');
	$redeem_product_category = $this->config->get('config_redeem_product_category_id');
	$redeem_coupon_category = $this->config->get('config_redeem_coupon_category_id');
	$redeem_voucher_category = $this->config->get('config_redeem_voucher_category_id');
	$redemption_categories = array_merge($redeem_default_category, $redeem_product_category, $redeem_coupon_category, $redeem_voucher_category);
	
	if ($this->customer->getGroupId() == $this->config->get('config_imp_customer_group_id')) {
	$product_type = '1,2,3';
	} else {
	if ($route == 'product/category' && array_intersect($categories, $redemption_categories)) {
	$product_type = '0';
	} else {
	$product_type = '1';
	}
	}
	]]>
	</add>
	</operation>
	<operation>
	<search>
	<![CDATA[p.product_id IN (" . implode(',', $product_ids) . ") AND]]>
	</search>
	<add position="replace">
	<![CDATA[p.product_id IN (" . implode(',', $product_ids) . ") AND p.type IN (" . $product_type . ") AND]]>
	</add>
	</operation>
	<operation>
	<search>
	<![CDATA[
	$result[$row['product_id']] = array(
	]]>
	</search>
	<add position="before">
	<![CDATA[
	$point_to_redeem = 0;
	if ($route == 'product/category' && array_intersect($categories, $redemption_categories)) {
	$point_to_redeem = $row['point_to_redeem'];
	}
	]]>
	</add>
	</operation>
	<operation>
	<search>
	<![CDATA[$result[$row['product_id']] = array(]]>
	</search>
	<add position="after">
	<![CDATA[
	'point_to_redeem'  => $point_to_redeem,
	'type'             => $row['type'],
	'redeem_status'    => $row['redeem_status'],
	]]>
	</add>
	</operation>
	</file>
	-->
	<file path="catalog/model/journal3/order.php">
		<operation>
			<search>
				<![CDATA[$order_product_id = $this->db->getLastId();]]>
			</search>
			<add position="after">
				<![CDATA[
				if ((int)$product['is_redeem']) {
				$this->db->query("UPDATE " . DB_PREFIX . "order_product SET is_redeem = '1', point_to_redeem = '" . (int)$product['point_to_redeem'] . "' WHERE order_product_id = '" . (int)$order_product_id . "'");
				}
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/controller/account/order.php">
		<operation>
			<search>
				<![CDATA[$data['products'][] = array(]]>
			</search>
			<add position="before">
				<![CDATA[
				if($product['is_redeem']) {
				$reorder = '';
				}
				
				$this->load->model('checkout/order');
				$return_within_days = $this->config->get('total_point_return_within_days') ?? 7;
				$latest_order_status = $this->model_checkout_order->getLatestOrderStatus($order_id);
				$return_info = $this->model_checkout_order->getReturnByProductId($order_id, $product['product_id']);
				
				if ($return_info) {
				$return_link = $this->url->link('account/return/info', 'return_id=' . $return_info['return_id'], true);
				} else {
				$return_link = '';
				}
				
				$allow_return = false;
				$data['return_before'] = '';
				if (in_array($latest_order_status['order_status_id'], $this->config->get('total_point_award_order_status')) && time() < (strtotime($latest_order_status['date_added']) + $return_within_days * 86400)) {
				if (!$return_info) {
				$allow_return = true;
				}
				$data['return_before'] = sprintf($this->language->get('text_return_date'), date('d-m-Y H:i A', (strtotime($latest_order_status['date_added']) + $return_within_days * 86400)));
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$data['products'][] = array(]]>
			</search>
			<add position="after">
				<![CDATA[
				'is_redeem'     => $product['is_redeem'],
				'point_to_redeem' => $product['point_to_redeem'],
				'total_point_to_redeem' => number_format($product['point_to_redeem'] * $product['quantity']),
				'allow_return'  => $allow_return,
				'return_link'   => $return_link,
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/view/theme/journal3/template/account/order_info.twig">
		<operation>
			<search>
				<![CDATA[{{ content_top }}]]>
			</search>
			<add position="after">
				<![CDATA[
				{% if return_before %}
				<div class="alert alert-info alert-dismissible" style="margin-bottom: 15px;"><i class="fa fa-exclamation-circle"></i> {{ return_before }}
				<button type="button" class="close" data-dismiss="alert">&times;</button>
				</div>
				{% endif %}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[&nbsp;<small> - {{ option.name }}: {{ option.value }}</small> {% endfor %}</td>]]>
			</search>
			<add position="replace">
				<![CDATA[
				&nbsp;<small> - {{ option.name }}: {{ option.value }}</small> {% endfor %}
				{% if product.is_redeem %}
				<div style="
				font-size: 1rem;
				line-height: 1.5rem;
				padding-top: 0.25rem;
				padding-bottom: 0.25rem;
				padding-left: 0.75rem;
				padding-right: 0.75rem;
				border-radius: 9999px;
				width: -moz-fit-content;
				width: fit-content;
				background-color: rgb(187, 247, 208);
				color: rgb(22, 101, 52);
				">Redeem: {{ product.total_point_to_redeem }} pts</div>
				{% endif %}
				</td>
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[<a href="{{ product.return }}" data-toggle="tooltip" title="{{ button_return }}" class="btn btn-danger"><i class="fa fa-reply"></i></a>]]>
			</search>
			<add position="replace">
				<![CDATA[{% if product.allow_return %}<a href="{{ product.return }}" data-toggle="tooltip" title="{{ button_return }}" class="btn btn-danger"><i class="fa fa-reply"></i></a>{% endif %}{% if product.return_link %}<a href="{{ product.return_link }}" data-toggle="tooltip" title="{{ button_return }}" class="btn btn-info"><i class="fa fa-eye"></i></a>{% endif %}]]>
			</add>
		</operation>
	</file>
	<file path="catalog/language/en-gb/account/order.php">
		<operation>
			<search>
				<![CDATA[$_['text_error']]]>
			</search>
			<add position="after">
				<![CDATA[ $_['text_return_date']      = 'All products can be return before %s.';]]>
			</add>
		</operation>
	</file>
	<file path="admin/view/template/sale/order_invoice.twig">
		<operation>
			<search>
				<![CDATA[{% endfor %}</td>]]>
			</search>
			<add position="replace">
				<![CDATA[
				{% endfor %}
				{% if product.is_redeem %}
				<span class="hidden-print" style="
				font-size: 1rem;
				line-height: 1.5rem;
				padding-top: 0.25rem;
				padding-bottom: 0.25rem;
				padding-left: 0.75rem;
				padding-right: 0.75rem;
				border-radius: 9999px;
				width: -moz-fit-content;
				width: fit-content;
				background-color: rgb(187, 247, 208);
				color: rgb(22, 101, 52);
				">Redeem: {{ product.total_point_to_redeem }} pts</span>
				<span class="visible-print">( Redeem )</span>
				{% endif %}
				</td>
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/model/extension/total/coupon.php">
		<operation>
			<search>
				<![CDATA[if ($coupon_query->row['logged'] && !$this->customer->getId()) {]]>
			</search>
			<add position="before">
				<![CDATA[
				if ($coupon_query->row['customer_id'] != 0 && $coupon_query->row['customer_id'] != $this->customer->getId()) {
				$status = false;
				}
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/controller/product/{search,catalog,manufacturer,special}.php">
		<operation>
			<search>
				<![CDATA[$image,]]>
			</search>
			<add position="after">
				<![CDATA[
				'point_to_redeem' => ($this->customer->getGroupId() == $this->config->get('config_imp_customer_group_id') ? $result['point_to_redeem'] : null),
				'type'            => $result['type'],
				]]>
			</add>
		</operation>
	</file>
	<!--
	<file path="catalog/controller/journal3/products.php">
	<operation>
	<search>
	<![CDATA[$result['name'],]]>
	</search>
	<add position="after">
	<![CDATA[
	'point_to_redeem' => ($this->customer->getGroupId() == $this->config->get('config_imp_customer_group_id') ? $result['point_to_redeem'] : null),
	'type'            => $result['type'],
	'redeem_status'   => $result['redeem_status'],
	]]>
	</add>
	</operation>
	</file>
	-->
	<file path="catalog/controller/journal3/search.php">
		<operation>
			<search>
				<![CDATA[$image,]]>
			</search>
			<add position="after">
				<![CDATA[
				'point_to_redeem' => ($this->customer->getGroupId() == $this->config->get('config_imp_customer_group_id') ? $result['point_to_redeem'] : null),
				'type'            => $result['type'],
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/controller/product/category.php">
		<operation>
			<search>
				<![CDATA[$data['products'] = array();]]>
			</search>
			<add position="before">
				<![CDATA[
				$redeem_default_category = $this->config->get('config_redeem_default_category_id');
				$redeem_product_category = $this->config->get('config_redeem_product_category_id');
				$redeem_coupon_category = $this->config->get('config_redeem_coupon_category_id');
				$redeem_voucher_category = $this->config->get('config_redeem_voucher_category_id');
				
				$redemption_categories = array_merge($redeem_default_category, $redeem_product_category, $redeem_coupon_category, $redeem_voucher_category);
				
				$can_redeem = in_array($category_id, $redemption_categories);
				$data['can_redeem'] = $can_redeem;
				if ($can_redeem) {
				$url .= '&can_redeem=' . $can_redeem;
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[ $data['products'][] = array(         ]]>
			</search>
			<add position="before">
				<![CDATA[
				$point_to_redeem = 0;
				if ($can_redeem) {
				$point_to_redeem = number_format($result['point_to_redeem']);
				$product_options = $this->model_catalog_product->getProductOptions($result['product_id']);
				if ($product_options) {
				$min_point = 0;
				$max_point = 0;
				
				foreach ($product_options as $product_option) {
				foreach ($product_option['product_option_value'] as $product_option_value) {
				if ($product_option_value['redeem_status'] && $product_option_value['quantity'] > 0) {
				if ($product_option_value['point_to_redeem'] > $max_point) {
				$max_point = $product_option_value['point_to_redeem'];
				}
				
				if ($min_point == 0 || ($product_option_value['point_to_redeem'] && $product_option_value['point_to_redeem'] < $min_point)) {
				$min_point = $product_option_value['point_to_redeem'];
				}
				}
				}
				}
				
				if ($min_point && $max_point) {
				if ($min_point == $max_point) {
				$point_to_redeem = number_format($min_point);
				} else {
				$point_to_redeem = number_format($min_point) . ' - ' . number_format($max_point);
				}
				}
				}
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$image,]]>
			</search>
			<add position="after">
				<![CDATA[
				'point_to_redeem' => ($this->customer->getGroupId() == $this->config->get('config_imp_customer_group_id') ? $point_to_redeem : null),
				'type'            => $result['type'],
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/view/theme/journal3/template/journal3/product_card.twig">
		<operation>
			<search>
				<![CDATA[<div class="price">]]>
			</search>
			<add position="replace">
				<![CDATA[<div class="price" style="width: 100%">]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[{% if product.special %}]]>
			</search>
			<add position="before" offset="1">
				<![CDATA[             {% if product.type == 1 and (can_redeem is not defined or not can_redeem) %}]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[{% if product.tax %}]]>
			</search>
			<add position="before">
				<![CDATA[             {% endif %}]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[<span class="price-tax">{{ text_tax }}{{ product.tax }}</span>]]>
			</search>
			<add position="after" offset="1">
				<![CDATA[
				{% if product.point_to_redeem %}
				<div class="redeem-tag">{{ product.point_to_redeem }} pts</div>
				{% endif %}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[             <div class="cart-group">         ]]>
			</search>
			<add position="before">
				<![CDATA[             {% if (can_redeem is not defined or not can_redeem) %}         ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[<a class="btn btn-cart"]]>
			</search>
			<add position="after" offset="1">
				<![CDATA[             {% endif %}         ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[               <a class="btn btn-cart" {% if (j3.settings.getIn(prefix ~ 'CartDisplay', _context) == "icon") and (j3.settings.getIn(prefix ~ 'CartTooltipStatus', _context)) %} data-toggle="tooltip" data-tooltip-class="{{ module_id ? 'module-products-' ~ module_id ~ ' module-products-grid' : 'product-grid' }} cart-tooltip" data-placement="{{ j3.settings.getIn(prefix ~ 'CartTooltipPosition', _context) }}" title="{{ button_cart }}" {% endif %} onclick="cart.add('{{ product.product_id }}', $(this).closest('.product-thumb').find('.button-group input[name=\'quantity\']').val());" data-loading-text="<span class='btn-text'>{{ button_cart }}</span>"><span class="btn-text">{{ button_cart }}</span></a>         ]]>
			</search>
			<add position="replace">
				<![CDATA[
				<!-- <a class="btn btn-cart" {% if (j3.settings.getIn(prefix ~ 'CartDisplay', _context) == "icon") and (j3.settings.getIn(prefix ~ 'CartTooltipStatus', _context)) %} data-toggle="tooltip" data-tooltip-class="{{ module_id ? 'module-products-' ~ module_id ~ ' module-products-grid' : 'product-grid' }} cart-tooltip" data-placement="{{ j3.settings.getIn(prefix ~ 'CartTooltipPosition', _context) }}" title="{{ button_cart }}" {% endif %} onclick="cart.add('{{ product.product_id }}', $(this).closest('.product-thumb').find('.button-group input[name=\'quantity\']').val());" data-loading-text="<span class='btn-text'>{{ button_cart }}</span>"><span class="btn-text">{{ button_cart }}</span></a> -->
				<a class="btn btn-cart" {% if (j3.settings.getIn(prefix ~ 'CartDisplay', _context) == "icon") and (j3.settings.getIn(prefix ~ 'CartTooltipStatus', _context)) %} data-toggle="tooltip" data-tooltip-class="{{ module_id ? 'module-products-' ~ module_id ~ ' module-products-grid' : 'product-grid' }} cart-tooltip" data-placement="{{ j3.settings.getIn(prefix ~ 'CartTooltipPosition', _context) }}" title="{{ button_cart }}" {% endif %} onclick="checkCart('{{ product.product_id }}', $(this).closest('.product-thumb').find('.button-group input[name=\'quantity\']').val());" data-loading-text="<span class='btn-text'>{{ button_cart }}</span>"><span class="btn-text">{{ button_cart }}</span></a>
				]]>
			</add>
		</operation>
		<operation>
			<search index="4">
				<![CDATA[{% endfor %}]]>
			</search>
			<add position="before">
				<![CDATA[
				<div id="confirmation-modal" class="modal fade confirmation-modal" tabindex="-1" role="dialog">
				<div class="modal-dialog" role="document" style="top: 50%; -ms-transform: translateY(-50%); transform: translateY(-50%);">
				<div class="modal-content">
				<div class="modal-header">
				<h4 class="modal-title">Warning</h4>
				</div>
				<div class="modal-body">
				<p>{{ text_remove_redeem_in_cart }}</p>
				<input type="hidden" name="product_id" value=""/>
				<input type="hidden" name="quantity" value=""/>
				</div>
				<div class="modal-footer" style="display: flex; justify-content:space-between">
				<button type="button" class="btn btn-info" data-dismiss="modal" style="margin-left: 0; margin-right: auto;">Cancel</button>
				<button type="button" class="btn btn-danger" data-dismiss="modal" id="modal-btn-remove" onclick="confirmDelete()" style="margin-right: 0; margin-left: auto;">Confirm</button>
				</div>
				</div>
				</div>
				</div>
				<script>
				$(document).ready(function() {
				$('.confirmation-modal').each(function(index, element) {
				if (index != 0) {
				$(element).remove();
				}
				});
				});
				
				if (typeof checkCart != 'function') {
				function checkCart(product_id, quantity) {
				$.ajax({
				url: 'index.php?route=checkout/cart/checkCart',
				type: 'post',
				data: 'product_id=' + product_id + '&is_redeem=0',
				dataType: 'json',
				beforeSend: function () {
				$('.btn-cart').button('loading');
				},
				complete: function () {
				$('.btn-cart').button('reset');
				},
				success: function (json) {
				if (json['confirm_delete']) {
				$('#confirmation-modal input[name="product_id"]').val(product_id);
				$('#confirmation-modal input[name="quantity"]').val(quantity);
				$('#confirmation-modal').appendTo('body');
				$('#confirmation-modal').modal('show');
				} else {
				cart.add(product_id, quantity);
				}
				},
				error: function (xhr, ajaxOptions, thrownError) {
				alert(thrownError + '\r\n' + xhr.statusText + '\r\n' + xhr.responseText);
				}
				});
				}
				}
				
				if (typeof confirmDelete != 'function') {
				function confirmDelete() {
				var product_id = $('#confirmation-modal input[name="product_id"]').val();
				var quantity = $('#confirmation-modal input[name="quantity"]').val();
				
				$.ajax({
				url: 'index.php?route=checkout/cart/emptyCart',
				type: 'get',
				dataType: 'json',
				success: function (json) {
				cart.add(product_id, quantity);
				},
				error: function (xhr, ajaxOptions, thrownError) {
				alert(thrownError + '\r\n' + xhr.statusText + '\r\n' + xhr.responseText);
				}
				});
				}
				}
				</script>
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/view/theme/journal3/template/common/header.twig">
		<operation>
			<search>
				<![CDATA[{% for link in links %}]]>
			</search>
			<add position="before">
				<![CDATA[<link rel="stylesheet" media="all" type="text/css" href="catalog/view/theme/journal3/stylesheet/custom.css">]]>
			</add>
		</operation>
	</file>
	<!-- End Redeem Product -->
	<file path="catalog/language/en-gb/product/product.php">
		<operation>
			<search>
				<![CDATA[$_['text_year']                = 'year';]]>
			</search>
			<add position="before">
				<![CDATA[
				$_['text_total_point']         = 'Point balance is:';
				$_['text_redeem_wallet']       = 'Redeem Wallet';
				$_['text_remove_nonredeem_in_cart']   = 'To redeem this product, we need to remove all non-redeem products in your shopping cart.';
				$_['text_remove_redeem_in_cart']   = 'To add this product, we need to remove all redeem products in your shopping cart.';
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/view/theme/journal3/template/product/category.twig">
		<operation>
			<search>
				<![CDATA[{% if not categories and not products %}]]>
			</search>
			<add position="replace">
				<![CDATA[{% if not categories or not products %}]]>
			</add>
		</operation>
	</file>
	<file path="catalog/model/journal3/filter.php">
		<operation>
			<search>
				<![CDATA[ if ($query !== 'manufacturer') {         ]]>
			</search>
			<add position="before">
				<![CDATA[
				if ($query !== 'category' && Arr::get($filter_data, 'filter_category_id')) {
				$redeem_default_category = $this->config->get('config_redeem_default_category_id');
				$redeem_product_category = $this->config->get('config_redeem_product_category_id');
				$redeem_coupon_category = $this->config->get('config_redeem_coupon_category_id');
				$redeem_voucher_category = $this->config->get('config_redeem_voucher_category_id');
				
				$redemption_categories = array_merge($redeem_product_category, $redeem_coupon_category, $redeem_voucher_category, $redeem_default_category);
				
				if (in_array($filter_data['filter_category_id'], $redemption_categories)) {
				$sql .= " AND (p.redeem_status = '1' OR p.type != '1') AND (p.point_to_redeem > '0' OR (SELECT COUNT(*) FROM `" . DB_PREFIX . "product_option_value` povr where povr.product_id = p.product_id AND povr.redeem_status = '1' AND povr.point_to_redeem > '0' AND povr.quantity > '0') > '0')";
				}
				}
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/view/theme/journal3/template/account/wishlist.twig">
		<operation>
			<search>
				<![CDATA[               <button type="button" onclick="cart.add('{{ product.product_id }}');" data-toggle="tooltip" title="{{ button_cart }}" class="btn btn-primary" data-loading-text="<i class='fa fa-shopping-cart'></i>"><i class="fa fa-shopping-cart"></i></button>         ]]>
			</search>
			<add position="replace">
				<![CDATA[
				<!-- <button type="button" onclick="cart.add('{{ product.product_id }}');" data-toggle="tooltip" title="{{ button_cart }}" class="btn btn-primary" data-loading-text="<i class='fa fa-shopping-cart'></i>"><i class="fa fa-shopping-cart"></i></button> -->
				<button type="button" onclick="checkCart('{{ product.product_id }}');" data-toggle="tooltip" title="{{ button_cart }}" class="btn btn-primary" data-loading-text="<i class='fa fa-shopping-cart'></i>"><i class="fa fa-shopping-cart"></i></button>
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[ {{ footer }}         ]]>
			</search>
			<add position="before">
				<![CDATA[
				<div id="confirmation-modal" class="modal fade confirmation-modal" tabindex="-1" role="dialog">
				<div class="modal-dialog" role="document" style="top: 50%; -ms-transform: translateY(-50%); transform: translateY(-50%);">
				<div class="modal-content">
				<div class="modal-header">
				<h4 class="modal-title">Warning</h4>
				</div>
				<div class="modal-body">
				<p>{{ text_remove_nonredeem_in_cart }}</p>
				<input type="hidden" name="product_id" value=""/>
				<input type="hidden" name="quantity" value=""/>
				</div>
				<div class="modal-footer" style="display: flex; justify-content:space-between">
				<button type="button" class="btn btn-info" data-dismiss="modal" style="margin-left: 0; margin-right: auto;">Cancel</button>
				<button type="button" class="btn btn-danger" data-dismiss="modal" id="modal-btn-remove" onclick="confirmDelete()" style="margin-right: 0; margin-left: auto;">Confirm</button>
				</div>
				</div>
				</div>
				</div>
				<script>
				if (typeof checkCart != 'function') {
				function checkCart(product_id, quantity) {
				$.ajax({
				url: 'index.php?route=checkout/cart/checkCart',
				type: 'post',
				data: 'product_id=' + product_id + '&is_redeem=0',
				dataType: 'json',
				beforeSend: function () {
				$('.btn-cart').button('loading');
				},
				complete: function () {
				$('.btn-cart').button('reset');
				},
				success: function (json) {
				if (json['confirm_delete']) {
				$('#confirmation-modal input[name="product_id"]').val(product_id);
				$('#confirmation-modal input[name="quantity"]').val(quantity);
				$('#confirmation-modal').appendTo('body');
				$('#confirmation-modal').modal('show');
				} else {
				cart.add(product_id, quantity);
				}
				},
				error: function (xhr, ajaxOptions, thrownError) {
				alert(thrownError + '\r\n' + xhr.statusText + '\r\n' + xhr.responseText);
				}
				});
				}
				}
				
				if (typeof confirmDelete != 'function') {
				function confirmDelete() {
				var product_id = $('#confirmation-modal input[name="product_id"]').val();
				var quantity = $('#confirmation-modal input[name="quantity"]').val();
				
				$.ajax({
				url: 'index.php?route=checkout/cart/emptyCart',
				type: 'get',
				dataType: 'json',
				success: function (json) {
				cart.add(product_id, quantity);
				},
				error: function (xhr, ajaxOptions, thrownError) {
				alert(thrownError + '\r\n' + xhr.statusText + '\r\n' + xhr.responseText);
				}
				});
				}
				}
				</script>
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/language/en-gb/account/wishlist.php">
		<operation>
			<search>
				<![CDATA[ $_['text_empty']         ]]>
			</search>
			<add position="after">
				<![CDATA[
				$_['text_remove_nonredeem_in_cart']   = 'To redeem this product, we need to remove all non-redeem products in your shopping cart.';
				$_['text_remove_redeem_in_cart']   = 'To add this product, we need to remove all redeem products in your shopping cart.';
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/model/extension/shipping/postalcode.php">
		<operation>
			<search>
				<![CDATA[ //check if address postal code is in list of allowed postal codes         ]]>
			</search>
			<add position="before">
				<![CDATA[
				if ($this->cart->getPriceRedeemDeductionTotal() > 0) {
				$status = false;
				}
				]]>
			</add>
		</operation>
	</file>
</modification>
