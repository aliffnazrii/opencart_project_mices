<?xml version="1.0" encoding="utf-8"?>
<modification>
	<name>
		Acilit Project
	</name>
	<code>
		Acilit_Project
	</code>
	<version>
		1.0
	</version>
	<author>
		MICES Technology Sdn Bhd
	</author>
	<link>
		https://www.mices.com.my
	</link>
	<file path="catalog/controller/account/register.php">
		<!-- TELEPHONE -->
		<operation>
			<search>
				<![CDATA[$this->error['telephone'] = $this->language->get('error_telephone');]]>
			</search>
			<add position="after" offset="1">
				<![CDATA[
				else {
					$existing_customer = $this->db->query("SELECT * FROM " . DB_PREFIX . "customer WHERE telephone = '" . $this->db->escape($this->request->post['telephone']) . "'");
					
					if ($existing_customer->num_rows) {
						$this->error['telephone'] = $this->language->get('error_telephone_unique');
					}
				}
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/controller/account/edit.php">
		<!-- TELEPHONE -->
		<operation>
			<search>
				<![CDATA[$this->model_account_customer->editCustomer($this->customer->getId(), $this->request->post);]]>
			</search>
			<add position="after" offset="1">
				<![CDATA[
					$dispatcher = new queue\Dispatcher($this->registry);
					$dispatcher->dispatch(new jobs\SyncMember($this->customer->getId()));
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/language/en-gb/account/register.php">
		<operation>
			<search>
				<![CDATA[$_['error_telephone']      = 'Telephone must be between 3 and 32 characters!';]]>
			</search>
			<add position="after">
				<![CDATA[$_['error_telephone_unique']    = 'User with this telephone already exist';]]>
			</add>
		</operation>
	</file>
	<file path="admin/controller/common/column_left.php">
		<!-- SIDEBAR MENU -->
		<operation>
			<search>
				<![CDATA[// Extension]]>
			</search>
			<add position="before">
				<![CDATA[
				// Acilit Menu
				$data['menus'][] = array(
					'id'       => 'menu-acilit',
					'icon'     => 'fa-cogs',
					'name'     => $this->language->get('text_acilit'),
					'href'     => '',
					'children' => array(
					
						array(
							'name' => 'Settings',
							'href' => $this->url->link('extension/module/acilit', 'user_token=' . $this->session->data['user_token'], true),
							'children' => array()
						),
						array(
							'name' => 'Products',
							'href' => $this->url->link('catalog/product', 'user_token=' . $this->session->data['user_token'], true),
							'children' => array()
						),
						array(
							'name' => 'Vouchers',
							'href' => $this->url->link('catalog/product', 'user_token=' . $this->session->data['user_token'] . '&is_voucher=1', true),
							'children' => array()
						),
						array(
							'name' => 'OC Coupons',
							'href' => $this->url->link('marketing/coupon', 'user_token=' . $this->session->data['user_token'] . '&is_voucher=1', true),
							'children' => array()
						),
						array(
							'name' => 'OC Settings',
							'href' => $this->url->link('setting/setting', 'user_token=' . $this->session->data['user_token'] . '&is_voucher=1', true),
							'children' => array()
						),
						array(
							'name' => 'Customers',
							'href' => $this->url->link('customer/customer', 'user_token=' . $this->session->data['user_token'] . '&is_voucher=1', true),
							'children' => array()
						),

					)
				);
				]]>
			</add>
		</operation>
	</file>
	<!-- Add language text for the menu item -->
	<file path="admin/language/en-gb/common/column_left.php">
		<!-- MENU TEXT -->
		<operation>
			<search>
				<![CDATA[$_['text_system']]]>
			</search>
			<add position="before">
				<![CDATA[                 $_['text_acilit'] = 'Acilit';             ]]>
			</add>
		</operation>
	</file>
	<!-- API PRODUCT -->
	<file path="admin/controller/catalog/product.php">
		<!-- MENU TEXT -->
		<operation>
			<search>
				<![CDATA[if (isset($this->request->post['upc'])) {]]>
			</search>
			<add position="before">
				<![CDATA[
				if (isset($this->request->post['acilit_item_id'])) {
					$data['acilit_item_id'] = $this->request->post['acilit_item_id'];
				} elseif (!empty($product_info)) {
					$data['acilit_item_id'] = $product_info['acilit_item_id'];
				} else {
					$data['acilit_item_id'] = '';
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[class ControllerCatalogProduct extends Controller {]]>
			</search>
			<add position="before">
				<![CDATA[
					use acilit\AcilitModel;
					use queue\Dispatcher;
					use jobs\syncproduct;
					use jobs\updatestock;
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA['quantity'   => $result['quantity'], ]]>
			</search>
			<add position="after">
				<![CDATA[                 'acilit_item_id'   => $result['acilit_item_id'],             ]]>
			</add>
		</operation>
		<!-- <operation>
			<search>
				<![CDATA[$this->model_catalog_product->addProduct($this->request->post);]]>
			</search>
			<add position="replace">
				<![CDATA[
				$product_id = $this->model_catalog_product->addProduct($this->request->post);
				$product_info = $this->model_catalog_product->getProduct($product_id);
				
				if (!isset($this->request->get['is_voucher']) && $this->config->get('module_acilit_status') && $this->config->get('module_acilit_sync_product_status')) {
				$dispatcher = new queue\Dispatcher($this->registry);
				$dispatcher->dispatch(new jobs\syncProduct($product_info));
				}
				]]>
			</add>
		</operation> -->
	</file>
	<file path="admin/model/catalog/product.php">
		<operation>
			<search>
				<![CDATA[if (isset($data['image'])) {]]>
			</search>
			<add position="before">
				<![CDATA[
					$this->db->query("UPDATE " . DB_PREFIX . "product SET acilit_item_id = '" . (int)$data['acilit_item_id'] . "' WHERE product_id = '" . (int)$product_id . "'");
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA['option_value_id'         => $product_option_value['option_value_id'],]]>
			</search>
			<add position="after">
				<![CDATA[
					'model'          => $product_option_value['model'],
					'acilit_item_id' => $product_option_value['acilit_item_id'],
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$this->db->query("INSERT INTO " . DB_PREFIX . "product_option_value SET product_option_id = '" . (int)$product_option_id . "', product_id = '" . (int)$product_id . "', option_id = '" . (int)$product_option['option_id'] . "', option_value_id = '" . (int)$product_option_value['option_value_id'] . "', quantity = '" . (int)$product_option_value['quantity'] . "', subtract = '" . (int)$product_option_value['subtract'] . "', price = '" . (float)$product_option_value['price'] . "', price_prefix = '" . $this->db->escape($product_option_value['price_prefix']) . "', points = '" . (int)$product_option_value['points'] . "', points_prefix = '" . $this->db->escape($product_option_value['points_prefix']) . "', weight = '" . (float)$product_option_value['weight'] . "', weight_prefix = '" . $this->db->escape($product_option_value['weight_prefix']) . "'");]]>
			</search>
			<add position="replace">
				<![CDATA[$this->db->query("INSERT INTO " . DB_PREFIX . "product_option_value SET product_option_id = '" . (int)$product_option_id . "', product_id = '" . (int)$product_id . "', option_id = '" . (int)$product_option['option_id'] . "', option_value_id = '" . (int)$product_option_value['option_value_id'] . "', quantity = '" . (int)$product_option_value['quantity'] . "', subtract = '" . (int)$product_option_value['subtract'] . "', price = '" . (float)$product_option_value['price'] . "', price_prefix = '" . $this->db->escape($product_option_value['price_prefix']) . "', points = '" . (int)$product_option_value['points'] . "', points_prefix = '" . $this->db->escape($product_option_value['points_prefix']) . "', weight = '" . (float)$product_option_value['weight'] . "', weight_prefix = '" . $this->db->escape($product_option_value['weight_prefix']) . "', model = '" . $this->db->escape($product_option_value['model']) . "', acilit_item_id ='" . (int)$product_option_value['acilit_item_id'] . "'"); ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[. (int)$data['sort_order'] . "', date_added = NOW(),]]>
			</search>
			<add position="replace">
				<![CDATA[. (int)$data['sort_order'] . "', date_added = NOW(), acilit_item_id = '',]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[date_modified = NOW() WHERE product_id =]]>
			</search>
			<add position="replace">
				<![CDATA[date_modified = NOW(), acilit_item_id = '".$data['acilit_item_id']."' WHERE product_id =]]>
			</add>
		</operation>
	</file>
	<file path="admin/view/template/catalog/product_form.twig">
		<!-- Link interface -->
		<operation>
			<search>
				<![CDATA[{% if error_model %}]]>
			</search>
			<add position="before">
				<![CDATA[
					<input type="hidden" name="acilit_item_id" value="{{ acilit_item_id }}">
					{% if acilit_error %}
						<div id="acilit-model-message" class="text-danger">{{ acilit_error}}</div>
					{% else %}
						<div id="acilit-model-message"></div>
					{% endif %}
					<a id="btn-product-validate" class="btn btn-primary {{ acilit_item_id != '0' and acilit_item_id != '' ? 'hide' : ''}}" onclick="validateProduct()">{{ text_link }}</a>
					<a id="btn-product-unlink" class="btn btn-primary {{ acilit_item_id == '0' or acilit_item_id == '' ? 'hide' : ''}}" onclick="unlinkProduct()">{{ text_unlink }}</a>
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[<input type="text" name="model" value="{{ model }}" placeholder="{{ entry_model }}" id="input-model" class="form-control"/> ]]>
			</search>
			<add position="replace">
				<![CDATA[<input type="text" name="model" value="{{ model }}" placeholder="{{ entry_model }}" id="input-model" class="form-control" {{ acilit_item_id != '0' and acilit_item_id != '' ? 'readonly' : ''}}/> ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[</select> <input type="hidden" name="product_option[{{ option_row }}][product_option_value][{{ option_value_row }}][product_option_value_id]" value="{{ product_option_value.product_option_value_id }}"/></td>]]>
			</search>
			<add position="after">
				<![CDATA[
				<td class="text-right">
					<input type="text" name="product_option[{{ option_row }}][product_option_value][{{ option_value_row }}][model]" value="{{ product_option_value.model }}" placeholder="{{ entry_model }}" class="form-control" {{ product_option_value.acilit_item_id != 0 ? 'readonly' : '' }}/>
					<input type="hidden" name="product_option[{{ option_row }}][product_option_value][{{ option_value_row }}][acilit_item_id]" value="{{ product_option_value.acilit_item_id }}"/>
					<a id="btn-option-validate-{{ option_value_row }}" class="btn btn-primary {{ product_option_value.acilit_item_id != 0 ? 'hide' : '' }}" style="width: 100%; margin-top: 10px" onclick="validateProductOption(this, {{ option_row }}, {{ option_value_row }})">{{ text_link }}</a>
					<a id="btn-option-unlink-{{ option_value_row }}" class="btn btn-primary {{ product_option_value.acilit_item_id == 0 ? 'hide' : ''}}" style="width: 100%; margin-top: 10px" onclick="unlinkOption({{ option_row }}, {{ option_value_row }})">{{ text_unlink }}</a>
					<div id="acilit-model-message-{{ option_value_row }}" class="text-left text-success">{% if product_option_value.acilit_item_id != 0 %}Linked{% endif %}</div>
				</td
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[{{ footer }}]]>
			</search>
			<add position="after">
				<![CDATA[
				<script type="text/javascript">
				function validateProductOption(button, option_row, option_value_row) {
					$('#acilit-model-message-' + option_value_row).removeClass('text-success text-danger').text('');
					
					var model = $('input[name="product_option[' + option_row + '][product_option_value][' + option_value_row + '][model]"]').val();
					
					$.ajax({
						url: 'index.php?route=extension/module/acilit/validateProduct&user_token={{ user_token }}',
						dataType: 'json',
						method: 'POST',
						data: { model: model },

						beforeSend: function() {
							$(button).button('loading');
						},

						complete: function() {
							$(button).button('reset');
						},

						success: function(json) {
							if (json.error) {
								$('#acilit-model-message-' + option_value_row).addClass('text-danger').text(json.error);
							} else {
								$('#acilit-model-message-' + option_value_row).addClass('text-success').text('Linked');
							
								if (json.acilit_item_id) {
									$('input[name="product_option[' + option_row + '][product_option_value][' + option_value_row + '][acilit_item_id]"]').val(json.acilit_item_id);
									$('input[name="product_option[' + option_row + '][product_option_value][' + option_value_row + '][model]"]').prop('readonly', true);
									$('#btn-option-unlink-' + option_value_row).removeClass('hide');
									$('#btn-option-validate-' + option_value_row).addClass('hide');
								}
							}
						}
					});
				}
					
				function unlinkOption(option_row, option_value_row) {
					$('#acilit-model-message-' + option_value_row).removeClass('text-success text-danger').text('');
					
					$('input[name="product_option[' + option_row + '][product_option_value][' + option_value_row + '][acilit_item_id]"]').val(0);
					$('input[name="product_option[' + option_row + '][product_option_value][' + option_value_row + '][model]"]').prop('readonly', false);
					$('#btn-option-validate-' + option_value_row).removeClass('hide');
					$('#btn-option-unlink-' + option_value_row).addClass('hide');
					
					$('#acilit-model-message-' + option_value_row).addClass('text-success').text('Not linked');
				}
				</script>
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[{{ footer }}]]>
			</search>
			<add position="before">
				<![CDATA[
				<script type="text/javascript">
					function validateProduct() {
						$('#acilit-model-message').removeClass('text-success text-danger').text('');
						
						var model = $('input[name="model"]').val();
						var button = $('#btn-product-validate');
						
						$.ajax({
							url: 'index.php?route=extension/module/acilit/validateProduct&user_token={{ user_token }}',
							dataType: 'json',
							method: 'POST',
							data: { model: model },

							beforeSend: function() {
								$(button).button('loading');
							},
							complete: function() {
								$(button).button('reset');
							},
							success: function(json) {
								if (json.error) {
									$('#acilit-model-message').addClass('text-danger').text(json.error);
								} else {
									$('#acilit-model-message').addClass('text-success').text('Linked');
										
									if (json.acilit_item_id) {
										$('input[name="acilit_item_id"]').val(json.acilit_item_id);
										$('input[name="price"]').val(json.price);
										$('input[name="sku"]').val(json.quantity);
										$('input[name="acilit_item_id"]').val(json.acilit_item_id);

										{% for language in languages %}
											$('input[name="product_description[{{ language.language_id }}][name]"]').val(json.name);
											$('textarea[name="product_description[{{ language.language_id }}][description]"]').val(json.description);
										{% endfor %}
										
										$('input[name="model"]').prop('readonly', true);
										$('#btn-product-unlink').removeClass('hide');
										$('#btn-product-validate').addClass('hide');
									}
								}
							}
						});
					}
				
					function unlinkProduct() {
						$('#acilit-model-message').removeClass('text-success text-danger').text('');
						
						$('input[name="acilit_item_id"]').val(0);
						$('input[name="model"]').prop('readonly', false);
						$('#btn-product-validate').removeClass('hide');
						$('#btn-product-unlink').addClass('hide');
						
						$('#acilit-model-message').addClass('text-success').text('Not Linked');
					}
				</script>
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[<label class="col-sm-2 control-label" for="input-sku">]]>
			</search>
			<add position="before">
				<![CDATA[
				{% if synced_with_acilit %}
					<div class="form-group">
						<label class="col-sm-2 control-label" for="input-stocks">Acilit Stocks</label>
						<div class="col-sm-10">
							<table class="table table-bordered table-hover">
								<thead>
									<tr>
										<td>Outlet</td>
										<td>Quantity</td>
										<td>Sales Price</td>
									</tr>
								</thead>
								<tbody>
									{% for product_quantity in acilit_stock %}
										<tr>
											<td>{{ product_quantity.outlet_name }}</td>
											<td>{{ product_quantity.acilit_quantity }}</td>
											<td>RM{{ product_quantity.acilit_sales_price }}</td>
										</tr>
									{% endfor %}
								</tbody>
							</table>
						</div>
					</div>
				{% endif %}
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/controller/product/product.php">
		<operation>
			<search>
				<![CDATA[$product_option_value_data[] = array(              ]]>
			</search>
			<add position="before">
				<![CDATA[
				if ($this->config->get('module_acilit_prioritize_product_special') && $data['special']) {
					$price = false;
				} else {
					$data['special'] = false;
				}
				]]>
			</add>
		</operation>
	</file>
	<file path="admin/view/template/catalog/product_list.twig">
		<operation>
			<search>
				<![CDATA[<td class="text-left">{% if sort == 'p.status' %} <a href="{{ sort_status }}" class="{{ order|lower }}">{{ column_status }}</a> {% else %} <a href="{{ sort_status }}">{{ column_status }}</a> {% endif %}</td>             ]]>
			</search>
			<add position="before">
				<![CDATA[<td class="text-left">{{ column_sync_status }}</td>                 ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[<td class="text-left">{{ product.status }}</td>             ]]>
			</search>
			<add position="before">
				<![CDATA[<td class="text-left">{% if product.acilit_item_id %}<span class="label label-success">{{ text_link }}</span>{% else %}<span class="label label-danger">{{ text_unlink }}</span>{% endif %}</td>                 ]]>
			</add>
		</operation>
	</file>
	<!-- LANGUAGE -->
	<file path="catalog/language/en-gb/mail/register.php">
	</file>
	<file path="catalog/language/en-gb/account/order.php">
		<operation>
			<search>
				<![CDATA[$_['text_error']            = 'The order you requested could not be found!';]]>
			</search>
			<add position="after">
				<![CDATA[$_['text_outlet'] = 'Outlet:';                 ]]>
			</add>
		</operation>
	</file>
	<file path="admin/language/en-gb/sale/order.php">
		<operation>
			<search>
				<![CDATA[$_['column_weight']             ]]>
			</search>
			<add position="after">
				<![CDATA[
					$_['column_sync_status']  = 'Sync Status';
					$_['column_source']       = 'Source';
					$_['column_sync_error']   = 'Error';
					
					$_['text_synced']        = 'Synced';
					$_['text_not_synced']    = 'Not Synced';
					$_['text_order_source']  = 'Order Source';
					$_['text_outlet']        = 'Outlet';
					
					$_['entry_order_source'] = 'Order Source';
				]]>
			</add>
		</operation>
	</file>
	<file path="admin/language/en-gb/common/column_left.php">
		<operation>
			<search>
				<![CDATA[$_['text_other_status']             ]]>
			</search>
			<add position="after">
				<![CDATA[
					$_['text_acilit']        = 'Acilit';
					$_['text_product']       = 'Products';
					$_['text_inventory_log'] = 'Inventory Log';
					$_['text_outlet']        = 'Outlets';
					$_['text_customer_tier_history'] = 'Customer Tier History';
				]]>
			</add>
		</operation>
	</file>
	<file path="admin/language/en-gb/catalog/product.php">
		<operation>
			<search>
				<![CDATA[= 'Action';]]>
			</search>
			<add position="after">
				<![CDATA[
					$_['column_sync_status']  = 'Sync Status';
					$_['text_link']           = 'Link';
					$_['text_unlink']         = 'Unlink';
				]]>
			</add>
		</operation>
	</file>
	<file path="admin/language/en-gb/customer/customer.php">
		<operation>
			<search>
				<![CDATA[$_['entry_date_added']             ]]>
			</search>
			<add position="after">
				<![CDATA[$_['entry_synced']  = 'Synced';                 ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$_['column_action']             = 'Action';]]>
			</search>
			<add position="after">
				<![CDATA[
					$_['column_acilit_id']  = 'Acilit Customer ID';
					$_['column_synced']     = 'Synced';
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$_['text_unlock']               = 'Unlock Account';]]>
			</search>
			<add position="after">
				<![CDATA[
					$_['text_synced']       = 'Synced';
					$_['text_not_synced']   = 'Not Synced';
				]]>
			</add>
		</operation>
	</file>
	<file path="admin/view/template/sale/order_list.twig">
		<operation>
			<search>
				<![CDATA[var filter_date_added = $('input[name=\'filter_date_added\']').val();]]>
			</search>
			<add position="after">
				<![CDATA[
				var filter_order_source = $('select[name=\'filter_order_source\']').val();

				if (filter_order_source) {
					url += '&filter_order_source=' + encodeURIComponent(filter_order_source);
				}
				]]>
			</add>
		</operation>
	</file>
	<!-- FILTER SYNC -->
	<file path="admin/view/template/catalog/product_list.twig">
		<operation>
			<search>
				<![CDATA[<label class="control-label" for="input-status">{{ entry_status }}</label>]]>
			</search>
			<add position="before" offset="1">
				<![CDATA[
				<div class="form-group">
					<label class="control-label" for="input-status">{{ entry_sync_status }}</label>
					<select name="filter_sync_status" id="input-status" class="form-control">
						<option value=""></option>
						
							{% if filter_sync_status == '1' %}							
								<option value="1" selected="selected">{{ text_link }}</option>
							{% else %}								
								<option value="1">{{ text_link }}</option>								
							{% endif %}

							{% if filter_sync_status == '0' %}
								<option value="0" selected="selected">{{ text_unlink }}</option>
							{% else %}
								<option value="0">{{ text_unlink }}</option>
							{% endif %}
					</select>
				</div>
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[var filter_status = $('select[name=\'filter_status\']').val();]]>
			</search>
			<add position="before">
				<![CDATA[
					var filter_sync_status = $('select[name=\'filter_sync_status\']').val();
					
					if (filter_sync_status !== '') {
						url += '&filter_sync_status=' + encodeURIComponent(filter_sync_status);
					}
				]]>
			</add>
		</operation>
	</file>
	<file path="admin/language/en-gb/catalog/product.php">
		<operation>
			<search>
				<![CDATA[$_['entry_status']           = 'Status';]]>
			</search>
			<add position="after">
				<![CDATA[$_['entry_sync_status']           = 'Sync Status';]]>
			</add>
		</operation>
	</file>
	<file path="admin/model/catalog/product.php">
		<operation>
			<search>
				<![CDATA[if (isset($data['filter_status']) && $data['filter_status'] !== '') {]]>
			</search>
			<add position="before">
				<![CDATA[
					if (isset($data['filter_sync_status']) && $data['filter_sync_status'] === '1') {
						$sql .= " AND (p.acilit_item_id != '0' AND p.acilit_item_id != '')";
					}else{ 
						if (isset($data['filter_sync_status']) && $data['filter_sync_status'] === '0') {
							$sql .= " AND (p.acilit_item_id = '0' OR p.acilit_item_id = '')";
						}
					}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA['p.status',]]>
			</search>
			<add position="after">
				<![CDATA['p.sync_status',]]>
			</add>
		</operation>
	</file>
	<file path="admin/controller/catalog/product.php">
		<operation>
			<search>
				<![CDATA['filter_status'   => $filter_status,]]>
			</search>
			<add position="after">
				<![CDATA['filter_sync_status'   => $filter_sync_status,]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$filter_status = $this->request->get['filter_status'];]]>
			</search>
			<add position="before" offset="2">
				<![CDATA[
				if (isset($this->request->get['filter_sync_status'])) {
					$filter_sync_status = $this->request->get['filter_sync_status'];
				} else {
					$filter_sync_status = '';
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$url .= '&filter_status=' . $this->request->get['filter_status'];]]>
			</search>
			<add position="before" offset="2">
				<![CDATA[
					if (isset($this->request->get['filter_sync_status'])) {
						$url .= '&filter_sync_status=' . $this->request->get['filter_sync_status'];
					}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$data['filter_status'] = $filter_status;]]>
			</search>
			<add position="before">
				<![CDATA[$data['filter_sync_status'] = $filter_sync_status;]]>
			</add>
		</operation>
	</file>

	<file path="catalog/controller/account/login.php">
		<operation>
			<search>
				<![CDATA[$this->model_account_customer->deleteLoginAttempts($this->request->post['email']);]]>
			</search>
			<add position="before">
				<![CDATA[
					$dispatch_ERP = new Dispatcher($this->registry);
					$this->load->model('account/customer');
					$customer = $this->model_account_customer->getCustomer($this->customer->getId());
					$sync_customer =  $dispatch_ERP->dispatch(new SyncLogin($customer['customer_id']));
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[class ControllerAccountLogin extends Controller {]]>
			</search>
			<add position="before">
				<![CDATA[
					use Jobs\SyncOrder;
					use Jobs\PullPoints;
					use queue\Dispatcher;
					use Jobs\SyncLogin;
				]]>
			</add>
		</operation>
	</file>
	<file path="admin/controller/customer/customer.php">
		<operation>
			<search>
				<![CDATA[$this->model_customer_customer->addCustomer($this->request->post);
]]>	
			</search>
			<add position="replace">
				<![CDATA[$customer_id = $this->model_customer_customer->addCustomer($this->request->post);

				if ($this->config->get('module_acilit_status') && $this->config->get('module_acilit_sync_customer_status')) {
					$dispatcher = new queue\Dispatcher($this->registry);
					$dispatcher->dispatch(new jobs\SyncMember($customer_id));
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$this->model_customer_customer->editCustomer($this->request->get['customer_id'], $this->request->post);]]>
			</search>
			<add position="replace">
				<![CDATA[
				$customer = $this->model_customer_customer->getCustomer($this->request->get['customer_id']);
					$old_customer_group_id = $customer['customer_group_id'];

					$this->model_customer_customer->editCustomer($this->request->get['customer_id'], $this->request->post);

					if ($this->config->get('module_acilit_status')) {
						if ($this->config->get('module_acilit_sync_customer_status')) {
							$dispatcher = new queue\Dispatcher($this->registry);
							$dispatcher->dispatch(new jobs\SyncMember($this->request->get['customer_id']));
						}
					}
				]]>
			</add>
		</operation>
		
	</file>
	<file path="admin/model/customer/customer.php">
		<operation>
			<search>
				<![CDATA[$implode[] = "c.newsletter = '" . (int)$data['filter_newsletter'] . "'";]]>
			</search>
			<add position="before">
				<![CDATA[if (isset($data['filter_synced']) && $data['filter_synced'] != '') {
					if ($data['filter_synced'] == 1) {
						$implode[] = "c.acilit_client_id != '0'";
					} elseif ($data['filter_synced'] == 0) {
						$implode[] = "c.acilit_client_id = '0'";
					}
				}
				]]>
			</add>
		</operation>
	</file>
	<file path="admin/language/en-gb/customer/customer.php">
		<operation>
			<search>
				<![CDATA[$_['entry_date_added']]]>
			</search>
			<add position="after">
				<![CDATA[$_['entry_synced'] = 'Synced';]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$_['column_action']]]>
			</search>
			<add position="after">
				<![CDATA[
					$_['column_acilit_id'] = 'Acilit Customer ID';
					$_['column_synced'] = 'Synced';
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$_['text_unlock']]]>
			</search>
			<add position="after">
				<![CDATA[$_['text_synced'] = 'Synced';
					$_['text_not_synced'] = 'Not Synced';

				]]>
			</add>
		</operation>
	</file>
    <file path="admin/view/template/customer/customer_list.twig">
		<operation>
			<search>
				<![CDATA[var filter_customer_group_id = $('select[name=\'filter_customer_group_id\']').val();]]>
			</search>
			<add position="after">
				<![CDATA[var filter_synced = $('select[name=\'filter_synced\']').val();
					if (filter_synced !== '') {
						url += '&filter_synced=' + encodeURIComponent(filter_synced); 
					}
				]]>
			</add>
		</operation>
	</file>
      <file path="catalog/controller/account/register.php">
		<operation>
			<search>
				<![CDATA[$customer_id = $this->model_account_customer->addCustomer($this->request->post);
]]>
			</search>
			<add position="after">
				<![CDATA[
					if ($this->config->get('module_acilit_status') && $this->config->get('module_acilit_sync_customer_status')) {
						$acilit_member = new acilit\AcilitMember($this->registry);
						$result = $acilit_member->syncMember($customer_id);

						if (!$result) {
							$dispatcher = new queue\Dispatcher($this->registry);
							$dispatcher->dispatch(new jobs\SyncMember($customer_id));
						}
					}
				]]>
			</add>
		</operation>
	</file>
        <file path="catalog/language/en-gb/mail/register.php">
		<operation>
			<search>
				<![CDATA[$_['text_telephone']]]>
			</search>
			<add position="after">
				<![CDATA[$_['text_acilit_login'] = 'Your password is your phone number. Ex: 60123456789. Please change your password upon login to keep your account protected.';
]]>
			</add>
		</operation>
        </file>
        <file path="catalog/view/theme/default/template/mail/register.twig">
		<operation>
			<search>
				<![CDATA[{{ text_service }}
]]>
			</search>
			<add position="before">
				<![CDATA[
					{% if text_acilit_login %}
						{{ text_acilit_login }}
					{% endif %}
				]]>
			</add>
		</operation>
	</file>
	<file path="admin/controller/marketing/coupon.php">
		
		<operation>
			<search>
				<![CDATA[class ControllerMarketingCoupon extends Controller {]]>
			</search>
			<add position="before">
				<![CDATA[
					use Acilit\AcilitLoader;
					use Acilit\AcilitVoucher;
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA['date_start' => date($this->language->get('date_format_short'), strtotime($result['date_start'])),]]>
			</search>
			<add position="before">
				<![CDATA[
					'voucher_id' => $result['voucher_id'],
					'voucher_serialNo' => $result['voucher_serialNo'],
				]]>
			</add>
		</operation>
	</file>
	<file path="admin/model/marketing/coupon.php">
		<operation>
			<search>
				<![CDATA[$sql = "SELECT coupon_id, name, code, discount, date_start, date_end, status FROM " . DB_PREFIX . "coupon";]]>
			</search>
			<add position="replace">
				<![CDATA[ $sql = "SELECT coupon_id, name, code, discount, date_start, date_end, status, acilit_voucher_id, voucher_id, voucher_serialNo FROM " . DB_PREFIX . "coupon"; ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$this->db->query("INSERT INTO " . DB_PREFIX . "coupon SET name = '" . $this->db->escape($data['name']) . "', code = '" . $this->db->escape($data['code']) . "', discount = '" . (float)$data['discount'] . "', type = '" . $this->db->escape($data['type']) . "', total = '" . (float)$data['total'] . "', logged = '" . (int)$data['logged'] . "', shipping = '" . (int)$data['shipping'] . "', date_start = '" . $this->db->escape($data['date_start']) . "', date_end = '" . $this->db->escape($data['date_end']) . "', uses_total = '" . (int)$data['uses_total'] . "', uses_customer = '" . (int)$data['uses_customer'] . "', status = '" . (int)$data['status'] . "', date_added = NOW()");]]>
			</search>
			<add position="replace">
				<![CDATA[$this->db->query("INSERT INTO " . DB_PREFIX . "coupon SET name = '" . $this->db->escape($data['name']) . "', code = '" . $this->db->escape($data['code']) . "', discount = '" . (float)$data['discount'] . "', type = '" . $this->db->escape($data['type']) . "', total = '" . (float)$data['total'] . "', logged = '" . (int)$data['logged'] . "', shipping = '" . (int)$data['shipping'] . "', date_start = '" . $this->db->escape($data['date_start']) . "', date_end = '" . $this->db->escape($data['date_end']) . "', uses_total = '" . (int)$data['uses_total'] . "', uses_customer = '" . (int)$data['uses_customer'] . "', status = '" . (int)$data['status'] . "', date_added = NOW(), acilit_voucher_id = '" . $this->db->escape($data['voucher_id']) . "', customer_id = '" . (int)$data['customer_id'] . "', voucher_id = '" . $this->db->escape($data['voucher_id']) . "', voucher_serialNo = '" . $this->db->escape($data['voucher_serialNo']) . "', mapping = '" . $this->db->escape($data['mapping']) . "'");]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$sort_data = array(]]>
			</search>
			<add position="after" offset="1">
				<![CDATA[
					'acilit_voucher_id',
					'voucher_serialNo',
					'voucher_id',
				]]>
			</add>
		</operation>
	</file>
	<file path="admin/controller/common/column_left.php">
		<operation>
			<search>
				<![CDATA[if ($this->user->hasPermission('access', 'marketing/coupon')) {]]>
			</search>
			<add position="before">
				<![CDATA[
					if ($this->user->hasPermission('access', 'marketing/acilit_voucher')) {
						$marketing[] = array(
							'name'     => 'Acilit Voucher',
							'href'     => $this->url->link('marketing/acilit_voucher', 'user_token=' . $this->session->data['user_token'], true),
							'children' => array()
						);
					}
				]]>
			</add>
		</operation>
	</file>
	<file path="admin/view/template/marketing/coupon_list.twig">
		<operation>
			<search>
				<![CDATA[{% if sort == 'date_start' %}]]>
			</search>
			<add position="before">
				<![CDATA[
				<td class="text-left">{% if sort == 'voucher_id' %}
						<a href="{{ sort_voucher_id }}" class="{{ order|lower }}">{{ column_voucher_id }}</a>
					{% else %}
						<a href="{{ sort_voucher_id }}">{{ column_voucher_id }}</a>
					{% endif %}
				</td>
				<td class="text-left">{% if sort == 'voucher_serialNo' %}
						<a href="{{ sort_voucher_serialNo }}" class="{{ order|lower }}">{{ column_voucher_serialNo }}</a>
					{% else %}
						<a href="{{ sort_voucher_serialNo }}">{{ column_voucher_serialNo }}</a>
					{% endif %}
				</td>
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[<td class="text-right">{{ coupon.discount }}</td>]]>
			</search>
			<add position="after">
				<![CDATA[
					<td class="text-right">{{ coupon.voucher_id }}</td>
					<td class="text-right">{{ coupon.voucher_serialNo }}</td>
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$this->response->setOutput($this->load->view('marketing/coupon_history', $data));]]>
			</search>
			<add position="after" offset="2">
				<![CDATA[ ]]>
			</add>
		</operation>
	</file>
	<file path="admin/language/en-gb/marketing/coupon.php">
		<operation>
			<search>
				<![CDATA[$_['column_action']       = 'Action';]]>
			</search>
			<add position="before">
				<![CDATA[
					$_['column_voucher_id']       = 'Voucher ID';
					$_['column_voucher_serialNo']       = 'Serial No';
					$_['text_link']       = 'Link';
					$_['text_unlink']       = 'Unlink';
					$_['entry_serialNo']       = 'Voucher Serial No';
					$_['entry_voucher_id']       = 'Voucher ID';
				]]>
			</add>
		</operation>
	</file>
	<file path="admin/view/template/marketing/coupon_form.twig">
		
		<operation>
			<search>
				<![CDATA[<label class="col-sm-2 control-label" for="input-code">]]>
			</search>
			<add position="before" offset="2">
				<![CDATA[
				</div>
					<div class="form-group">
						<label class="col-sm-2 control-label" for="input-total"><span data-toggle="tooltip" title="Voucher ID in Acilit">Voucher Id</span></label>
						<div class="col-sm-10">
						<input type="text" name="voucher_id" value="{{ voucher_id }}" placeholder="{{ entry_voucher_id }}" id="input-voucherId" class="form-control" readonly />
					</div>
				</div>

				<div class="form-group">
					<label class="col-sm-2 control-label" for="input-total"><span data-toggle="tooltip" title="Serial No From Acilit">Serial No</span></label>
					<div class="col-sm-10">
						<input type="text" name="voucher_serialNo" value="{{ voucher_serialNo }}" placeholder="{{ entry_serialNo }}" id="input-voucher-serialNo" class="form-control" readonly />
					</div>
				</div>
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$('input[name=\'product\']').autocomplete({]]>
			</search>
			<add position="before">
				<![CDATA[
				function validateVoucher() {
					$('#acilit-voucher-message').removeClass('text-success text-danger').text('');
					
					var voucher = $('input[name="voucher"]').val();
					var button = $('#btn-voucher-validate');
					
					$.ajax({
						url: 'index.php?route=extension/module/acilit/validateVoucher&user_token={{ user_token }}',
						dataType: 'json',
						method: 'POST',
						data: { model: voucher },

						beforeSend: function() {
							$(button).button('loading');
						},
						complete: function() {
							$(button).button('reset');
						},
						success: function(json) {
						if (json.error) {
								$('#acilit-voucher-message').addClass('text-danger').text(json.error);
							} else {
								$('#acilit-voucher-message').addClass('text-success').text('Linked');
							
								if (json.voucher_id) {
									$('input[name="voucher_id"]').val(json.voucher_id);
									$('input[name="price"]').val(json.price);
									$('input[name="sku"]').val(json.quantity);
									$('input[name="voucher_id"]').val(json.voucher_id);
									
									$('input[name="voucher_id"]').prop('readonly', true);
									$('#btn-voucher-unlink').removeClass('hide');
									$('#btn-voucher-validate').addClass('hide');
								}
							}
						}
					});
				}
				
				function unlinkVoucher() {
					$('#acilit-voucher-message').removeClass('text-success text-danger').text('');
					
					$('input[name="voucher_id"]').val(0);
					$('input[name="voucher_id"]').prop('readonly', false);
					$('#btn-voucher-validate').removeClass('hide');
					$('#btn-voucher-unlink').addClass('hide');
					
					$('#acilit-voucher-message').addClass('text-success').text('Not Linked');
				}
				]]>
			</add>
		</operation>
	</file>

	<file path="catalog/controller/account/account.php">
		<operation>
			<search>
				<![CDATA[$data['recurring'] = $this->url->link('account/recurring', '', true);]]>
			</search>
			<add position="before">
				<![CDATA[
					$data['point'] = $this->url->link('account/point', '', true);
					$data['voucher'] = $this->url->link('account/coupon', '', true);
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/language/en-gb/account/account.php">
		<operation>
			<search>
				<![CDATA[$_['text_tracking']       = 'Custom Affiliate Tracking Code';]]>
			</search>
			<add position="before">
				<![CDATA[
					$_['text_voucher']       = 'Vouchers';
					$_['text_point']       = 'Points';
					$_['text_redeem_voucher']       = 'Redeem voucher';
					$_['text_membership']       = 'MEMBERSHIP';
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/model/journal3/filter.php">
		<operation>
			<search>
				<![CDATA[public function getProductIds($filter_data = null) {]]>
			</search>
			<add position="before">
				<![CDATA[
				public function getVoucherProductIds($filter_data = null)
				{
					if ($filter_data === null) {
						$filter_data = static::$filter_data;
					}
					
					if (Arr::get($filter_data, 'sort') === 'ps.price') {
						$filter_data['sort'] = 'p.price';
					} else if (!in_array(Arr::get($filter_data, 'sort'), self::$SORT)) {
						$filter_data['sort'] = self::$SORT[0];
					}
					
					if (!in_array(Arr::get($filter_data, 'order'), self::$ORDER)) {
						$filter_data['order'] = self::$ORDER[0];
					}
					
					
					$sql = "
					SELECT
					p.product_id, p.voucher_id,
					(
						SELECT AVG(rating) total
						FROM `" . DB_PREFIX . "review` r1
						WHERE
						r1.product_id = p.product_id
						AND r1.status = '1'
						GROUP BY r1.product_id
					) rating,(
						SELECT price
						FROM `" . DB_PREFIX . "product_discount` pd2
						WHERE
						pd2.product_id = p.product_id
						AND pd2.customer_group_id = '" . (int)$this->config_customer_group_id . "'
						AND pd2.quantity = '1'
						AND ((pd2.date_start = '0000-00-00' OR pd2.date_start < NOW())
						AND (pd2.date_end = '0000-00-00' OR pd2.date_end > NOW()))
						ORDER BY pd2.priority ASC, pd2.price ASC LIMIT 1
					) discount,(
						SELECT price
						FROM `" . DB_PREFIX . "product_special` ps
						WHERE
						ps.product_id = p.product_id
						AND ps.customer_group_id = '" . (int)$this->config_customer_group_id . "'
						AND ((ps.date_start = '0000-00-00' OR ps.date_start < NOW())
						AND (ps.date_end = '0000-00-00' OR ps.date_end > NOW()))
						ORDER BY ps.priority ASC, ps.price ASC LIMIT 1
					) special,p.viewed";

					if (Arr::get($filter_data, 'sort') === 'sales') {
						$sql .= "
							, SUM(op.quantity) AS sales
							FROM `" . DB_PREFIX . "order_product` op
							LEFT JOIN `" . DB_PREFIX . "order` o ON (o.order_id = op.order_id)
							LEFT JOIN `" . DB_PREFIX . "product` p ON (p.product_id = op.product_id)
						";
					}else {

						$sql .= " FROM `" . DB_PREFIX . "product` p";
					}
					
					$sql .= $this->addFilters($filter_data);
					
					if (Arr::get($filter_data, 'bestseller')) {
						$sql .= " AND o.order_status_id > '0'";
					}
					
					$sql .= " AND p.voucher_id IS NOT NULL AND p.is_voucher = '1'";
					$sql .= " GROUP BY p.product_id";
					
					if ($filter_data['sort'] === 'random') {
						$sql .= " ORDER BY RAND()";
					} else {
						if ($filter_data['sort'] === 'pd.name' || $filter_data['sort'] === 'p.model') {
							$sql .= " ORDER BY LCASE(" . $filter_data['sort'] . ")";
						} elseif ($filter_data['sort'] === 'p.price') {
							$sql .= " ORDER BY (CASE WHEN special IS NOT NULL THEN special WHEN discount IS NOT NULL THEN discount ELSE p.price END)";
						} else {
							$sql .= " ORDER BY " . $filter_data['sort'];
						}
					
						if ($filter_data['order'] === 'DESC') {
							$sql .= " DESC, LCASE(pd.name) DESC";
						} else {
							$sql .= " ASC, LCASE(pd.name) ASC";
						}
					}
					
					$start = (int)Arr::get($filter_data, 'start', 0);
					$limit = (int)Arr::get($filter_data, 'limit', 0);
					
					if ($limit) {
					// $sql .= " LIMIT {$this->dbEscapeNat($start)}, {$this->dbEscapeNat($limit)}";
					}
					return $this->dbQuery($sql, 'PRODUCTS')->rows;
				}
				
				
				public function getVoucherProducts($filter_data = null)
				{
					$products = $this->getVoucherProductIds($filter_data);
					
					$product_ids = array();

					foreach ($products as $product) {
					
						if ($product['voucher_id'] != '' && $product['voucher_id'] != NULL) {
							$product_ids[$product['product_id']] = (int)$product['product_id'];
						}
					}
					return $this->model_journal3_product->getVoucherInProduct($product_ids);
				}
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/model/journal3/product.php">
		<operation>
			<search>
				<![CDATA[public function getProduct(]]>
			</search>
			<add position="before">
				<![CDATA[
				public function getVoucherInProduct($product_id)
				{
					$product_ids = $this->getProductIds($product_id);
					if (!$product_ids) {
						return array();
					}
				
					$query = $this->db->query("SELECT DISTINCT *, pd.name AS name,p.pointRedeem AS pointRedeem, p.image, m.name AS manufacturer, (SELECT price FROM " . DB_PREFIX . "product_discount pd2 WHERE pd2.product_id = p.product_id AND pd2.customer_group_id = '" . (int)$this->config->get('config_customer_group_id') . "' AND pd2.quantity = '1' AND ((pd2.date_start = '0000-00-00' OR pd2.date_start < NOW()) AND (pd2.date_end = '0000-00-00' OR pd2.date_end > NOW())) ORDER BY pd2.priority ASC, pd2.price ASC LIMIT 1) AS discount, (SELECT price FROM " . DB_PREFIX . "product_special ps WHERE ps.product_id = p.product_id AND ps.customer_group_id = '" . (int)$this->config->get('config_customer_group_id') . "' AND ((ps.date_start = '0000-00-00' OR ps.date_start < NOW()) AND (ps.date_end = '0000-00-00' OR ps.date_end > NOW())) ORDER BY ps.priority ASC, ps.price ASC LIMIT 1) AS special, (SELECT points FROM " . DB_PREFIX . "product_reward pr WHERE pr.product_id = p.product_id AND pr.customer_group_id = '" . (int)$this->config->get('config_customer_group_id') . "' LIMIT 1) AS reward, (SELECT ss.name FROM " . DB_PREFIX . "stock_status ss WHERE ss.stock_status_id = p.stock_status_id AND ss.language_id = '" . (int)$this->config->get('config_language_id') . "') AS stock_status, (SELECT wcd.unit FROM " . DB_PREFIX . "weight_class_description wcd WHERE p.weight_class_id = wcd.weight_class_id AND wcd.language_id = '" . (int)$this->config->get('config_language_id') . "') AS weight_class, (SELECT lcd.unit FROM " . DB_PREFIX . "length_class_description lcd WHERE p.length_class_id = lcd.length_class_id AND lcd.language_id = '" . (int)$this->config->get('config_language_id') . "') AS length_class, (SELECT AVG(rating) AS total FROM " . DB_PREFIX . "review r1 WHERE r1.product_id = p.product_id AND r1.status = '1' GROUP BY r1.product_id) AS rating, (SELECT COUNT(*) AS total FROM " . DB_PREFIX . "review r2 WHERE r2.product_id = p.product_id AND r2.status = '1' GROUP BY r2.product_id) AS reviews, p.sort_order, p.voucher_id FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) LEFT JOIN " . DB_PREFIX . "product_to_store p2s ON (p.product_id = p2s.product_id) LEFT JOIN " . DB_PREFIX . "manufacturer m ON (p.manufacturer_id = m.manufacturer_id) WHERE p.product_id IN (" . implode(',', $product_ids) . ") AND pd.language_id = '" . (int)$this->config->get('config_language_id') . "' AND p.status = '1' AND p.date_available <= NOW() AND p2s.store_id = '" . (int)$this->config->get('config_store_id') . "'");
					
					$result = array_flip($product_ids);
					
					foreach ($query->rows as $row) {
					
						if ($row['voucher_id'] != null) {
							$result[$row['product_id']] = array(
							'product_id'       => $row['product_id'],
							'voucher_id'       => $row['voucher_id'],
							'pointRedeem'       => $row['pointRedeem'] ,
							'name'             => $row['name'],
							'description'      => $row['description'],
							'meta_title'       => $row['meta_title'],
							'meta_description' => $row['meta_description'],
							'meta_keyword'     => $row['meta_keyword'],
							'tag'              => $row['tag'],
							'model'            => $row['model'],
							'sku'              => $row['sku'],
							'upc'              => $row['upc'],
							'ean'              => $row['ean'],
							'jan'              => $row['jan'],
							'isbn'             => $row['isbn'],
							'mpn'              => $row['mpn'],
							'location'         => $row['location'],
							'quantity'         => $row['quantity'],
							'stock_status'     => $row['stock_status'],
							'image'            => $row['image'],
							'manufacturer_id'  => $row['manufacturer_id'],
							'manufacturer'     => $row['manufacturer'],
							'price'            => ($row['discount'] ? $row['discount'] : $row['price']),
							'special'          => $row['special'],
							'reward'           => $row['reward'],
							'points'           => $row['points'],
							'tax_class_id'     => $row['tax_class_id'],
							'date_available'   => $row['date_available'],
							'weight'           => $row['weight'],
							'weight_class_id'  => $row['weight_class_id'],
							'length'           => $row['length'],
							'width'            => $row['width'],
							'height'           => $row['height'],
							'length_class_id'  => $row['length_class_id'],
							'subtract'         => $row['subtract'],
							'rating'           => round($row['rating']),
							'reviews'          => $row['reviews'] ? $row['reviews'] : 0,
							'minimum'          => $row['minimum'],
							'sort_order'       => $row['sort_order'],
							'status'           => $row['status'],
							'date_added'       => $row['date_added'],
							'date_modified'    => $row['date_modified'],
							'viewed'           => $row['viewed'],
							);
						}
					}
					
					if (count($result) !== $query->num_rows) {
						$result = array_filter($result, function ($res) {
							return isset($res['product_id']) && $res['product_id'];
						});
					}
					return $result;
				}
				]]>
			</add>
		</operation>
	</file>
	<!-- common left side bar update -->
	<file path="admin/controller/common/column_left.php">
		<operation>
			<search>
				<![CDATA[$this->user->hasPermission('access', 'catalog/recurring']]>
			</search>
			<add position="before">
				<![CDATA[
					if ($this->user->hasPermission('access', 'catalog/product')) {
						$catalog[] = array(
							'name'	   => $this->language->get('text_bar_voucher'),
							'href'     => $this->url->link('catalog/product', 'user_token=' . $this->session->data['user_token'] . '&is_voucher=1', true),
							'children' => array()
						);
					}
				]]>
			</add>
		</operation>
	</file>
	<file path="admin/language/en-gb/common/column_left.php">
		<operation>
			<search>
				<![CDATA[$_['text_api']                  = 'API';]]>
			</search>
			<add position="before">
				<![CDATA[$_['text_bar_voucher']                  = 'Vouchers';]]>
			</add>
		</operation>
	</file>
	<!-- VOUCHER PRODUCT PAGE -->
	<file path="admin/controller/catalog/product.php">
		<operation>
			<search>
				<![CDATA[$this->document->setTitle($this->language->get('heading_title'));]]>
			</search>
			<add position="replace">
				<![CDATA[
				if(isset($this->request->get['is_voucher']) && $this->request->get['is_voucher'] == 1){
					$this->document->setTitle($this->language->get('voucher_heading_title'));
				}else{
					$this->document->setTitle($this->language->get('heading_title'));
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA['text' => $this->language->get('heading_title'),]]>
			</search>
			<add position="replace">
				<![CDATA[ 'text' =>isset( $this->request->get['is_voucher']) ? $this->language->get('voucher_heading_title') : $this->language->get('heading_title'),]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$results = $this->model_catalog_product->getProducts($filter_data);]]>
			</search>
			<add position="replace">
				<![CDATA[
				if(isset($this->request->get['is_voucher'])){
					$results = $this->model_catalog_product->getVouchersInProduct($filter_data);
				}else{
					$results = $this->model_catalog_product->getProducts($filter_data);
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$url = '';]]>
			</search>
			<add position="replace">
				<![CDATA[
				if(isset($this->request->get['is_voucher']) && $this->request->get['is_voucher'] == 1){
					$url = '&is_voucher=1';
				}else{
					$url = '';
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$data['add'] = $this->url->link('catalog/product/add', 'user_token=' . $this->session->data['user_token'] . $url, true);]]>
			</search>
			<add position="after">
				<![CDATA[ $data['is_voucher'] = isset($this->request->get['is_voucher']) ? $this->request->get['is_voucher'] : 0; ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$product_total = $this->model_catalog_product->getTotalProducts($filter_data);]]>
			</search>
			<add position="replace">
				<![CDATA[
				if(isset($this->request->get['is_voucher']) && $this->request->get['is_voucher'] == 1){
					$product_total = $this->model_catalog_product->getTotalVoucherProducts($filter_data);
				}else{
					$product_total = $this->model_catalog_product->getTotalProducts($filter_data);
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$this->response->setOutput($this->load->view('catalog/product_form', $data));]]>
			</search>
			<add position="replace">
				<![CDATA[
				if(isset($this->request->get['is_voucher']) && $this->request->get['is_voucher'] == 1){
					$this->response->setOutput($this->load->view('catalog/voucher_form', $data));
				}else{
					$this->response->setOutput($this->load->view('catalog/product_form', $data));
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$this->model_catalog_product->editProduct($this->request->get['product_id'], $this->request->post);]]>
			</search>
			<add position="replace">
				<![CDATA[
				if(isset($this->request->get['is_voucher']) && $this->request->get['is_voucher'] == 1){
					$this->model_catalog_product->editProduct($this->request->get['product_id'], $this->request->post);
				}else{
					$this->model_catalog_product->editProduct($this->request->get['product_id'], $this->request->post);
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$this->session->data['success'] = $this->language->get('text_success');]]>
			</search>
			<add position="replace">
				<![CDATA[ $this->session->data['success'] = isset($this->request->get['is_voucher']) ?  $this->language->get('text_voucher_success') : $this->language->get('text_success'); ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA['href' => $this->url->link('catalog/product', 'user_token=' . $this->session->data['user_token'] . $url, true)]]>
			</search>
			<add position="replace">
				<![CDATA[ 'href' => $this->url->link(isset($this->request->get['is_voucher']) ? 'catalog/productVoucher' : 'catalog/product', 'user_token=' . $this->session->data['user_token'] . $url, true) ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[foreach ($this->request->post['product_description'] as $language_id => $value) {]]>
			</search>
			<add position="before">
				<![CDATA[ if(!isset($this->request->get['is_voucher'])){ ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$this->error['meta_title'][$language_id] = $this->language->get('error_meta_title')]]>
			</search>
			<add position="after">
				<![CDATA[ } ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[if ($this->request->post['product_seo_url']) {]]>
			</search>
			<add position="replace">
				<![CDATA[if (isset($this->request->post['product_seo_url'])) {]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$this->load->model('catalog/download');]]>
			</search>
			<add position="before" offset="2">
				<![CDATA[
				// Coupons

				if(isset($this->request->get['is_voucher']) && $this->request->get['is_voucher'] == 1){
					$this->load->model('marketing/coupon');

					if (isset($this->request->get['product_id'])) {
						$coupon = $this->model_marketing_coupon->getCouponByMapping($this->request->get['product_id']);
						if($coupon){
							$data['voucher_id'] = $coupon['voucher_id'];
			
							$data['voucher_name'] = $coupon['name'] . ' ' . $coupon['voucher_id']  . ' ' . '(' . $coupon['discount']  . ')';
			
							$data['discount'] = $coupon['discount'];
						}
					}
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[public function autocomplete() {]]>
			</search>
			<add position="before">
				<![CDATA[
				public function autocompleteVoucherMapping() {
					$json = array();
					
					if (isset($this->request->get['filter_name'])) {
						$this->load->model('marketing/coupon');
						$this->load->model('catalog/product');
						
						$filter_data = array(
							'filter_name' => $this->request->get['filter_name'],
							'sort'        => 'name',
							'order'       => 'ASC',
							'start'       => 0,
							'limit'       => 5
						);
						
						$results = $this->model_marketing_coupon->getCouponSearch($filter_data);

						foreach ($results as $result) {
			
							$quantity = $this->model_marketing_coupon->getVoucherQuantity($result['voucher_id']);

							$json[] = array(
								'voucher_id' => $result['voucher_id'],
								'discount' => $result['discount'],
								'discount_type' => $result['type'],
								'quantity' => $quantity,
								'name'        => strip_tags(html_entity_decode($result['name'], ENT_QUOTES, 'UTF-8')) . ' ' . $result['voucher_id']  . ' ' . '(' . $result['discount']  . ')',

							);
						}
					}
					
					$sort_order = array();
					
					foreach ($json as $key => $value) {
						$sort_order[$key] = $value['name'];
					}
					
					array_multisort($sort_order, SORT_ASC, $json);
					
					$this->response->addHeader('Content-Type: application/json');
					$this->response->setOutput(json_encode($json));
				}
				]]>
			</add>
		</operation>
	</file>
	<file path="admin/model/catalog/product.php">
		<operation>
			<search>
				<![CDATA[public function getProducts($data = array()) {]]>
			</search>
			<add position="before">
				<![CDATA[
				public function getVouchersInProduct($data = array()) {
					$sql = "SELECT * FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) WHERE p.is_voucher = 1 AND pd.language_id = '" . (int)$this->config->get('config_language_id') . "'";
					
					if (!empty($data['filter_name'])) {
						$sql .= " AND pd.name LIKE '" . $this->db->escape($data['filter_name']) . "%'";
					}
					
					if (!empty($data['filter_model'])) {
						$sql .= " AND p.model LIKE '" . $this->db->escape($data['filter_model']) . "%'";
					}
					
					if (!empty($data['filter_price'])) {
						$sql .= " AND p.price LIKE '" . $this->db->escape($data['filter_price']) . "%'";
					}
					
					if (isset($data['filter_quantity']) && $data['filter_quantity'] !== '') {
						$sql .= " AND p.quantity = '" . (int)$data['filter_quantity'] . "'";
					}
					
					if (isset($data['filter_status']) && $data['filter_status'] !== '') {
						$sql .= " AND p.status = '" . (int)$data['filter_status'] . "'";
					}
					
					$sql .= " GROUP BY p.product_id";
					
					$sort_data = array(
						'pd.name',
						'p.model',
						'p.price',
						'p.quantity',
						'p.status',
						'p.sort_order',
						'p.voucher_id',
						'p.pointRedeem',
						'p.category',
					);
					
					if (isset($data['sort']) && in_array($data['sort'], $sort_data)) {
						$sql .= " ORDER BY " . $data['sort'];
					} else {
						$sql .= " ORDER BY pd.name";
					}
					
					if (isset($data['order']) && ($data['order'] == 'DESC')) {
						$sql .= " DESC";
					} else {
						$sql .= " ASC";
					}
					
					if (isset($data['start']) || isset($data['limit'])) {
						if ($data['start'] < 0) {
							$data['start'] = 0;
						}
						
						if ($data['limit'] < 1) {
							$data['limit'] = 20;
						}
						$sql .= " LIMIT " . (int)$data['start'] . "," . (int)$data['limit'];
					}
					
					$query = $this->db->query($sql);
					
					return $query->rows;
				}
					
					
				public function getTotalVoucherProducts($data = array()) {
					$sql = "SELECT COUNT(DISTINCT p.product_id) AS total FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id)";
					
					$sql .= " WHERE p.is_voucher = 1 AND pd.language_id = '" . (int)$this->config->get('config_language_id') . "'";
					
					if (!empty($data['filter_name'])) {
						$sql .= " AND pd.name LIKE '" . $this->db->escape($data['filter_name']) . "%'";
					}
					
					if (!empty($data['filter_model'])) {
						$sql .= " AND p.model LIKE '" . $this->db->escape($data['filter_model']) . "%'";
					}
					
					if (isset($data['filter_voucher_id']) && !is_null($data['filter_voucher_id'])) {
						$sql .= " AND p.voucher_id = '" . $this->db->escape($data['filtefilter_voucher_idr_price']) . "%'";
					}

					if (isset($data['filter_price']) && !is_null($data['filter_price'])) {
						$sql .= " AND p.price LIKE '" . $this->db->escape($data['filter_price']) . "%'";
					}
					
					if (isset($data['filter_quantity']) && $data['filter_quantity'] !== '') {
						$sql .= " AND p.quantity = '" . (int)$data['filter_quantity'] . "'";
					}
					
					if (isset($data['filter_status']) && $data['filter_status'] !== '') {
						$sql .= " AND p.status = '" . (int)$data['filter_status'] . "'";
					}
					
					$query = $this->db->query($sql);
					
					return $query->row['total'];
				}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[		$sql = "SELECT * FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) WHERE pd.language_id = '" . (int)$this->config->get('config_language_id') . "'"; ]]>
			</search>
			<add position="replace">
				<![CDATA[ $sql = "SELECT * FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) WHERE p.is_voucher != 1 AND pd.language_id = '" . (int)$this->config->get('config_language_id') . "'"; ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[		$this->db->query("UPDATE " . DB_PREFIX . "product SET model = '" . $this->db->escape($data['model']) . "', sku = '" . $this->db->escape($data['sku']) . "', upc = '" . $this->db->escape($data['upc']) . "', ean = '" . $this->db->escape($data['ean']) . "', jan = '" . $this->db->escape($data['jan']) . "', isbn = '" . $this->db->escape($data['isbn']) . "', mpn = '" . $this->db->escape($data['mpn']) . "', location = '" . $this->db->escape($data['location']) . "', quantity = '" . (int)$data['quantity'] . "', minimum = '" . (int)$data['minimum'] . "', subtract = '" . (int)$data['subtract'] . "', stock_status_id = '" . (int)$data['stock_status_id'] . "', date_available = '" . $this->db->escape($data['date_available']) . "', manufacturer_id = '" . (int)$data['manufacturer_id'] . "', shipping = '" . (int)$data['shipping'] . "', price = '" . (float)$data['price'] . "', points = '" . (int)$data['points'] . "', weight = '" . (float)$data['weight'] . "', weight_class_id = '" . (int)$data['weight_class_id'] . "', length = '" . (float)$data['length'] . "', width = '" . (float)$data['width'] . "', height = '" . (float)$data['height'] . "', length_class_id = '" . (int)$data['length_class_id'] . "', status = '" . (int)$data['status'] . "', tax_class_id = '" . (int)$data['tax_class_id'] . "', sort_order = '" . (int)$data['sort_order'] . "', date_modified = NOW(), acilit_item_id = '".$data['acilit_item_id']."' WHERE product_id = '" . (int)$product_id . "'"); ]]>
			</search>
			<add position="replace">
				<![CDATA[
					if(isset($this->request->get['is_voucher']) && $this->request->get['is_voucher'] == 1){
						if(isset($data['product_voucher_mapping'])){
							$this->db->query("UPDATE " . DB_PREFIX . "coupon SET mapping = '". $this->db->escape($product_id)."' WHERE voucher_id = '". $this->db->escape($data['product_voucher_mapping']). "'");
							$this->db->query("UPDATE "  . DB_PREFIX . "product SET voucher_id = '". $this->db->escape($data['product_voucher_mapping'])."' WHERE product_id = '". $product_id. "'");
						}
						$this->db->query("UPDATE " . DB_PREFIX . "product SET model = '" . $this->db->escape($data['model']) . "', quantity = '" . (int)$data['quantity'] . "', price = '" . (float)$data['price'] . "', points = '" . (int)$data['points'] . "', status = '" . (int)$data['status'] . "',date_modified = NOW() WHERE is_voucher = 1 AND product_id = '" . (int)$product_id . "'");
					}else{
						$this->db->query("UPDATE " . DB_PREFIX . "product SET model = '" . $this->db->escape($data['model']) . "', sku = '" . $this->db->escape($data['sku']) . "', upc = '" . $this->db->escape($data['upc']) . "', ean = '" . $this->db->escape($data['ean']) . "', jan = '" . $this->db->escape($data['jan']) . "', isbn = '" . $this->db->escape($data['isbn']) . "', mpn = '" . $this->db->escape($data['mpn']) . "', location = '" . $this->db->escape($data['location']) . "', quantity = '" . (int)$data['quantity'] . "', minimum = '" . (int)$data['minimum'] . "', subtract = '" . (int)$data['subtract'] . "', stock_status_id = '" . (int)$data['stock_status_id'] . "', date_available = '" . $this->db->escape($data['date_available']) . "', manufacturer_id = '" . (int)$data['manufacturer_id'] . "', shipping = '" . (int)$data['shipping'] . "', price = '" . (float)$data['price'] . "', points = '" . (int)$data['points'] . "', weight = '" . (float)$data['weight'] . "', weight_class_id = '" . (int)$data['weight_class_id'] . "', length = '" . (float)$data['length'] . "', width = '" . (float)$data['width'] . "', height = '" . (float)$data['height'] . "', length_class_id = '" . (int)$data['length_class_id'] . "', status = '" . (int)$data['status'] . "', tax_class_id = '" . (int)$data['tax_class_id'] . "', sort_order = '" . (int)$data['sort_order'] . "', date_modified = NOW() WHERE product_id = '" . (int)$product_id . "'");
					}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[		$this->db->query("INSERT INTO " . DB_PREFIX . "product SET model = '" . $this->db->escape($data['model']) . "', sku = '" . $this->db->escape($data['sku']) . "', upc = '" . $this->db->escape($data['upc']) . "', ean = '" . $this->db->escape($data['ean']) . "', jan = '" . $this->db->escape($data['jan']) . "', isbn = '" . $this->db->escape($data['isbn']) . "', mpn = '" . $this->db->escape($data['mpn']) . "', location = '" . $this->db->escape($data['location']) . "', quantity = '" . (int)$data['quantity'] . "', minimum = '" . (int)$data['minimum'] . "', subtract = '" . (int)$data['subtract'] . "', stock_status_id = '" . (int)$data['stock_status_id'] . "', date_available = '" . $this->db->escape($data['date_available']) . "', manufacturer_id = '" . (int)$data['manufacturer_id'] . "', shipping = '" . (int)$data['shipping'] . "', price = '" . (float)$data['price'] . "', points = '" . (int)$data['points'] . "', weight = '" . (float)$data['weight'] . "', weight_class_id = '" . (int)$data['weight_class_id'] . "', length = '" . (float)$data['length'] . "', width = '" . (float)$data['width'] . "', height = '" . (float)$data['height'] . "', length_class_id = '" . (int)$data['length_class_id'] . "', status = '" . (int)$data['status'] . "', tax_class_id = '" . (int)$data['tax_class_id'] . "', sort_order = '" . (int)$data['sort_order'] . "', date_added = NOW(), acilit_item_id = '', date_modified = NOW()"); ]]>
			</search>
			<add position="replace">
				<![CDATA[
					if(isset($this->request->get['is_voucher']) && $this->request->get['is_voucher'] == 1){
						$this->db->query("INSERT INTO " . DB_PREFIX . "product SET model = '" . $this->db->escape($data['model']) . "', quantity = '" . (int)$data['quantity'] . "', price = '" . (float)$data['price'] . "', status = '" . (int)$data['status'] . "',date_modified = NOW(), date_added = NOW(), is_voucher = 1");
					}else{
						$this->db->query("INSERT INTO " . DB_PREFIX . "product SET model = '" . $this->db->escape($data['model']) . "', sku = '" . $this->db->escape($data['sku']) . "', upc = '" . $this->db->escape($data['upc']) . "', ean = '" . $this->db->escape($data['ean']) . "', jan = '" . $this->db->escape($data['jan']) . "', isbn = '" . $this->db->escape($data['isbn']) . "', mpn = '" . $this->db->escape($data['mpn']) . "', location = '" . $this->db->escape($data['location']) . "', quantity = '" . (int)$data['quantity'] . "', minimum = '" . (int)$data['minimum'] . "', subtract = '" . (int)$data['subtract'] . "', stock_status_id = '" . (int)$data['stock_status_id'] . "', date_available = '" . $this->db->escape($data['date_available']) . "', manufacturer_id = '" . (int)$data['manufacturer_id'] . "', shipping = '" . (int)$data['shipping'] . "', price = '" . (float)$data['price'] . "', points = '" . (int)$data['points'] . "', weight = '" . (float)$data['weight'] . "', weight_class_id = '" . (int)$data['weight_class_id'] . "', length = '" . (float)$data['length'] . "', width = '" . (float)$data['width'] . "', height = '" . (float)$data['height'] . "', length_class_id = '" . (int)$data['length_class_id'] . "', status = '" . (int)$data['status'] . "', tax_class_id = '" . (int)$data['tax_class_id'] . "', sort_order = '" . (int)$data['sort_order'] . "', date_added = NOW(), date_modified = NOW()");
					}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$product_id = $this->db->getLastId();]]>
			</search>
			<add position="after">
				<![CDATA[
					if(isset($data['product_voucher_mapping']) && isset($this->request->get['is_voucher'])  && $this->request->get['is_voucher'] == 1){
						$this->db->query("UPDATE "  . DB_PREFIX . "coupon SET mapping = '". $this->db->escape($product_id)."' WHERE voucher_id = '". $this->db->escape($data['product_voucher_mapping']). "'");
						$this->db->query("UPDATE "  . DB_PREFIX . "product SET voucher_id = '". $this->db->escape($data['product_voucher_mapping'])."' WHERE product_id = '". $product_id. "'");
					}				
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[			$this->db->query("INSERT INTO " . DB_PREFIX . "product_description SET product_id = '" . (int)$product_id . "', language_id = '" . (int)$language_id . "', name = '" . $this->db->escape($value['name']) . "', description = '" . $this->db->escape($value['description']) . "', tag = '" . $this->db->escape($value['tag']) . "', meta_title = '" . $this->db->escape($value['meta_title']) . "', meta_description = '" . $this->db->escape($value['meta_description']) . "', meta_keyword = '" . $this->db->escape($value['meta_keyword']) . "'"); ]]>
			</search>
			<add position="replace">
				<![CDATA[
					if(isset($this->request->get['is_voucher']) && $this->request->get['is_voucher'] == 1){
						$this->db->query("INSERT INTO " . DB_PREFIX . "product_description SET product_id = '" . (int)$product_id . "', language_id = '" . (int)$language_id . "', name = '" . $this->db->escape($value['name']) . "', description = '" . $this->db->escape($value['description']) . "'");
					}else{
						$this->db->query("INSERT INTO " . DB_PREFIX . "product_description SET product_id = '" . (int)$product_id . "', language_id = '" . (int)$language_id . "', name = '" . $this->db->escape($value['name']) . "', description = '" . $this->db->escape($value['description']) . "', tag = '" . $this->db->escape($value['tag']) . "', meta_title = '" . $this->db->escape($value['meta_title']) . "', meta_description = '" . $this->db->escape($value['meta_description']) . "', meta_keyword = '" . $this->db->escape($value['meta_keyword']) . "'");
					}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[		$sql .= " WHERE pd.language_id = '" . (int)$this->config->get('config_language_id') . "'"; ]]>
			</search>
			<add position="replace">
				<![CDATA[ $sql .= " WHERE p.is_voucher != 1 AND pd.language_id = '" . (int)$this->config->get('config_language_id') . "'"; ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[			$this->db->query("INSERT INTO " . DB_PREFIX . "product_description SET product_id = '" . (int)$product_id . "', language_id = '" . (int)$language_id . "', name = '" . $this->db->escape($value['name']) . "', description = '" . $this->db->escape($value['description']) . "', tag = '" . $this->db->escape($value['tag']) . "', meta_title = '" . $this->db->escape($value['meta_title']) . "', meta_description = '" . $this->db->escape($value['meta_description']) . "', meta_keyword = '" . $this->db->escape($value['meta_keyword']) . "'"); ]]>
			</search>
			<add position="replace">
				<![CDATA[
					if(isset($this->request->get['is_voucher']) && $this->request->get['is_voucher'] == 1){
						$this->db->query("INSERT INTO " . DB_PREFIX . "product_description SET product_id = '" . (int)$product_id . "', language_id = '" . (int)$language_id . "', name = '" . $this->db->escape($value['name']) . "', description = '" . $this->db->escape($value['description']) . "'");
					}else{
						$this->db->query("INSERT INTO " . DB_PREFIX . "product_description SET product_id = '" . (int)$product_id . "', language_id = '" . (int)$language_id . "', name = '" . $this->db->escape($value['name']) . "', description = '" . $this->db->escape($value['description']) . "', tag = '" . $this->db->escape($value['tag']) . "', meta_title = '" . $this->db->escape($value['meta_title']) . "', meta_description = '" . $this->db->escape($value['meta_description']) . "', meta_keyword = '" . $this->db->escape($value['meta_keyword']) . "'");
					}
				]]>
			</add>
		</operation>
		
		<operation>
			<search>
				<![CDATA[if (!empty($data['product_attribute'])) {]]>
			</search>
			<add position="before">
				<![CDATA[
					if(isset($this->request->get['is_voucher']) && $this->request->get['is_voucher'] == 1) {
						$this->db->query("INSERT INTO " . DB_PREFIX . "product_to_store SET product_id = '" . (int)$product_id . "', store_id = '0'");
					}
				]]>
			</add>
		</operation>
		<operation>
			<search index="0">
				<![CDATA[if (isset($data['product_reward'])) {]]>
			</search>
			<add position="before">
				<![CDATA[
					if(isset($this->request->get['is_voucher']) && $this->request->get['is_voucher'] == 1) {
						$this->db->query("INSERT INTO " . DB_PREFIX . "product_to_store SET product_id = '" . (int)$product_id . "', store_id = '0'");
					}
				]]>
			</add>
		</operation>
	</file>
	<file path="admin/view/template/catalog/product_list.twig">
		<operation>
			<search>
				<![CDATA[<h1>{{ heading_title }}</h1>]]>
			</search>
			<add position="replace">
				<![CDATA[
					{% if is_voucher == 1 %}
						<h1>{{ voucher_heading_title }}</h1>
					{% else %}
						<h1>{{ heading_title }}</h1>
					{% endif %}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[{{ text_list }}]]>
			</search>
			<add position="replace">
				<![CDATA[{{ is_voucher == 1 ? voucher_text_list : text_list }} ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[url += '&filter_status=' + encodeURIComponent(filter_status);]]>
			</search>
			<add position="after" offset="2">
				<![CDATA[
				var is_voucher = {{ is_voucher }}
				
				if (is_voucher == 1) {
					url += '&is_voucher=1';
				}
				]]>
			</add>
		</operation>
	
	</file>
	<file path="admin/language/en-gb/catalog/product.php">
		<operation>
			<search>
				<![CDATA[$_['heading_title']          = 'Products';]]>
			</search>
			<add position="after">
				<![CDATA[ $_['voucher_heading_title']       = 'Vouchers'; ]]>
				<![CDATA[ $_['voucher_text_list']       = 'Voucher List'; ]]>
				<![CDATA[ $_['voucher_text_form']       = 'Edit Voucher'; ]]>
				<![CDATA[ $_['text_voucher_success']       = 'Success: You have modified vouchers!'; ]]>
				<![CDATA[ $_['entry_discount_type']       = 'Discount Type'; ]]>
				<![CDATA[ $_['error_discount_type']       = ''; ]]>
				<![CDATA[ $_['entry_discount']       = 'Discount'; ]]>
				<![CDATA[ $_['error_discount']       = ''; ]]>
				<![CDATA[ $_['entry_point_redeem']       = 'Point Redeem'; ]]>
				<![CDATA[ $_['error_point_redeem']       = ''; ]]>
				<![CDATA[ $_['entry_voucher_mapping']       = 'Voucher Mapping'; ]]>
				<![CDATA[ $_['error_voucher_mapping']       = ''; ]]>
			</add>
		</operation>
	</file>
	<file path="admin/model/marketing/coupon.php">
		<operation>
			<search>
				<![CDATA[public function getCouponProducts($coupon_id) {]]>
			</search>
			<add position="before">
				<![CDATA[
				public function getCouponByMapping($product_id){
					$query = $this->db->query("SELECT * FROM ". DB_PREFIX. "coupon WHERE mapping = '". (int)$product_id. "'");
					return $query->row;
				}

				public function getVoucherQuantity($voucher_id){
					$query = $this->db->query("SELECT COUNT(*) AS total FROM ". DB_PREFIX. "coupon WHERE voucher_id = '". $this->db->escape($voucher_id). "' AND (customer_id IS NULL OR customer_id = '0')");
					return $query->row['total'];	
				}
				
				public function getCouponSearch($data = array()) {
					$sql = "SELECT DISTINCT name, voucher_id, discount, type FROM " . DB_PREFIX . "coupon WHERE voucher_id IS NOT NULL";

					if (isset($data['filter_name'])) {
						$sql.= " AND (name LIKE '%". $this->db->escape($data['filter_name']). "%' OR voucher_id LIKE '%". $this->db->escape($data['filter_name']). "%')";
					}

					$sql .= " ORDER BY name ASC LIMIT 0, 5";

					$query = $this->db->query($sql);

					return $query->rows;
				}
			]]>
			</add>
		</operation>
	</file>
	<file path="catalog/model/account/customer.php">
		<operation>
			<search>
				<![CDATA[class ModelAccountCustomer extends Model]]>
			</search>
			<add position="before">
				<![CDATA[
				require_once DIR_SYSTEM . '/library/barcode_generator/vendor/autoload.php';
				require_once DIR_SYSTEM . '/library/barcode_generator/QRCodeGenerator.php';
				
				use Opencart\System\Library\BarcodeGenerator\QRCodeGenerator;
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[public function getAffiliateByTracking($tracking) {]]>
			</search>
			<add position="after" offset="4">
				<![CDATA[
					public function generateBarcode($num){

						$qrGenerator = new \Opencart\System\Library\BarcodeGenerator\QRCodeGenerator();

						$fileName = $num . '_qrcode.png';
						$filePath = DIR_IMAGE . 'qrcode/user_telephone/' . $fileName;

						$currentQr = $this->db->query("SELECT * FROM " . DB_PREFIX . "customer 
						WHERE qr_made_at
						BETWEEN NOW() - INTERVAL 10 MINUTE 
						AND NOW() 
						AND telephone = '" . $this->db->escape($num) . "'");

						$directory = DIR_IMAGE . 'qrcode/user_telephone';
						if (!is_dir($directory)) {
							mkdir($directory, 0755, true);
						}

					

						if (file_exists($filePath) && $currentQr->num_rows != 0) {
							return 'image/qrcode/user_telephone/' . $fileName;
						} else {
							$qrData = '||' . $num . '||' . date('YmdHis') . '||';
							$qrGenerator->setOptions(['outputType' => \chillerlan\QRCode\QRCode::OUTPUT_IMAGE_PNG]);
							$qrCode = $qrGenerator->generate($qrData, 300);
							file_put_contents($filePath, $qrCode);

							$update = $this->db->query("UPDATE " . DB_PREFIX . "customer SET qr_made_at = FROM_UNIXTIME(UNIX_TIMESTAMP()) WHERE telephone = '" . $this->db->escape($num) . "'");
						}

						return 'image/qrcode/user_telephone/' . $fileName;
					}
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/controller/account/point.php">
		<operation>
			<search>
				<![CDATA[$transaction_total = $this->model_account_point->getTotalPoints();]]>
			</search>
			<add position="after">
				<![CDATA[
					$epoint = new Epoint($this->registry);
					
					$epoint->updateCustomerPointBalance($this->customer->getId(), $this->model_account_point->getTotalAmount());
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/controller/account/account.php">
		<operation>
			<search>
				<![CDATA[$data['column_left'] = $this->load->controller('common/column_left');]]>
			</search>
			<add position="before">
				<![CDATA[
					$data['customer_info'] = $this->model_account_customer->getCustomer($this->customer->getId());
					$data['barcode'] = $this->model_account_customer->generateBarcode($this->customer->getTelephone());
					$this->load->model('account/customer_group');
					$groupId = $this->model_account_customer_group->getCustomerGroup($this->customer->getGroupId());
					$data['customer_group_description'] = $groupId['name'];
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$data['wishlist'] = $this->url->link('account/wishlist');]]>
			</search>
			<add position="before">
				<![CDATA[
					$data['coupon'] = $this->url->link('account/coupon', '', true);
					$data['coupon_history'] = $this->url->link('account/coupon/history', '', true);
					$data['redeem'] = $this->url->link('account/redeem', '', true);
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/language/en-gb/account/coupon.php">
		<operation>
			<search>
				<![CDATA[$_['text_empty']]]>
			</search>
			<add position="after">
				<![CDATA[
					$_['entry_redeem_coupon']     = 'Enter coupon code to redeem';
					
					$_['text_my_coupon']          = 'My Coupons';
					$_['text_coupon_history']     = 'Coupon History';
					$_['text_no_coupons']         = 'No coupons available';
					$_['text_okay']         	  = 'Okay';
					$_['text_apply']    		  = 'Apply';
					$_['text_success_redeem'] 	  = 'Successfully redeemed';
					
					$_['column_code']             = 'Code';
					$_['column_name']             = 'Name';
					$_['column_valid']            = 'Validity';
					$_['column_discount']         = 'Discount';
					$_['column_product']          = 'Product';
					$_['column_category']         = 'Product';
					
					$_['column_order']            = 'Order ID';
					$_['column_amount']           = 'Amount';
					$_['column_date_used']        = 'Date Used';
					
					$_['text_pagination']         = 'Showing %d to %d of %d (%d Pages)';
					$_['text_total_coupons']      = 'Total Coupons';
					$_['text_available_coupons']  = 'Available Coupons';
					$_['text_history_coupons']    = 'Coupon History';
					
					$_['error_coupon']    		  = 'Coupon Invalid';
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/language/en-gb/account/account.php">
		<operation>
			<search>
				<![CDATA[$_['text_tracking']]]>
			</search>
			<add position="after">
				<![CDATA[
					$_['text_my_coupon']       = 'My Coupons';
					$_['text_coupon_history']       = 'Coupon History';
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/view/theme/journal3/template/account/account.twig">
		<operation>
			<search>
				<![CDATA[{{ header }}]]>
			</search>
			<add position="after">
				<![CDATA[
					<style>
						.banner-style {
							background: linear-gradient(90deg, #F9D342 0%, #FFE066 50%, #F9D342 70%, #E6B800 100%);
							margin-left: 10px;
							margin-right: 10px;
							padding: 10px;
							padding-bottom: 20px;
							padding-top: 20px;
							color: #ffffff;
							margin: 15px;
							position: relative;
							border: 1px solid #ffffff;
							border-radius: 20px;
							overflow: hidden;
						}
						
						.banner-style span {
							line-height: 1.2 !important;
						}

						.desktop .banner-style {
						
							line-height: 2 !important;
							width:70%

						}
							
						@media (min-width: 992px) {
							.text-md-center {
								text-align: left !important;
							}
							.no-gutters {
								margin-left: 20px;
							}
							.barcode {
								padding: 0;
							}
						}
						
						@media (max-width: 991px) {
							.text-md-center {
								text-align: center !important;
							}
							.barcode {
								display: flex;
								justify-content: center;
							
							}
							.hutz-points {
								display: block;
								width: 100%;
								text-align: center;
								margin-top: 0.5rem;
							}
						}
					</style>
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[<li class="edit-recurring">]]>
			</search>
			<add position="before">
				<![CDATA[
					<li	class="edit-points">
						<a	href="{{ point }}">
							{{ text_point }}
						</a>
					</li>
					<li	class="edit-vouchers">
						<a	href="{{ voucher }}">
							{{ text_my_coupon }}
						</a>
					</li>
					<li	class="edit-redeem">
						<a	href="{{ redeem }}">
							{{ text_redeem_voucher }}
						</a>
					</li>
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[<h2 class="title">{{ text_my_account }}</h2>]]>
			</search>
			<add position="after">
				<![CDATA[
				<div id="reward-points-banner-block">
					<div id="reward-points-banner">
						<div class="banner-style text-center">
							<div class="row no-gutters" style="margin-top: 20px;">
								<div class="text-center" style="font-weight:900; font-size:30px; color:#5A0F14;">
									{{ text_membership }}
									
								</div>
								<div class="text-center" style="font-weight:600; font-size:25px; color:#5A0F14;">
									({{ customer_group_description }})
								</div>
								<div class="col-md-6 text-center barcode">
									<div style="background-color: #ffffff; border-radius: 4px; padding: 10px; width: 60%; height: auto; display: flex; flex-direction: column; align-items: center; justify-content: center; margin:20px;">
										<img src="{{ barcode }}" alt="Barcode Image" style="width: 100%; height: auto; margin-bottom:0.5rem;" />
										<span style="color:#000; font-weight:900; font-size:18px">
											{{ customer_info.telephone }}
										</span>
									</div>
								</div>
								<div class="col-md-6 text-center">
									<div class="col-12 row">
										<span class="text-center" style="font-weight:700; font-size:20px; color:#5A0F14;">
											{{ customer_info.firstname|upper }}
											{{ customer_info.lastname|upper }}
										</span>
										<div id="reward-points-value" style="color:#6A3B25; font-size:40px; font-weight:600">
											{{ customer_info.points|round|number_format(0, '.', ',') }}
										</div>
										<span style="color: #141300; font-weight:900; font-size:18px">
											Points
										</span>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[<li><a href="{{ wishlist }}">{{ text_wishlist }}</a></li>]]>
			</search>
			<add position="after">
				<![CDATA[
					<li><a href="{{ coupon }}">{{ text_my_coupon }}</a></li>
					<li><a href="{{ coupon_history }}">{{ text_coupon_history }}</a></li>
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/model/account/customer.php">
		<operation>
			<search>
				<![CDATA[$query = $this->db->query("SELECT COUNT(*) AS total FROM " . DB_PREFIX . "customer WHERE LOWER(email) = '" . $this->db->escape(utf8_strtolower($email)) . "'"); ]]>
			</search>
			<add position="replace">
				<![CDATA[$query = $this->db->query("SELECT COUNT(*) AS total FROM " . DB_PREFIX . "customer WHERE LOWER(email) = '" . $this->db->escape(utf8_strtolower($email)) . "' AND store_id = '" . (int)$this->config->get('config_store_id') . "'"); ]]>
			</add>
		</operation>
	</file>
	<!-- change the query for index -->
	<file path="admin/model/customer/customer.php">
		<operation>
			<search>
				<![CDATA[SELECT *, CONCAT(c.firstname, ' ', c.lastname) AS name, cgd.name AS customer_group FROM " . DB_PREFIX . "customer c LEFT JOIN " . DB_PREFIX . "customer_group_description cgd ON (c.customer_group_id = cgd.customer_group_id)]]>
			</search>
			<add position="replace">
				<![CDATA[ SELECT c.*, CONCAT(c.firstname, ' ', c.lastname) AS name, cgd.name AS customer_group, s.name AS store_name FROM oc_customer c LEFT JOIN oc_customer_group_description cgd ON c.customer_group_id = cgd.customer_group_id LEFT JOIN oc_store s ON c.store_id = s.store_id]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[public function getCustomers($data = array()) {]]>
			</search>
			<add position="before">
				<![CDATA[
					public function getCustomerByEmailStore($email, $storeId) {
						$query = $this->db->query("SELECT DISTINCT * FROM " . DB_PREFIX . "customer WHERE LCASE(email) = '" . $this->db->escape(utf8_strtolower($email)) . " AND `store_id` == $storeId'");
						return $query->row;
					}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$implode[] = "c.email LIKE '" . $this->db->escape($data['filter_email']) . "%'";]]>
			</search>
			<add position="after" offset="2">
				<![CDATA[
					if(isset($data['filter_store']) && $data['filter_store'] !== '') {
						$implode[] = "c.store_id = '" . (int)$data['filter_store'] . "'";
					}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$implode[] = "email LIKE '" . $this->db->escape($data['filter_email']) . "%'";]]>
			</search>
			<add position="before" offset="2">
				<![CDATA[
					if (isset($data['filter_store']) && $data['filter_store'] !== '') {
						$implode[] = "store_id = '" . (int)($data['filter_store']) . "'";
					}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$sort_data = array(]]>
			</search>
			<add position="after">
				<![CDATA['store_name',]]>
			</add>
		</operation>
	</file>
	<!-- VIEW -->
	<!-- change the table header -->
	<file path="admin/view/template/customer/customer_list.twig">
		<operation>
			<search>
				<![CDATA[<td class="text-left">{% if sort == 'c.email' %}<a href="{{ sort_email }}" class="{{ order|lower }}">{{ column_email }}</a>{% else %}<a href="{{ sort_email }}">{{ column_email }}</a>{% endif %}</td>]]>
			</search>
			<add position="after">
				<![CDATA[ <td class="text-left">{% if sort == 'store_name' %}<a href="{{ sort_store }}" class="{{ order|lower }}">{{ column_store }}</a>{% else %}<a href="{{ sort_store }}">{{ column_store }}</a>{% endif %}</td>]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[url += '&filter_name=' + encodeURIComponent(filter_name);]]>
			</search>
			<add position="after" offset="1">
				<![CDATA[
					var filter_store = $('input[name=\'filter_store\']').val();
					var filter_store = $('select[name=\'filter_store\']').val();
					if (filter_store) {
						url += '&filter_store=' + encodeURIComponent(filter_store);
					}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[<td class="text-left">{{ customer.email }}</td>]]>
			</search>
			<add position="after">
				<![CDATA[<td class="text-left">{{ customer.store_name != '' ? customer.store_name : default_stores.name }}</td>]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[<input type="text" name="filter_email" value="{{ filter_email }}" placeholder="{{ entry_email }}" id="input-email" class="form-control" />]]>
			</search>
			<add position="after" offset="1">
				<![CDATA[
					<div class="form-group">
						<label class="control-label" for="input-store">{{ entry_store }}</label>
						<select name="filter_store" id="input-store" class="form-control">
							<option value=""></option>
							{% for store in stores %}
								{% if store.store_id == filter_store and filter_store != "" %}
									<option value="{{ store.store_id }}" selected="selected">{{ store.name }}</option>
								{% else %}
									<option value="{{ store.store_id }}">{{ store.name }}</option>
								{% endif %}
							{% endfor %}
						</select>
					</div>
				]]>
			</add>
		</operation>
	</file>
	<file path="admin/view/template/customer/customer_form.twig">
		<operation>
			<search>
				<![CDATA[<input type="text" name="lastname" value="{{ lastname }}" placeholder="{{ entry_lastname }}" id="input-lastname" class="form-control" />]]>
			</search>
			<add position="after" offset="4">
				<![CDATA[
					{% if store_name %}
						<div class="form-group required">
							<label class="col-sm-2 control-label" for="input-store">{{ entry_store }}</label>
							<div class="col-sm-10">
								<input type="text" name="store_name" value="{{ store_name }}" placeholder="{{ entry_store }}" id="input-store" class="form-control" disabled />
								<input type="hidden" name="store_id" value="{{ store_id }}" placeholder="{{ entry_store }}" id="input-store" class="form-control" />
								{% if error_store %}
									<div class="text-danger">{{ error_store }}</div>
								{% endif %}
							</div>
						</div>
					{% endif %}
				]]>
			</add>
		</operation>
	</file>
	<!-- CONTROLLER -->
	<!-- change the filter -->
	<file path="admin/controller/customer/customer.php">
		<operation>
			<search>
				<![CDATA[ if (isset($this->request->get['filter_email'])) {]]>
			</search>
			<add position="before">
				<![CDATA[
					if (isset($this->request->get['filter_store'])) {
						$filter_store = $this->request->get['filter_store'];
					} else {
						$filter_store = '';
					}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[ $data['filter_email'] = $filter_email;]]>
			</search>
			<add position="after">
				<![CDATA[
					$data['filter_store'] = $filter_store;
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[ if (isset($this->request->post['custom_field'])) {]]>
			</search>
			<add position="before">
				<![CDATA[
					if (isset($this->request->post['store_id'])) {
						$data['store_id'] = $this->request->post['store_id'];
					} elseif (!empty($customer_info)) {
						$data['store_id'] = $customer_info['store_id'];
					} else {
						$data['store_id'] = '';
					}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[ if ($customer_info && ($this->request->get['customer_id'] != $customer_info['customer_id'])) {]]>
			</search>
			<add position="before">
				<![CDATA[ $customer_info = $this->model_customer_customer->getCustomerByEmailStore($this->request->post['email'], $this->request->post['store_id']); ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[ $data['customer_groups'] = $this->model_customer_customer_group->getCustomerGroups();]]>
			</search>
			<add position="before">
				<![CDATA[
					$data['stores'][] = array(
						'store_id' => 0,
						'name' => $this->config->get('config_name'),
					);

					$stores = $this->model_setting_store->getStores();

					foreach ($stores as $store) {
						$data['stores'][] = array(
							'store_id' => $store['store_id'],
							'name'  => $store['name']
						);
					}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$data['customers'][] = array(]]>
			</search>
			<add position="before">
				<![CDATA[
					if($result['store_id'] == 0){
						$result['store_name'] = $this->config->get('config_name');
					}
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$url .= '&filter_email=' . urlencode(html_entity_decode($this->request->get['filter_email'], ENT_QUOTES, 'UTF-8'));]]>
			</search>
			<add position="before" offset="1">
				<![CDATA[
					if (isset($this->request->get['filter_store'])) {
						$url .= '&filter_store=' . urlencode(html_entity_decode($this->request->get['filter_store'], ENT_QUOTES, 'UTF-8'));
					}
				]]>
			</add>
		</operation>
	</file>
	<file path="admin/controller/customer/customer.php">
		<operation>
			<search>
				<![CDATA[$customer_info = $this->model_customer_customer->getCustomer($this->request->get['customer_id']);]]>
			</search>
			<add position="after">
				<![CDATA[
					$this->load->model('setting/store');
					$store = $this->model_setting_store->getStore($customer_info['store_id']);
					if( $customer_info['store_id'] == 0){
						$data['store_name'] = $this->config->get('config_name');
					} else {
						$data['store_name'] = $store['name'];
					}
					$data['store_id']= $customer_info['store_id'];
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA['filter_email'             => $filter_email,]]>
			</search>
			<add position="before">
				<![CDATA[ 'filter_store'=> $filter_store, ]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA['email'          => $result['email'],]]>
			</search>
			<add position="after">
				<![CDATA['store_name' => $result['store_name'],]]>
			</add>
		</operation>
		
		<operation>
			<search>
				<![CDATA[$data['sort_email'] = $this->url->link('customer/customer', 'user_token=' . $this->session->data['user_token'] . '&sort=c.email' . $url, true);]]>
			</search>
			<add position="after">
				<![CDATA[$data['sort_store'] = $this->url->link('customer/customer', 'user_token=' . $this->session->data['user_token'] . '&sort=store_name' . $url, true);]]>
			</add>
		</operation>
	</file>
	<!-- LANGUAGE -->
	<!-- language file -->
	<file path="admin/language/en-gb/customer/customer.php">
		<operation>
			<search>
				<![CDATA[$_['entry_email']]]>
			</search>
			<add position="after">
				<![CDATA[$_['entry_store'] = 'Store Name';]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$_['column_email']]]>
			</search>
			<add position="after">
				<![CDATA[$_['column_store'] = 'Store';]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$_['entry_email']]]>
			</search>
			<add position="after">
				<![CDATA[$_['text_select'] = 'Select';]]>
			</add>
		</operation>
	</file>


	<!-- otherss -->

	<file path="catalog/controller/account/password.php">
		<operation>
			<search>
				<![CDATA[$this->model_account_customer->editPassword($this->customer->getEmail(), $this->request->post['password']);]]>
			</search>
			<add position="replace">
				<![CDATA[
					//$this->model_account_customer->editPassword($this->customer->getEmail(), $this->request->post['password']);
					$this->model_account_customer->editPasswordStore($this->customer->getId(), $this->request->post['password']);
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/model/account/customer.php">
		<operation>
			<search>
				<![CDATA[public function editPassword($email, $password) {]]>
			</search>
			<add position="before">
				<![CDATA[
					public function editPasswordStore($customer_id, $password) {
						$this->db->query("UPDATE " . DB_PREFIX . "customer SET salt = '" . $this->db->escape($salt = token(9)) . "', password = '" . $this->db->escape(sha1($salt . sha1($salt . sha1($password)))) . "', code = '' WHERE customer_id = $customer_id");
					}
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/controller/account/reset.php">
		<operation>
			<search>
				<![CDATA[$this->model_account_customer->editPassword($customer_info['email'], $this->request->post['password']);]]>
			</search>
			<add position="before">
				<![CDATA[
					//$this->model_account_customer->editPassword($this->customer->getEmail(), $this->request->post['password']);
					$this->model_account_customer->editPasswordStore($this->customer->customer_info['customer_id'], $this->request->post['password']);
				]]>
			</add>
		</operation>
	</file>
	<file path="system/library/cart/customer.php">
		<operation>
			<search>
				<![CDATA[$customer_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "customer WHERE LOWER(email) = '" . $this->db->escape(utf8_strtolower($email)) . "' AND status = '1'");]]>
			</search>
			<add position="replace">
				<![CDATA[$customer_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "customer WHERE LOWER(email) = '" . $this->db->escape(utf8_strtolower($email)) . "' AND status = '1' AND store_id = " . $this->config->get('config_store_id'));]]> 
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[$customer_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "customer WHERE LOWER(email) = '" . $this->db->escape(utf8_strtolower($email)) . "' AND (password = SHA1(CONCAT(salt, SHA1(CONCAT(salt, SHA1('" . $this->db->escape($password) . "'))))) OR password = '" . $this->db->escape(md5($password)) . "') AND status = '1'");]]>
			</search>
			<add position="replace">
				<![CDATA[$customer_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "customer WHERE LOWER(email) = '" . $this->db->escape(utf8_strtolower($email)) . "' AND (password = SHA1(CONCAT(salt, SHA1(CONCAT(salt, SHA1('" . $this->db->escape($password) . "'))))) OR password = '" . $this->db->escape(md5($password)) . "') AND status = '1' AND status = '1' AND store_id = " . $this->config->get('config_store_id'));]]> 
			</add>
		</operation>
	</file>
</modification>
